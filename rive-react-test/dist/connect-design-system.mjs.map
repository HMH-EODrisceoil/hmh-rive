{"version":3,"file":"connect-design-system.mjs","sources":["../src/components/Blockquote/Blockquote.tsx","../src/components/Icon/Icon.tsx","../src/components/Button/Button.tsx","../src/context/ButtonMenuContext.tsx","../src/context/ButtonMenuHooks.ts","../src/components/ButtonMenu/ButtonMenu.tsx","../src/components/Typography/Typography.tsx","../node_modules/.pnpm/@connect+hmh-rive@2.0.4/node_modules/@connect/hmh-rive/dist/bundle.js","../src/components/ButtonRive/ButtonRive.tsx","../src/components/ButtonSplit/ButtonSplit.tsx","../src/components/FigCaption/FigCaption.tsx","../src/components/Figure/Figure.tsx","../src/components/Card/CardHeader.tsx","../src/components/Card/CardMain.tsx","../src/components/Card/CardFooter.tsx","../src/components/Card/Card.tsx","../src/components/Chip/Chip.tsx","../src/components/Divider/Divider.tsx","../src/components/Footer/Footer.tsx","../src/components/Header/Header.tsx","../src/components/Image/Image.tsx","../src/components/InputBox/InputBox.tsx","../src/components/InputText/InputText.tsx","../src/components/List/List.tsx","../src/components/MultipleChoiceQuestion/MultipleChoiceQuestion.tsx","../src/components/Paper/Paper.tsx","../src/components/ProgressBar/ProgressBar.tsx","../src/context/GradeBandContext.tsx","../src/enum/gradeband.ts","../src/components/RiveSimple/RiveSimple.tsx","../src/components/SelectBox/SelectBox.tsx","../src/components/Sidebar/Sidebar.tsx","../src/components/SingleBlockquote/SingleBlockquote.tsx","../src/components/SingleImage/SingleImage.tsx","../src/components/ConnectTheme.tsx","../src/components/Grid/Grid.tsx","../src/components/GridItem.tsx","../src/components/Stack/Stack.tsx"],"sourcesContent":["import React from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type BlockquoteProps = {\n  children: React.ReactNode;\n  gradeBand?: GradeBand | undefined;\n};\n\nexport const Blockquote: React.FC<BlockquoteProps> = ({ children }) => {\n  return <blockquote className=\"connect__blockquote\">{children}</blockquote>;\n};\n","import React from 'react';\nimport { Color } from '../../utils/colors';\nimport { IconId } from '../../utils/icon-list';\nimport { GradeBand } from 'src/enum/gradeband';\n// import sprite from '/dist/svg/sprite.svg';\n// import sprite from '/public/svg/sprite.svg';\n\nexport type IconProps = {\n  id: IconId;\n  size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl' | 'unset';\n  fill?: Color | undefined;\n  stroke?: Color | undefined;\n  opacity?: number | undefined;\n  focusable?: boolean;\n  className?: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const Icon: React.FC<IconProps> = ({\n  id = 'add',\n  size = 'md',\n  fill,\n  stroke,\n  opacity = 1,\n  focusable = false,\n  className,\n  dataTestId,\n}) => {\n  const fillColorVariable = fill ? `--connect__${fill}` : '';\n  const strokeColorVariable = fill ? `--connect__${stroke}` : '';\n\n  const spriteUrl =\n    import.meta.env.PROD === true && import.meta.env.VITE_ENV !== 'chromatic'\n      ? '/node_modules/@connect/connect-design-system/dist/svg/sprite.svg'\n      : '/svg/sprite.svg';\n\n  return (\n    <svg\n      className={`connect__icon connect__icon-${size} ${className}`}\n      style={\n        {\n          '--connect__icon-fill-color': `var(${fillColorVariable})`,\n          '--connect__icon-stroke-color': `var(${strokeColorVariable})`,\n          '--connect__icon-opacity': `${opacity}`,\n        } as React.CSSProperties\n      }\n      aria-hidden=\"true\"\n      focusable={focusable}\n      data-testid={dataTestId}\n    >\n      <use xlinkHref={`${spriteUrl}#${id}`} href={`${spriteUrl}#${id}`} />\n    </svg>\n  );\n};\n","import React from 'react';\nimport { Icon } from '../Icon/Icon';\nimport { IconId } from '../../utils/icon-list';\nimport { Color } from '../../utils/colors';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type ButtonProps = {\n  children: React.ReactNode;\n  primary: boolean;\n  title?: string;\n  disabled?: boolean;\n  correct?: boolean;\n  incorrect?: boolean;\n  submit?: 'button' | 'submit';\n  clickHandler?: () => void;\n  iconId?: IconId;\n  iconSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  fill?: Color;\n  iconPosition?: 'before' | 'after';\n  iconOpacity?: number | undefined;\n  ariaLabel?: string;\n  dataTestId?: string;\n  additionalClass?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const Button: React.FC<ButtonProps> = ({\n  children,\n  primary = true,\n  title,\n  disabled = false,\n  correct,\n  incorrect,\n  submit = 'button',\n  clickHandler,\n  iconId,\n  iconSize = 'md',\n  fill,\n  iconPosition = 'before',\n  iconOpacity,\n  ariaLabel,\n  dataTestId,\n  additionalClass = '',\n}) => {\n  const classNames = [\n    'connect__button',\n    primary && 'connect__button-primary',\n    !primary && 'connect__button-secondary',\n    correct && 'connect__button-correct',\n    incorrect && 'connect__button-incorrect',\n    additionalClass,\n  ]\n    .filter(Boolean)\n    .join(' ');\n\n  const iconElement = iconId ? (\n    <Icon id={iconId} size={iconSize} fill={fill} opacity={iconOpacity} />\n  ) : null;\n\n  return (\n    <button\n      type={submit}\n      className={classNames}\n      onClick={clickHandler}\n      disabled={disabled}\n      data-testid={dataTestId}\n      aria-label={ariaLabel || (iconId && !children ? `Icon button ${iconId}` : undefined)}\n      title={title ? title : ariaLabel}\n    >\n      {iconPosition === 'before' && iconElement}\n      {children}\n      {iconPosition === 'after' && iconElement}\n    </button>\n  );\n};\n","import React, { createContext, useState } from 'react';\n\ntype ButtonContextType = {\n  clickedButtonId: string | null;\n  setClickedButtonId: (id: string | null) => void;\n};\n\nexport const ButtonMenuContext = createContext<ButtonContextType | undefined>(undefined);\n\nexport const ButtonMenuProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  const [clickedButtonId, setClickedButtonId] = useState<string | null>(null);\n\n  return (\n    <ButtonMenuContext.Provider value={{ clickedButtonId, setClickedButtonId }}>\n      {children}\n    </ButtonMenuContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { ButtonMenuContext } from '../context/ButtonMenuContext';\n\nexport const useButtonMenuContext = () => {\n  const context = useContext(ButtonMenuContext);\n  if (context === undefined) {\n    throw new Error('useButtonMenuContext must be used within a ButtonMenuProvider');\n  }\n  return context;\n};\n","import React from 'react';\nimport { Icon } from '../Icon/Icon';\nimport { IconId } from '../../utils/icon-list';\nimport { Color } from '../../utils/colors';\nimport { GradeBand } from 'src/enum/gradeband';\nimport { useButtonMenuContext } from '../../context/ButtonMenuHooks';\n\nexport type ButtonMenuProps = {\n  id: string;\n  children: React.ReactNode;\n  title?: string;\n  clickHandler?: () => void;\n  iconId?: IconId;\n  iconSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  fill?: Color;\n  iconPosition?: 'before' | 'after';\n  ariaLabel?: string;\n  dataTestId?: string;\n  additionalClass?: string;\n  clickedClass?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const ButtonMenu: React.FC<ButtonMenuProps> = ({\n  id,\n  children,\n  title,\n  clickHandler,\n  iconId,\n  iconSize = 'md',\n  fill,\n  iconPosition = 'before',\n  ariaLabel,\n  additionalClass = '',\n  clickedClass,\n  dataTestId,\n}) => {\n  const { clickedButtonId, setClickedButtonId } = useButtonMenuContext();\n\n  const handleClick = () => {\n    setClickedButtonId(clickedButtonId === id ? null : id);\n    if (clickHandler) clickHandler();\n  };\n\n  const isClicked = clickedButtonId === id;\n\n  const classNames = [\n    'connect__button',\n    'connect__button-menu',\n    additionalClass,\n    isClicked && clickedClass,\n  ]\n    .filter(Boolean)\n    .join(' ');\n\n  const iconElement = iconId ? <Icon id={iconId} size={iconSize} fill={fill} /> : null;\n\n  return (\n    <button\n      id={id}\n      className={classNames}\n      onClick={handleClick}\n      data-testid={dataTestId}\n      aria-label={ariaLabel || (iconId && !children ? `Icon button ${iconId}` : undefined)}\n      title={title ? title : ariaLabel}\n    >\n      {iconPosition === 'before' && iconElement}\n      {children}\n      {iconPosition === 'after' && iconElement}\n    </button>\n  );\n};\n","import React from 'react';\nimport { Color } from '../../utils/colors';\nimport { GradeBand } from '../../enum/gradeband';\n\ntype Size =\n  | 'heading-xl'\n  | 'heading-lg'\n  | 'heading-md'\n  | 'heading-sm'\n  | 'body-lg'\n  | 'body-md'\n  | 'body-sm'\n  | 'caption'\n  | 'credits';\n\nexport interface TypographyProps {\n  children: React.ReactNode;\n  element?: React.ElementType;\n  color?: Color;\n  family?: 'sans' | 'serif' | 'mono';\n  size?: Size;\n  style?: 'normal' | 'italic' | 'oblique';\n  weight?: 100 | 200 | 300 | 400 | 500 | 600 | 700 | 800 | 900;\n  letterSpacing?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  textAlign?: React.CSSProperties['textAlign'];\n  textTransform?: React.CSSProperties['textTransform'];\n  opacity?: React.CSSProperties['opacity'];\n  className?: string;\n  dataTestId?: string;\n  ariaLive?: 'polite' | 'assertive' | 'off';\n  gradeBand?: GradeBand;\n}\n\nexport const Typography: React.FC<TypographyProps> = ({\n  children,\n  element: Component = 'span',\n  color,\n  family = 'sans',\n  size,\n  style = 'normal',\n  weight,\n  letterSpacing,\n  textAlign,\n  textTransform,\n  opacity,\n  className,\n  dataTestId,\n  ariaLive,\n}) => {\n  const typoProps: React.CSSProperties = {};\n\n  if (color) {\n    const colorVariable = `--connect__${color}`;\n    typoProps.color = `var(${colorVariable})`;\n  }\n\n  if (family) {\n    typoProps.fontFamily = `var(--connect__font-${family})`;\n  }\n  if (letterSpacing) {\n    typoProps.letterSpacing = `var(--connect__spacer-${letterSpacing})`;\n  }\n  if (style) typoProps.fontStyle = style;\n  if (weight) {\n    const weightVariable = `--connect__fw`;\n    typoProps.fontWeight = `var(${weightVariable}, ${weight})`;\n  }\n  if (textAlign) typoProps.textAlign = textAlign;\n  if (textTransform) typoProps.textTransform = textTransform;\n  if (opacity) typoProps.opacity = opacity;\n  if (size) {\n    typoProps.fontSize = `var(--connect__${size})`;\n    typoProps.lineHeight = `var(--connect__${size}-lheight)`;\n  }\n\n  return (\n    <Component\n      {...(Object.keys(typoProps).length > 0 ? { style: typoProps } : {})}\n      className={className}\n      data-testid={dataTestId}\n      aria-live={ariaLive}\n    >\n      {children}\n    </Component>\n  );\n};\n","/*! For license information please see bundle.js.LICENSE.txt */\n(()=>{var t={52:function(t){var e;e=()=>(()=>{\"use strict\";var t=[,(t,e,n)=>{n.r(e),n.d(e,{default:()=>a});var r,i=(r=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(t={}){var e,n,i=t;function a(){function t(t){const a=r;n=e=0,r=new Map,a.forEach((e=>{try{e(t)}catch(t){console.error(t)}})),this.ob(),i&&i.Tb()}let e=0,n=0,r=new Map,i=null,a=null;this.requestAnimationFrame=function(i){e||(e=requestAnimationFrame(t.bind(this)));const a=++n;return r.set(a,i),a},this.cancelAnimationFrame=function(t){r.delete(t),e&&0==r.size&&(cancelAnimationFrame(e),e=0)},this.Rb=function(t){a&&(document.body.remove(a),a=null),t||(a=document.createElement(\"div\"),a.style.backgroundColor=\"black\",a.style.position=\"fixed\",a.style.right=0,a.style.top=0,a.style.color=\"white\",a.style.padding=\"4px\",a.innerHTML=\"RIVE FPS\",t=function(t){a.innerHTML=\"RIVE FPS \"+t.toFixed(1)},document.body.appendChild(a)),i=new function(){let e=0,n=0;this.Tb=function(){var r=performance.now();n?(++e,1e3<(r-=n)&&(t(1e3*e/r),e=n=0)):(n=r,e=0)}}},this.Ob=function(){a&&(document.body.remove(a),a=null),i=null},this.ob=function(){}}function o(t){console.assert(!0);const e=new Map;let n=-1/0;this.push=function(r){return r=r+((1<<t)-1)>>t,e.has(r)&&clearTimeout(e.get(r)),e.set(r,setTimeout((function(){e.delete(r),0==e.length?n=-1/0:r==n&&(n=Math.max(...e.keys()),console.assert(n<r))}),1e3)),n=Math.max(r,n),n<<t}}i.ready=new Promise(((t,r)=>{e=t,n=r}));const s=i.onRuntimeInitialized;i.onRuntimeInitialized=function(){s&&s();let t=i.decodeAudio;i.decodeAudio=function(e,n){n(e=t(e))};let e=i.decodeFont;i.decodeFont=function(t,n){n(t=e(t))};const n=i.FileAssetLoader;i.ptrToAsset=t=>{let e=i.ptrToFileAsset(t);return e.isImage?i.ptrToImageAsset(t):e.isFont?i.ptrToFontAsset(t):e.isAudio?i.ptrToAudioAsset(t):e},i.CustomFileAssetLoader=n.extend(\"CustomFileAssetLoader\",{__construct:function({loadContents:t}){this.__parent.__construct.call(this),this.Gb=t},loadContents:function(t,e){return t=i.ptrToAsset(t),this.Gb(t,e)}}),i.CDNFileAssetLoader=n.extend(\"CDNFileAssetLoader\",{__construct:function(){this.__parent.__construct.call(this)},loadContents:function(t){let e=i.ptrToAsset(t);return\"\"!==(t=e.cdnUuid)&&(n=e.cdnBaseUrl+\"/\"+t,(r=new XMLHttpRequest).responseType=\"arraybuffer\",r.onreadystatechange=function(){4==r.readyState&&200==r.status&&(t=>{e.decode(new Uint8Array(t.response))})(r)},r.open(\"GET\",n,!0),r.send(null),!0);var n,r}}),i.FallbackFileAssetLoader=n.extend(\"FallbackFileAssetLoader\",{__construct:function(){this.__parent.__construct.call(this),this.kb=[]},addLoader:function(t){this.kb.push(t)},loadContents:function(t,e){for(let n of this.kb)if(n.loadContents(t,e))return!0;return!1}})};const u=\"createConicGradient createImageData createLinearGradient createPattern createRadialGradient getContextAttributes getImageData getLineDash getTransform isContextLost isPointInPath isPointInStroke measureText\".split(\" \"),c=new function(){function t(){if(!e){var t=document.createElement(\"canvas\"),o={alpha:1,depth:0,stencil:0,antialias:0,premultipliedAlpha:1,preserveDrawingBuffer:0,preferLowPowerToHighPerformance:0,failIfMajorPerformanceCaveat:0,enableExtensionsByDefault:1,explicitSwapControl:1,renderViaOffscreenBackBuffer:1};let s;if(/iPhone|iPad|iPod/i.test(navigator.userAgent)){if(s=t.getContext(\"webgl\",o),n=1,!s)return console.log(\"No WebGL support. Image mesh will not be drawn.\"),!1}else if(s=t.getContext(\"webgl2\",o))n=2;else{if(!(s=t.getContext(\"webgl\",o)))return console.log(\"No WebGL support. Image mesh will not be drawn.\"),!1;n=1}function u(t,e,n){if(e=s.createShader(e),s.shaderSource(e,n),s.compileShader(e),0<((n=s.getShaderInfoLog(e))||\"\").length)throw n;s.attachShader(t,e)}if(s=new Proxy(s,{get:(t,e)=>t.isContextLost()?(c||(console.error(\"Cannot render the mesh because the GL Context was lost. Tried to invoke \",e),c=!0),\"function\"==typeof t[e]?function(){}:void 0):\"function\"==typeof t[e]?function(...n){return t[e].apply(t,n)}:t[e],set(t,e,n){if(!t.isContextLost())return t[e]=n,!0;c||(console.error(\"Cannot render the mesh because the GL Context was lost. Tried to set property \"+e),c=!0)}}),r=Math.min(s.getParameter(s.MAX_RENDERBUFFER_SIZE),s.getParameter(s.MAX_TEXTURE_SIZE)),u(t=s.createProgram(),s.VERTEX_SHADER,\"attribute vec2 vertex;\\n                attribute vec2 uv;\\n                uniform vec4 mat;\\n                uniform vec2 translate;\\n                varying vec2 st;\\n                void main() {\\n                    st = uv;\\n                    gl_Position = vec4(mat2(mat) * vertex + translate, 0, 1);\\n                }\"),u(t,s.FRAGMENT_SHADER,\"precision highp float;\\n                uniform sampler2D image;\\n                varying vec2 st;\\n                void main() {\\n                    gl_FragColor = texture2D(image, st);\\n                }\"),s.bindAttribLocation(t,0,\"vertex\"),s.bindAttribLocation(t,1,\"uv\"),s.linkProgram(t),0<((o=s.getProgramInfoLog(t))||\"\").trim().length)throw o;i=s.getUniformLocation(t,\"mat\"),a=s.getUniformLocation(t,\"translate\"),s.useProgram(t),s.bindBuffer(s.ARRAY_BUFFER,s.createBuffer()),s.enableVertexAttribArray(0),s.enableVertexAttribArray(1),s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,s.createBuffer()),s.uniform1i(s.getUniformLocation(t,\"image\"),0),s.pixelStorei(s.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!0),e=s}return!0}let e=null,n=0,r=0,i=null,a=null,s=0,u=0,c=!1;t(),this.hc=function(){return t(),r},this.Mb=function(t){e.deleteTexture&&e.deleteTexture(t)},this.Lb=function(r){if(!t())return null;const i=e.createTexture();return i?(e.bindTexture(e.TEXTURE_2D,i),e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,r),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.LINEAR),2==n?(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR_MIPMAP_LINEAR),e.generateMipmap(e.TEXTURE_2D)):e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR),i):null};const l=new o(8),h=new o(8),f=new o(10),d=new o(10);this.Qb=function(n,r,o,c,p){if(t()){var v=l.push(n),m=h.push(r);if(e.canvas){for(var y of(e.canvas.width==v&&e.canvas.height==m||(e.canvas.width=v,e.canvas.height=m),e.viewport(0,m-r,n,r),e.disable(e.SCISSOR_TEST),e.clearColor(0,0,0,0),e.clear(e.COLOR_BUFFER_BIT),e.enable(e.SCISSOR_TEST),o.sort(((t,e)=>e.wb-t.wb)),v=f.push(c),s!=v&&(e.bufferData(e.ARRAY_BUFFER,8*v,e.DYNAMIC_DRAW),s=v),v=0,o))e.bufferSubData(e.ARRAY_BUFFER,v,y.Ta),v+=4*y.Ta.length;for(var g of(console.assert(v==4*c),o))e.bufferSubData(e.ARRAY_BUFFER,v,g.Db),v+=4*g.Db.length;for(var b of(console.assert(v==8*c),v=d.push(p),u!=v&&(e.bufferData(e.ELEMENT_ARRAY_BUFFER,2*v,e.DYNAMIC_DRAW),u=v),y=0,o))e.bufferSubData(e.ELEMENT_ARRAY_BUFFER,y,b.indices),y+=2*b.indices.length;console.assert(y==2*p),b=0,g=!0,v=y=0;for(const t of o){t.image.Ka!=b&&(e.bindTexture(e.TEXTURE_2D,t.image.Ja||null),b=t.image.Ka),t.mc?(e.scissor(t.Ya,m-t.Za-t.jb,t.Ac,t.jb),g=!0):g&&(e.scissor(0,m-r,n,r),g=!1),o=2/n;const s=-2/r;e.uniform4f(i,t.ha[0]*o*t.Ba,t.ha[1]*s*t.Ca,t.ha[2]*o*t.Ba,t.ha[3]*s*t.Ca),e.uniform2f(a,t.ha[4]*o*t.Ba+o*(t.Ya-t.ic*t.Ba)-1,t.ha[5]*s*t.Ca+s*(t.Za-t.jc*t.Ca)+1),e.vertexAttribPointer(0,2,e.FLOAT,!1,0,v),e.vertexAttribPointer(1,2,e.FLOAT,!1,0,v+4*c),e.drawElements(e.TRIANGLES,t.indices.length,e.UNSIGNED_SHORT,y),v+=4*t.Ta.length,y+=2*t.indices.length}console.assert(v==4*c),console.assert(y==2*p)}}},this.canvas=function(){return t()&&e.canvas}},l=i.onRuntimeInitialized;i.onRuntimeInitialized=function(){function t(t){switch(t){case p.srcOver:return\"source-over\";case p.screen:return\"screen\";case p.overlay:return\"overlay\";case p.darken:return\"darken\";case p.lighten:return\"lighten\";case p.colorDodge:return\"color-dodge\";case p.colorBurn:return\"color-burn\";case p.hardLight:return\"hard-light\";case p.softLight:return\"soft-light\";case p.difference:return\"difference\";case p.exclusion:return\"exclusion\";case p.multiply:return\"multiply\";case p.hue:return\"hue\";case p.saturation:return\"saturation\";case p.color:return\"color\";case p.luminosity:return\"luminosity\"}}function e(t){return\"rgba(\"+((16711680&t)>>>16)+\",\"+((65280&t)>>>8)+\",\"+((255&t)>>>0)+\",\"+((4278190080&t)>>>24)/255+\")\"}function n(){0<E.length&&(c.Qb(C.drawWidth(),C.drawHeight(),E,T,P),E=[],P=T=0,C.reset(512,512));for(const t of A){for(const e of t.J)e();t.J=[]}A.clear()}l&&l();var r=i.RenderPaintStyle;const o=i.RenderPath,s=i.RenderPaint,h=i.Renderer,f=i.StrokeCap,d=i.StrokeJoin,p=i.BlendMode,v=r.fill,m=r.stroke,y=i.FillRule.evenOdd;let g=1;var b=i.RenderImage.extend(\"CanvasRenderImage\",{__construct:function({la:t,xa:e}={}){this.__parent.__construct.call(this),this.Ka=g,g=g+1&2147483647||1,this.la=t,this.xa=e},__destruct:function(){this.Ja&&(c.Mb(this.Ja),URL.revokeObjectURL(this.Wa)),this.__parent.__destruct.call(this)},decode:function(t){var e=this;e.xa&&e.xa(e);var n=new Image;e.Wa=URL.createObjectURL(new Blob([t],{type:\"image/png\"})),n.onload=function(){e.Fb=n,e.Ja=c.Lb(n),e.size(n.width,n.height),e.la&&e.la(e)},n.src=e.Wa}}),w=o.extend(\"CanvasRenderPath\",{__construct:function(){this.__parent.__construct.call(this),this.T=new Path2D},rewind:function(){this.T=new Path2D},addPath:function(t,e,n,r,i,a,o){var s=this.T,u=s.addPath;t=t.T;const c=new DOMMatrix;c.a=e,c.b=n,c.c=r,c.d=i,c.e=a,c.f=o,u.call(s,t,c)},fillRule:function(t){this.Va=t},moveTo:function(t,e){this.T.moveTo(t,e)},lineTo:function(t,e){this.T.lineTo(t,e)},cubicTo:function(t,e,n,r,i,a){this.T.bezierCurveTo(t,e,n,r,i,a)},close:function(){this.T.closePath()}}),_=s.extend(\"CanvasRenderPaint\",{color:function(t){this.Xa=e(t)},thickness:function(t){this.Ib=t},join:function(t){switch(t){case d.miter:this.Ia=\"miter\";break;case d.round:this.Ia=\"round\";break;case d.bevel:this.Ia=\"bevel\"}},cap:function(t){switch(t){case f.butt:this.Ha=\"butt\";break;case f.round:this.Ha=\"round\";break;case f.square:this.Ha=\"square\"}},style:function(t){this.Hb=t},blendMode:function(e){this.Eb=t(e)},clearGradient:function(){this.ja=null},linearGradient:function(t,e,n,r){this.ja={yb:t,zb:e,bb:n,cb:r,Ra:[]}},radialGradient:function(t,e,n,r){this.ja={yb:t,zb:e,bb:n,cb:r,Ra:[],ec:!0}},addStop:function(t,e){this.ja.Ra.push({color:t,stop:e})},completeGradient:function(){},draw:function(t,n,r){let i=this.Hb;var a=this.Xa,o=this.ja;if(t.globalCompositeOperation=this.Eb,null!=o){a=o.yb;var s=o.zb;const n=o.bb;var u=o.cb;const r=o.Ra;o.ec?(o=n-a,u-=s,a=t.createRadialGradient(a,s,0,a,s,Math.sqrt(o*o+u*u))):a=t.createLinearGradient(a,s,n,u);for(let t=0,n=r.length;t<n;t++)s=r[t],a.addColorStop(s.stop,e(s.color));this.Xa=a,this.ja=null}switch(i){case m:t.strokeStyle=a,t.lineWidth=this.Ib,t.lineCap=this.Ha,t.lineJoin=this.Ia,t.stroke(n);break;case v:t.fillStyle=a,t.fill(n,r)}}});const A=new Set;let C=null,E=[],T=0,P=0;var R=i.CanvasRenderer=h.extend(\"Renderer\",{__construct:function(t){this.__parent.__construct.call(this),this.S=[1,0,0,1,0,0],this.C=t.getContext(\"2d\"),this.Ua=t,this.J=[]},save:function(){this.S.push(...this.S.slice(this.S.length-6)),this.J.push(this.C.save.bind(this.C))},restore:function(){const t=this.S.length-6;if(6>t)throw\"restore() called without matching save().\";this.S.splice(t),this.J.push(this.C.restore.bind(this.C))},transform:function(t,e,n,r,i,a){const o=this.S,s=o.length-6;o.splice(s,6,o[s]*t+o[s+2]*e,o[s+1]*t+o[s+3]*e,o[s]*n+o[s+2]*r,o[s+1]*n+o[s+3]*r,o[s]*i+o[s+2]*a+o[s+4],o[s+1]*i+o[s+3]*a+o[s+5]),this.J.push(this.C.transform.bind(this.C,t,e,n,r,i,a))},rotate:function(t){const e=Math.sin(t);t=Math.cos(t),this.transform(t,e,-e,t,0,0)},_drawPath:function(t,e){this.J.push(e.draw.bind(e,this.C,t.T,t.Va===y?\"evenodd\":\"nonzero\"))},_drawRiveImage:function(e,n,r){var i=e.Fb;if(i){var a=this.C,o=t(n);this.J.push((function(){a.globalCompositeOperation=o,a.globalAlpha=r,a.drawImage(i,0,0),a.globalAlpha=1}))}},_getMatrix:function(t){const e=this.S,n=e.length-6;for(let r=0;6>r;++r)t[r]=e[n+r]},_drawImageMesh:function(e,r,a,o,s,u,l,h,f,d){var p=this.C.canvas.width,v=this.C.canvas.height;const m=f-l,y=d-h;l=Math.max(l,0),h=Math.max(h,0),f=Math.min(f,p),d=Math.min(d,v);const g=f-l,b=d-h;if(console.assert(g<=Math.min(m,p)),console.assert(b<=Math.min(y,v)),!(0>=g||0>=b)){f=g<m||b<y,p=d=1;var w=Math.ceil(g*d),_=Math.ceil(b*p);v=c.hc(),w>v&&(d*=v/w,w=v),_>v&&(p*=v/_,_=v),C||(C=new i.DynamicRectanizer(v),C.reset(512,512)),0>(v=C.addRect(w,_))&&(n(),A.add(this),v=C.addRect(w,_),console.assert(0<=v));var R=65535&v,L=v>>16;E.push({ha:this.S.slice(this.S.length-6),image:e,Ya:R,Za:L,ic:l,jc:h,Ac:w,jb:_,Ba:d,Ca:p,Ta:new Float32Array(o),Db:new Float32Array(s),indices:new Uint16Array(u),mc:f,wb:e.Ka<<1|(f?1:0)}),T+=o.length,P+=u.length;var S=this.C,M=t(r);this.J.push((function(){S.save(),S.resetTransform(),S.globalCompositeOperation=M,S.globalAlpha=a;const t=c.canvas();t&&S.drawImage(t,R,L,w,_,l,h,g,b),S.restore()}))}},_clipPath:function(t){this.J.push(this.C.clip.bind(this.C,t.T,t.Va===y?\"evenodd\":\"nonzero\"))},clear:function(){A.add(this),this.J.push(this.C.clearRect.bind(this.C,0,0,this.Ua.width,this.Ua.height))},flush:function(){},translate:function(t,e){this.transform(1,0,0,1,t,e)}});i.makeRenderer=function(t){const e=new R(t),n=e.C;return new Proxy(e,{get(t,r){if(\"function\"==typeof t[r])return function(...e){return t[r].apply(t,e)};if(\"function\"==typeof n[r]){if(-1<u.indexOf(r))throw Error(\"RiveException: Method call to '\"+r+\"()' is not allowed, as the renderer cannot immediately pass through the return                 values of any canvas 2d context methods.\");return function(...t){e.J.push(n[r].bind(n,...t))}}return t[r]},set(t,e,r){if(e in n)return n[e]=r,!0}})},i.decodeImage=function(t,e){new b({la:e}).decode(t)},i.renderFactory={makeRenderPaint:function(){return new _},makeRenderPath:function(){return new w},makeRenderImage:function(){let t=S;return new b({xa:()=>{t.total++},la:()=>{if(t.loaded++,t.loaded===t.total){const e=t.ready;e&&(e(),t.ready=null)}}})}};let L=i.load,S=null;i.load=function(t,e,n=!0){const r=new i.FallbackFileAssetLoader;return void 0!==e&&r.addLoader(e),n&&(e=new i.CDNFileAssetLoader,r.addLoader(e)),new Promise((function(e){let n=null;S={total:0,loaded:0,ready:function(){e(n)}},n=L(t,r),0==S.total&&e(n)}))},r=new a,i.requestAnimationFrame=r.requestAnimationFrame.bind(r),i.cancelAnimationFrame=r.cancelAnimationFrame.bind(r),i.enableFPSCounter=r.Rb.bind(r),i.disableFPSCounter=r.Ob,r.ob=n,i.resolveAnimationFrame=n,i.cleanup=function(){C&&C.delete()}};var h,f,d=Object.assign({},i),p=\"./this.program\",v=\"object\"==typeof window,m=\"function\"==typeof importScripts,y=\"\";(v||m)&&(m?y=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(y=document.currentScript.src),r&&(y=r),y=0!==y.indexOf(\"blob:\")?y.substr(0,y.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1):\"\",m&&(f=t=>{var e=new XMLHttpRequest;return e.open(\"GET\",t,!1),e.responseType=\"arraybuffer\",e.send(null),new Uint8Array(e.response)}),h=(t,e,n)=>{var r=new XMLHttpRequest;r.open(\"GET\",t,!0),r.responseType=\"arraybuffer\",r.onload=()=>{200==r.status||0==r.status&&r.response?e(r.response):n()},r.onerror=n,r.send(null)});var g,b=i.print||console.log.bind(console),w=i.printErr||console.error.bind(console);Object.assign(i,d),d=null,i.thisProgram&&(p=i.thisProgram),i.wasmBinary&&(g=i.wasmBinary),i.noExitRuntime,\"object\"!=typeof WebAssembly&&W(\"no native wasm support detected\");var _,A,C,E,T,P,R,L,S,M,j=!1;function O(){var t=_.buffer;i.HEAP8=C=new Int8Array(t),i.HEAP16=T=new Int16Array(t),i.HEAP32=R=new Int32Array(t),i.HEAPU8=E=new Uint8Array(t),i.HEAPU16=P=new Uint16Array(t),i.HEAPU32=L=new Uint32Array(t),i.HEAPF32=S=new Float32Array(t),i.HEAPF64=M=new Float64Array(t)}var x,I=[],F=[],k=[];function D(){var t=i.preRun.shift();I.unshift(t)}var N,U=0,B=null,$=null;function W(t){throw i.onAbort&&i.onAbort(t),w(t=\"Aborted(\"+t+\")\"),j=!0,t=new WebAssembly.RuntimeError(t+\". Build with -sASSERTIONS for more info.\"),n(t),t}function Y(t){return t.startsWith(\"data:application/octet-stream;base64,\")}if(!Y(N=\"canvas_advanced.wasm\")){var X=N;N=i.locateFile?i.locateFile(X,y):y+X}function z(t){if(t==N&&g)return new Uint8Array(g);if(f)return f(t);throw\"both async and sync fetching of the wasm failed\"}function H(t,e,n){return function(t){if(!g&&(v||m)){if(\"function\"==typeof fetch&&!t.startsWith(\"file://\"))return fetch(t,{credentials:\"same-origin\"}).then((e=>{if(!e.ok)throw\"failed to load wasm binary file at '\"+t+\"'\";return e.arrayBuffer()})).catch((()=>z(t)));if(h)return new Promise(((e,n)=>{h(t,(t=>e(new Uint8Array(t))),n)}))}return Promise.resolve().then((()=>z(t)))}(t).then((t=>WebAssembly.instantiate(t,e))).then((t=>t)).then(n,(t=>{w(\"failed to asynchronously prepare wasm: \"+t),W(t)}))}var G,V,q={430124:(t,e,n,r,i)=>{if(\"undefined\"==typeof window||void 0===(window.AudioContext||window.webkitAudioContext))return 0;if(void 0===window.h){window.h={Aa:0},window.h.H={},window.h.H.ya=t,window.h.H.capture=e,window.h.H.La=n,window.h.ga={},window.h.ga.stopped=r,window.h.ga.xb=i;let a=window.h;a.D=[],a.yc=function(t){for(var e=0;e<a.D.length;++e)if(null==a.D[e])return a.D[e]=t,e;return a.D.push(t),a.D.length-1},a.Cb=function(t){for(a.D[t]=null;0<a.D.length&&null==a.D[a.D.length-1];)a.D.pop()},a.Sc=function(t){for(var e=0;e<a.D.length;++e)if(a.D[e]==t)return a.Cb(e)},a.ra=function(t){return a.D[t]},a.Bb=[\"touchend\",\"click\"],a.unlock=function(){for(var t=0;t<a.D.length;++t){var e=a.D[t];null!=e&&null!=e.I&&e.state===a.ga.xb&&e.I.resume().then((()=>{Mn(e.pb)}),(t=>{console.error(\"Failed to resume audiocontext\",t)}))}a.Bb.map((function(t){document.removeEventListener(t,a.unlock,!0)}))},a.Bb.map((function(t){document.addEventListener(t,a.unlock,!0)}))}return window.h.Aa+=1,1},432302:()=>{void 0!==window.h&&(--window.h.Aa,0===window.h.Aa&&delete window.h)},432466:()=>void 0!==navigator.mediaDevices&&void 0!==navigator.mediaDevices.getUserMedia,432570:()=>{try{var t=new(window.AudioContext||window.webkitAudioContext),e=t.sampleRate;return t.close(),e}catch(t){return 0}},432741:(t,e,n,r,i,a)=>{if(void 0===window.h)return-1;var o={},s={};return t==window.h.H.ya&&0!=n&&(s.sampleRate=n),o.I=new(window.AudioContext||window.webkitAudioContext)(s),o.I.suspend(),o.state=window.h.ga.stopped,n=0,t!=window.h.H.ya&&(n=e),o.Z=o.I.createScriptProcessor(r,n,e),o.Z.onaudioprocess=function(n){if(null!=o.sa&&0!=o.sa.length||(o.sa=new Float32Array(S.buffer,i,r*e)),t==window.h.H.capture||t==window.h.H.La){for(var s=0;s<e;s+=1)for(var u=n.inputBuffer.getChannelData(s),c=o.sa,l=0;l<r;l+=1)c[l*e+s]=u[l];On(a,r,i)}if(t==window.h.H.ya||t==window.h.H.La)for(xn(a,r,i),s=0;s<n.outputBuffer.numberOfChannels;++s)for(u=n.outputBuffer.getChannelData(s),c=o.sa,l=0;l<r;l+=1)u[l]=c[l*e+s];else for(s=0;s<n.outputBuffer.numberOfChannels;++s)n.outputBuffer.getChannelData(s).fill(0)},t!=window.h.H.capture&&t!=window.h.H.La||navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then((function(t){o.Da=o.I.createMediaStreamSource(t),o.Da.connect(o.Z),o.Z.connect(o.I.destination)})).catch((function(t){console.log(\"Failed to get user media: \"+t)})),t==window.h.H.ya&&o.Z.connect(o.I.destination),o.pb=a,window.h.yc(o)},435618:t=>window.h.ra(t).I.sampleRate,435691:t=>{void 0!==(t=window.h.ra(t)).Z&&(t.Z.onaudioprocess=function(){},t.Z.disconnect(),t.Z=void 0),void 0!==t.Da&&(t.Da.disconnect(),t.Da=void 0),t.I.close(),t.I=void 0,t.pb=void 0},436091:t=>{window.h.Cb(t)},436141:t=>{(t=window.h.ra(t)).I.resume(),t.state=window.h.ga.xb},436280:t=>{(t=window.h.ra(t)).I.suspend(),t.state=window.h.ga.stopped}},J=t=>{for(;0<t.length;)t.shift()(i)},K=(t,e)=>{for(var n=0,r=t.length-1;0<=r;r--){var i=t[r];\".\"===i?t.splice(r,1):\"..\"===i?(t.splice(r,1),n++):n&&(t.splice(r,1),n--)}if(e)for(;n;n--)t.unshift(\"..\");return t},Z=t=>{var e=\"/\"===t.charAt(0),n=\"/\"===t.substr(-1);return(t=K(t.split(\"/\").filter((t=>!!t)),!e).join(\"/\"))||e||(t=\".\"),t&&n&&(t+=\"/\"),(e?\"/\":\"\")+t},Q=t=>{var e=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(t).slice(1);return t=e[0],e=e[1],t||e?(e&&(e=e.substr(0,e.length-1)),t+e):\".\"},tt=t=>{if(\"/\"===t)return\"/\";var e=(t=(t=Z(t)).replace(/\\/$/,\"\")).lastIndexOf(\"/\");return-1===e?t:t.substr(e+1)},et=t=>(et=(()=>{if(\"object\"==typeof crypto&&\"function\"==typeof crypto.getRandomValues)return t=>crypto.getRandomValues(t);W(\"initRandomDevice\")})())(t);function nt(){for(var t=\"\",e=!1,n=arguments.length-1;-1<=n&&!e;n--){if(\"string\"!=typeof(e=0<=n?arguments[n]:\"/\"))throw new TypeError(\"Arguments to path.resolve must be strings\");if(!e)return\"\";t=e+\"/\"+t,e=\"/\"===e.charAt(0)}return(e?\"/\":\"\")+(t=K(t.split(\"/\").filter((t=>!!t)),!e).join(\"/\"))||\".\"}var rt=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf8\"):void 0,it=(t,e,n)=>{var r=e+n;for(n=e;t[n]&&!(n>=r);)++n;if(16<n-e&&t.buffer&&rt)return rt.decode(t.subarray(e,n));for(r=\"\";e<n;){var i=t[e++];if(128&i){var a=63&t[e++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&t[e++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&t[e++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r},at=[],ot=t=>{for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);127>=r?e++:2047>=r?e+=2:55296<=r&&57343>=r?(e+=4,++n):e+=3}return e},st=(t,e,n,r)=>{if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<t.length;++a){var o=t.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&t.charCodeAt(++a)),127>=o){if(n>=r)break;e[n++]=o}else{if(2047>=o){if(n+1>=r)break;e[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;e[n++]=224|o>>12}else{if(n+3>=r)break;e[n++]=240|o>>18,e[n++]=128|o>>12&63}e[n++]=128|o>>6&63}e[n++]=128|63&o}}return e[n]=0,n-i};function ut(t,e){var n=Array(ot(t)+1);return t=st(t,n,0,n.length),e&&(n.length=t),n}var ct=[];function lt(t,e){ct[t]={input:[],F:[],V:e},Ut(t,ht)}var ht={open:function(t){var e=ct[t.node.za];if(!e)throw new Pt(43);t.s=e,t.seekable=!1},close:function(t){t.s.V.qa(t.s)},qa:function(t){t.s.V.qa(t.s)},read:function(t,e,n,r){if(!t.s||!t.s.V.ib)throw new Pt(60);for(var i=0,a=0;a<r;a++){try{var o=t.s.V.ib(t.s)}catch(t){throw new Pt(29)}if(void 0===o&&0===i)throw new Pt(6);if(null==o)break;i++,e[n+a]=o}return i&&(t.node.timestamp=Date.now()),i},write:function(t,e,n,r){if(!t.s||!t.s.V.Oa)throw new Pt(60);try{for(var i=0;i<r;i++)t.s.V.Oa(t.s,e[n+i])}catch(t){throw new Pt(29)}return r&&(t.node.timestamp=Date.now()),i}},ft={ib:function(){t:{if(!at.length){var t=null;if(\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?null!==(t=window.prompt(\"Input: \"))&&(t+=\"\\n\"):\"function\"==typeof readline&&null!==(t=readline())&&(t+=\"\\n\"),!t){t=null;break t}at=ut(t,!0)}t=at.shift()}return t},Oa:function(t,e){null===e||10===e?(b(it(t.F,0)),t.F=[]):0!=e&&t.F.push(e)},qa:function(t){t.F&&0<t.F.length&&(b(it(t.F,0)),t.F=[])},bc:function(){return{Fc:25856,Hc:5,Ec:191,Gc:35387,Dc:[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}},cc:function(){return 0},dc:function(){return[24,80]}},dt={Oa:function(t,e){null===e||10===e?(w(it(t.F,0)),t.F=[]):0!=e&&t.F.push(e)},qa:function(t){t.F&&0<t.F.length&&(w(it(t.F,0)),t.F=[])}};function pt(t,e){var n=t.j?t.j.length:0;n>=e||(e=Math.max(e,n*(1048576>n?2:1.125)>>>0),0!=n&&(e=Math.max(e,256)),n=t.j,t.j=new Uint8Array(e),0<t.v&&t.j.set(n.subarray(0,t.v),0))}var vt,mt,yt,gt,bt={O:null,U:()=>bt.createNode(null,\"/\",16895,0),createNode(t,e,n,r){if(24576==(61440&n)||4096==(61440&n))throw new Pt(63);return bt.O||(bt.O={dir:{node:{Y:bt.l.Y,P:bt.l.P,ka:bt.l.ka,va:bt.l.va,ub:bt.l.ub,Ab:bt.l.Ab,vb:bt.l.vb,sb:bt.l.sb,Ea:bt.l.Ea},stream:{ba:bt.m.ba}},file:{node:{Y:bt.l.Y,P:bt.l.P},stream:{ba:bt.m.ba,read:bt.m.read,write:bt.m.write,pa:bt.m.pa,lb:bt.m.lb,nb:bt.m.nb}},link:{node:{Y:bt.l.Y,P:bt.l.P,ma:bt.l.ma},stream:{}},$a:{node:{Y:bt.l.Y,P:bt.l.P},stream:Nt}}),16384==(61440&(n=Ot(t,e,n,r)).mode)?(n.l=bt.O.dir.node,n.m=bt.O.dir.stream,n.j={}):32768==(61440&n.mode)?(n.l=bt.O.file.node,n.m=bt.O.file.stream,n.v=0,n.j=null):40960==(61440&n.mode)?(n.l=bt.O.link.node,n.m=bt.O.link.stream):8192==(61440&n.mode)&&(n.l=bt.O.$a.node,n.m=bt.O.$a.stream),n.timestamp=Date.now(),t&&(t.j[e]=n,t.timestamp=n.timestamp),n},Kc:t=>t.j?t.j.subarray?t.j.subarray(0,t.v):new Uint8Array(t.j):new Uint8Array(0),l:{Y(t){var e={};return e.Jc=8192==(61440&t.mode)?t.id:1,e.Mc=t.id,e.mode=t.mode,e.Oc=1,e.uid=0,e.Lc=0,e.za=t.za,16384==(61440&t.mode)?e.size=4096:32768==(61440&t.mode)?e.size=t.v:40960==(61440&t.mode)?e.size=t.link.length:e.size=0,e.Bc=new Date(t.timestamp),e.Nc=new Date(t.timestamp),e.Ic=new Date(t.timestamp),e.Jb=4096,e.Cc=Math.ceil(e.size/e.Jb),e},P(t,e){if(void 0!==e.mode&&(t.mode=e.mode),void 0!==e.timestamp&&(t.timestamp=e.timestamp),void 0!==e.size&&(e=e.size,t.v!=e))if(0==e)t.j=null,t.v=0;else{var n=t.j;t.j=new Uint8Array(e),n&&t.j.set(n.subarray(0,Math.min(e,t.v))),t.v=e}},ka(){throw Rt[44]},va:(t,e,n,r)=>bt.createNode(t,e,n,r),ub(t,e,n){if(16384==(61440&t.mode)){try{var r=jt(e,n)}catch(t){}if(r)for(var i in r.j)throw new Pt(55)}delete t.parent.j[t.name],t.parent.timestamp=Date.now(),t.name=n,e.j[n]=t,e.timestamp=t.parent.timestamp,t.parent=e},Ab(t,e){delete t.j[e],t.timestamp=Date.now()},vb(t,e){var n,r=jt(t,e);for(n in r.j)throw new Pt(55);delete t.j[e],t.timestamp=Date.now()},sb(t){var e,n=[\".\",\"..\"];for(e in t.j)t.j.hasOwnProperty(e)&&n.push(e);return n},Ea:(t,e,n)=>((t=bt.createNode(t,e,41471,0)).link=n,t),ma(t){if(40960!=(61440&t.mode))throw new Pt(28);return t.link}},m:{read(t,e,n,r,i){var a=t.node.j;if(i>=t.node.v)return 0;if(8<(t=Math.min(t.node.v-i,r))&&a.subarray)e.set(a.subarray(i,i+t),n);else for(r=0;r<t;r++)e[n+r]=a[i+r];return t},write(t,e,n,r,i,a){if(e.buffer===C.buffer&&(a=!1),!r)return 0;if((t=t.node).timestamp=Date.now(),e.subarray&&(!t.j||t.j.subarray)){if(a)return t.j=e.subarray(n,n+r),t.v=r;if(0===t.v&&0===i)return t.j=e.slice(n,n+r),t.v=r;if(i+r<=t.v)return t.j.set(e.subarray(n,n+r),i),r}if(pt(t,i+r),t.j.subarray&&e.subarray)t.j.set(e.subarray(n,n+r),i);else for(a=0;a<r;a++)t.j[i+a]=e[n+a];return t.v=Math.max(t.v,i+r),r},ba(t,e,n){if(1===n?e+=t.position:2===n&&32768==(61440&t.node.mode)&&(e+=t.node.v),0>e)throw new Pt(28);return e},pa(t,e,n){pt(t.node,e+n),t.node.v=Math.max(t.node.v,e+n)},lb(t,e,n,r,i){if(32768!=(61440&t.node.mode))throw new Pt(43);if(t=t.node.j,2&i||t.buffer!==C.buffer){if((0<n||n+e<t.length)&&(t=t.subarray?t.subarray(n,n+e):Array.prototype.slice.call(t,n,n+e)),n=!0,W(),!(e=void 0))throw new Pt(48);C.set(t,e)}else n=!1,e=t.byteOffset;return{o:e,M:n}},nb:(t,e,n,r)=>(bt.m.write(t,e,0,r,n,!1),0)}},wt=null,_t={},At=[],Ct=1,Et=null,Tt=!0,Pt=null,Rt={},Lt=(t,e={})=>{if(!(t=nt(t)))return{path:\"\",node:null};if(8<(e=Object.assign({gb:!0,Qa:0},e)).Qa)throw new Pt(32);t=t.split(\"/\").filter((t=>!!t));for(var n=wt,r=\"/\",i=0;i<t.length;i++){var a=i===t.length-1;if(a&&e.parent)break;if(n=jt(n,t[i]),r=Z(r+\"/\"+t[i]),n.wa&&(!a||a&&e.gb)&&(n=n.wa.root),!a||e.fb)for(a=0;40960==(61440&n.mode);)if(n=Xt(r),r=nt(Q(r),n),n=Lt(r,{Qa:e.Qa+1}).node,40<a++)throw new Pt(32)}return{path:r,node:n}},St=t=>{for(var e;;){if(t===t.parent)return t=t.U.mb,e?\"/\"!==t[t.length-1]?`${t}/${e}`:t+e:t;e=e?`${t.name}/${e}`:t.name,t=t.parent}},Mt=(t,e)=>{for(var n=0,r=0;r<e.length;r++)n=(n<<5)-n+e.charCodeAt(r)|0;return(t+n>>>0)%Et.length},jt=(t,e)=>{var n;if(n=(n=It(t,\"x\"))?n:t.l.ka?0:2)throw new Pt(n,t);for(n=Et[Mt(t.id,e)];n;n=n.lc){var r=n.name;if(n.parent.id===t.id&&r===e)return n}return t.l.ka(t,e)},Ot=(t,e,n,r)=>(t=new En(t,e,n,r),e=Mt(t.parent.id,t.name),t.lc=Et[e],Et[e]=t),xt=t=>{var e=[\"r\",\"w\",\"rw\"][3&t];return 512&t&&(e+=\"w\"),e},It=(t,e)=>Tt?0:!e.includes(\"r\")||292&t.mode?e.includes(\"w\")&&!(146&t.mode)||e.includes(\"x\")&&!(73&t.mode)?2:0:2,Ft=(t,e)=>{try{return jt(t,e),20}catch(t){}return It(t,\"wx\")},kt=t=>{if(!(t=At[t]))throw new Pt(8);return t},Dt=(t,e=-1)=>(yt||((yt=function(){this.h={}}).prototype={},Object.defineProperties(yt.prototype,{object:{get(){return this.node},set(t){this.node=t}},flags:{get(){return this.h.flags},set(t){this.h.flags=t}},position:{get(){return this.h.position},set(t){this.h.position=t}}})),t=Object.assign(new yt,t),-1==e&&(e=(()=>{for(var t=0;4096>=t;t++)if(!At[t])return t;throw new Pt(33)})()),t.X=e,At[e]=t),Nt={open:t=>{t.m=_t[t.node.za].m,t.m.open&&t.m.open(t)},ba:()=>{throw new Pt(70)}},Ut=(t,e)=>{_t[t]={m:e}},Bt=(t,e)=>{var n=\"/\"===e,r=!e;if(n&&wt)throw new Pt(10);if(!n&&!r){var i=Lt(e,{gb:!1});if(e=i.path,(i=i.node).wa)throw new Pt(10);if(16384!=(61440&i.mode))throw new Pt(54)}e={type:t,Qc:{},mb:e,kc:[]},(t=t.U(e)).U=e,e.root=t,n?wt=t:i&&(i.wa=e,i.U&&i.U.kc.push(e))},$t=(t,e,n)=>{var r=Lt(t,{parent:!0}).node;if(!(t=tt(t))||\".\"===t||\"..\"===t)throw new Pt(28);var i=Ft(r,t);if(i)throw new Pt(i);if(!r.l.va)throw new Pt(63);return r.l.va(r,t,e,n)},Wt=(t,e,n)=>{void 0===n&&(n=e,e=438),$t(t,8192|e,n)},Yt=(t,e)=>{if(!nt(t))throw new Pt(44);var n=Lt(e,{parent:!0}).node;if(!n)throw new Pt(44);e=tt(e);var r=Ft(n,e);if(r)throw new Pt(r);if(!n.l.Ea)throw new Pt(63);n.l.Ea(n,e,t)},Xt=t=>{if(!(t=Lt(t).node))throw new Pt(44);if(!t.l.ma)throw new Pt(28);return nt(St(t.parent),t.l.ma(t))},zt=(t,e,n)=>{if(\"\"===t)throw new Pt(44);if(\"string\"==typeof e){var r={r:0,\"r+\":2,w:577,\"w+\":578,a:1089,\"a+\":1090}[e];if(void 0===r)throw Error(`Unknown file open mode: ${e}`);e=r}if(n=64&e?4095&(void 0===n?438:n)|32768:0,\"object\"==typeof t)var a=t;else{t=Z(t);try{a=Lt(t,{fb:!(131072&e)}).node}catch(t){}}if(r=!1,64&e)if(a){if(128&e)throw new Pt(20)}else a=$t(t,n,0),r=!0;if(!a)throw new Pt(44);if(8192==(61440&a.mode)&&(e&=-513),65536&e&&16384!=(61440&a.mode))throw new Pt(54);if(!r&&(n=a?40960==(61440&a.mode)?32:16384==(61440&a.mode)&&(\"r\"!==xt(e)||512&e)?31:It(a,xt(e)):44))throw new Pt(n);if(512&e&&!r){if(!(n=\"string\"==typeof(n=a)?Lt(n,{fb:!0}).node:n).l.P)throw new Pt(63);if(16384==(61440&n.mode))throw new Pt(31);if(32768!=(61440&n.mode))throw new Pt(28);if(r=It(n,\"w\"))throw new Pt(r);n.l.P(n,{size:0,timestamp:Date.now()})}return e&=-131713,(a=Dt({node:a,path:St(a),flags:e,seekable:!0,position:0,m:a.m,zc:[],error:!1})).m.open&&a.m.open(a),!i.logReadFiles||1&e||(gt||(gt={}),t in gt||(gt[t]=1)),a},Ht=(t,e,n)=>{if(null===t.X)throw new Pt(8);if(!t.seekable||!t.m.ba)throw new Pt(70);if(0!=n&&1!=n&&2!=n)throw new Pt(28);t.position=t.m.ba(t,e,n),t.zc=[]},Gt=()=>{Pt||((Pt=function(t,e){this.name=\"ErrnoError\",this.node=e,this.pc=function(t){this.aa=t},this.pc(t),this.message=\"FS error\"}).prototype=Error(),Pt.prototype.constructor=Pt,[44].forEach((t=>{Rt[t]=new Pt(t),Rt[t].stack=\"<generic error, no stack>\"})))},Vt=(t,e,n)=>{t=Z(\"/dev/\"+t);var r=function(t,e){var n=0;return t&&(n|=365),e&&(n|=146),n}(!!e,!!n);mt||(mt=64);var i=mt++<<8;Ut(i,{open:t=>{t.seekable=!1},close:()=>{n&&n.buffer&&n.buffer.length&&n(10)},read:(t,n,r,i)=>{for(var a=0,o=0;o<i;o++){try{var s=e()}catch(t){throw new Pt(29)}if(void 0===s&&0===a)throw new Pt(6);if(null==s)break;a++,n[r+o]=s}return a&&(t.node.timestamp=Date.now()),a},write:(t,e,r,i)=>{for(var a=0;a<i;a++)try{n(e[r+a])}catch(t){throw new Pt(29)}return i&&(t.node.timestamp=Date.now()),a}}),Wt(t,r,i)},qt={},Jt=void 0;function Kt(){return R[(Jt+=4)-4>>2]}function Zt(t){if(void 0===t)return\"_unknown\";var e=(t=t.replace(/[^a-zA-Z0-9_]/g,\"$\")).charCodeAt(0);return 48<=e&&57>=e?`_${t}`:t}function Qt(t,e){return t=Zt(t),{[t]:function(){return e.apply(this,arguments)}}[t]}function te(){this.M=[void 0],this.hb=[]}var ee=new te,ne=void 0;function re(t){throw new ne(t)}var ie=t=>(t||re(\"Cannot use deleted val. handle = \"+t),ee.get(t).value),ae=t=>{switch(t){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:return ee.pa({tb:1,value:t})}};function oe(t){var e=Error,n=Qt(t,(function(e){this.name=t,this.message=e,void 0!==(e=Error(e).stack)&&(this.stack=this.toString()+\"\\n\"+e.replace(/^Error(:[^\\n]*)?\\n/,\"\"))}));return n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:`${this.name}: ${this.message}`},n}var se=void 0,ue=void 0;function ce(t){for(var e=\"\";E[t];)e+=ue[E[t++]];return e}var le=[];function he(){for(;le.length;){var t=le.pop();t.g.fa=!1,t.delete()}}var fe=void 0,de={};function pe(t,e){for(void 0===e&&re(\"ptr should not be undefined\");t.A;)e=t.na(e),t=t.A;return e}var ve={};function me(t){var e=ce(t=Fn(t));return Ln(t),e}function ye(t,e){var n=ve[t];return void 0===n&&re(e+\" has unknown type \"+me(t)),n}function ge(){}var be=!1;function we(t){--t.count.value,0===t.count.value&&(t.G?t.L.W(t.G):t.u.i.W(t.o))}function _e(t,e,n){return e===n?t:void 0===n.A||null===(t=_e(t,e,n.A))?null:n.Pb(t)}var Ae={},Ce=void 0;function Ee(t){throw new Ce(t)}function Te(t,e){return e.u&&e.o||Ee(\"makeClassHandle requires ptr and ptrType\"),!!e.L!=!!e.G&&Ee(\"Both smartPtrType and smartPtr must be specified\"),e.count={value:1},Pe(Object.create(t,{g:{value:e}}))}function Pe(t){return\"undefined\"==typeof FinalizationRegistry?(Pe=t=>t,t):(be=new FinalizationRegistry((t=>{we(t.g)})),ge=t=>{be.unregister(t)},(Pe=t=>{var e=t.g;return e.G&&be.register(t,{g:e},t),t})(t))}var Re={};function Le(t){for(;t.length;){var e=t.pop();t.pop()(e)}}function Se(t){return this.fromWireType(R[t>>2])}var Me={},je={};function Oe(t,e,n){function r(e){(e=n(e)).length!==t.length&&Ee(\"Mismatched type converter count\");for(var r=0;r<t.length;++r)Ie(t[r],e[r])}t.forEach((function(t){je[t]=e}));var i=Array(e.length),a=[],o=0;e.forEach(((t,e)=>{ve.hasOwnProperty(t)?i[e]=ve[t]:(a.push(t),Me.hasOwnProperty(t)||(Me[t]=[]),Me[t].push((()=>{i[e]=ve[t],++o===a.length&&r(i)})))})),0===a.length&&r(i)}function xe(t){switch(t){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(`Unknown type size: ${t}`)}}function Ie(t,e,n={}){if(!(\"argPackAdvance\"in e))throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");!function(t,e,n={}){var r=e.name;if(t||re(`type \"${r}\" must have a positive integer typeid pointer`),ve.hasOwnProperty(t)){if(n.$b)return;re(`Cannot register type '${r}' twice`)}ve[t]=e,delete je[t],Me.hasOwnProperty(t)&&(e=Me[t],delete Me[t],e.forEach((t=>t())))}(t,e,n)}function Fe(t){re(t.g.u.i.name+\" instance already deleted\")}function ke(){}function De(t,e,n){if(void 0===t[e].B){var r=t[e];t[e]=function(){return t[e].B.hasOwnProperty(arguments.length)||re(`Function '${n}' called with an invalid number of arguments (${arguments.length}) - expects one of (${t[e].B})!`),t[e].B[arguments.length].apply(this,arguments)},t[e].B=[],t[e].B[r.ea]=r}}function Ne(t,e,n){i.hasOwnProperty(t)?((void 0===n||void 0!==i[t].B&&void 0!==i[t].B[n])&&re(`Cannot register public name '${t}' twice`),De(i,t,t),i.hasOwnProperty(n)&&re(`Cannot register multiple overloads of a function with the same number of arguments (${n})!`),i[t].B[n]=e):(i[t]=e,void 0!==n&&(i[t].Pc=n))}function Ue(t,e,n,r,i,a,o,s){this.name=t,this.constructor=e,this.N=n,this.W=r,this.A=i,this.Ub=a,this.na=o,this.Pb=s,this.qb=[]}function Be(t,e,n){for(;e!==n;)e.na||re(`Expected null or instance of ${n.name}, got an instance of ${e.name}`),t=e.na(t),e=e.A;return t}function $e(t,e){return null===e?(this.Na&&re(`null is not a valid ${this.name}`),0):(e.g||re(`Cannot pass \"${nn(e)}\" as a ${this.name}`),e.g.o||re(`Cannot pass deleted object as a pointer of type ${this.name}`),Be(e.g.o,e.g.u.i,this.i))}function We(t,e){if(null===e){if(this.Na&&re(`null is not a valid ${this.name}`),this.ua){var n=this.Pa();return null!==t&&t.push(this.W,n),n}return 0}if(e.g||re(`Cannot pass \"${nn(e)}\" as a ${this.name}`),e.g.o||re(`Cannot pass deleted object as a pointer of type ${this.name}`),!this.ta&&e.g.u.ta&&re(`Cannot convert argument of type ${e.g.L?e.g.L.name:e.g.u.name} to parameter type ${this.name}`),n=Be(e.g.o,e.g.u.i,this.i),this.ua)switch(void 0===e.g.G&&re(\"Passing raw pointer to smart pointer is illegal\"),this.tc){case 0:e.g.L===this?n=e.g.G:re(`Cannot convert argument of type ${e.g.L?e.g.L.name:e.g.u.name} to parameter type ${this.name}`);break;case 1:n=e.g.G;break;case 2:if(e.g.L===this)n=e.g.G;else{var r=e.clone();n=this.oc(n,ae((function(){r.delete()}))),null!==t&&t.push(this.W,n)}break;default:re(\"Unsupporting sharing policy\")}return n}function Ye(t,e){return null===e?(this.Na&&re(`null is not a valid ${this.name}`),0):(e.g||re(`Cannot pass \"${nn(e)}\" as a ${this.name}`),e.g.o||re(`Cannot pass deleted object as a pointer of type ${this.name}`),e.g.u.ta&&re(`Cannot convert argument of type ${e.g.u.name} to parameter type ${this.name}`),Be(e.g.o,e.g.u.i,this.i))}function Xe(t,e,n,r){this.name=t,this.i=e,this.Na=n,this.ta=r,this.ua=!1,this.W=this.oc=this.Pa=this.rb=this.tc=this.nc=void 0,void 0!==e.A?this.toWireType=We:(this.toWireType=r?$e:Ye,this.K=null)}function ze(t,e,n){i.hasOwnProperty(t)||Ee(\"Replacing nonexistant public symbol\"),void 0!==i[t].B&&void 0!==n?i[t].B[n]=e:(i[t]=e,i[t].ea=n)}var He=[],Ge=t=>{var e=He[t];return e||(t>=He.length&&(He.length=t+1),He[t]=e=x.get(t)),e};function Ve(t,e){var n=(t=ce(t)).includes(\"j\")?((t,e)=>{var n=[];return function(){if(n.length=0,Object.assign(n,arguments),t.includes(\"j\")){var r=i[\"dynCall_\"+t];r=n&&n.length?r.apply(null,[e].concat(n)):r.call(null,e)}else r=Ge(e).apply(null,n);return r}})(t,e):Ge(e);return\"function\"!=typeof n&&re(`unknown function pointer with signature ${t}: ${e}`),n}var qe=void 0;function Je(t,e){var n=[],r={};throw e.forEach((function t(e){r[e]||ve[e]||(je[e]?je[e].forEach(t):(n.push(e),r[e]=!0))})),new qe(`${t}: `+n.map(me).join([\", \"]))}function Ke(t,e,n,r,i){var a=e.length;2>a&&re(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");var o=null!==e[1]&&null!==n,s=!1;for(n=1;n<e.length;++n)if(null!==e[n]&&void 0===e[n].K){s=!0;break}var u=\"void\"!==e[0].name,c=a-2,l=Array(c),h=[],f=[];return function(){if(arguments.length!==c&&re(`function ${t} called with ${arguments.length} arguments, expected ${c} args!`),f.length=0,h.length=o?2:1,h[0]=i,o){var n=e[1].toWireType(f,this);h[1]=n}for(var a=0;a<c;++a)l[a]=e[a+2].toWireType(f,arguments[a]),h.push(l[a]);if(a=r.apply(null,h),s)Le(f);else for(var d=o?1:2;d<e.length;d++){var p=1===d?n:l[d-2];null!==e[d].K&&e[d].K(p)}return u?e[0].fromWireType(a):void 0}}function Ze(t,e){for(var n=[],r=0;r<t;r++)n.push(L[e+4*r>>2]);return n}function Qe(t,e,n){return t instanceof Object||re(`${n} with invalid \"this\": ${t}`),t instanceof e.i.constructor||re(`${n} incompatible with \"this\" of type ${t.constructor.name}`),t.g.o||re(`cannot call emscripten binding method ${n} on deleted object`),Be(t.g.o,t.g.u.i,e.i)}function tn(t){t>=ee.h&&0==--ee.get(t).tb&&ee.Zb(t)}function en(t,e,n){switch(e){case 0:return function(t){return this.fromWireType((n?C:E)[t])};case 1:return function(t){return this.fromWireType((n?T:P)[t>>1])};case 2:return function(t){return this.fromWireType((n?R:L)[t>>2])};default:throw new TypeError(\"Unknown integer type: \"+t)}}function nn(t){if(null===t)return\"null\";var e=typeof t;return\"object\"===e||\"array\"===e||\"function\"===e?t.toString():\"\"+t}function rn(t,e){switch(e){case 2:return function(t){return this.fromWireType(S[t>>2])};case 3:return function(t){return this.fromWireType(M[t>>3])};default:throw new TypeError(\"Unknown float type: \"+t)}}function an(t,e,n){switch(e){case 0:return n?function(t){return C[t]}:function(t){return E[t]};case 1:return n?function(t){return T[t>>1]}:function(t){return P[t>>1]};case 2:return n?function(t){return R[t>>2]}:function(t){return L[t>>2]};default:throw new TypeError(\"Unknown integer type: \"+t)}}var on=\"undefined\"!=typeof TextDecoder?new TextDecoder(\"utf-16le\"):void 0,sn=(t,e)=>{for(var n=t>>1,r=n+e/2;!(n>=r)&&P[n];)++n;if(32<(n<<=1)-t&&on)return on.decode(E.subarray(t,n));for(n=\"\",r=0;!(r>=e/2);++r){var i=T[t+2*r>>1];if(0==i)break;n+=String.fromCharCode(i)}return n},un=(t,e,n)=>{if(void 0===n&&(n=2147483647),2>n)return 0;var r=e;n=(n-=2)<2*t.length?n/2:t.length;for(var i=0;i<n;++i)T[e>>1]=t.charCodeAt(i),e+=2;return T[e>>1]=0,e-r},cn=t=>2*t.length,ln=(t,e)=>{for(var n=0,r=\"\";!(n>=e/4);){var i=R[t+4*n>>2];if(0==i)break;++n,65536<=i?(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i)):r+=String.fromCharCode(i)}return r},hn=(t,e,n)=>{if(void 0===n&&(n=2147483647),4>n)return 0;var r=e;n=r+n-4;for(var i=0;i<t.length;++i){var a=t.charCodeAt(i);if(55296<=a&&57343>=a&&(a=65536+((1023&a)<<10)|1023&t.charCodeAt(++i)),R[e>>2]=a,(e+=4)+4>n)break}return R[e>>2]=0,e-r},fn=t=>{for(var e=0,n=0;n<t.length;++n){var r=t.charCodeAt(n);55296<=r&&57343>=r&&++n,e+=4}return e},dn={};function pn(t){var e=dn[t];return void 0===e?ce(t):e}var vn,mn=[],yn=[],gn=[],bn={},wn=()=>{if(!vn){var t,e={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:p||\"./this.program\"};for(t in bn)void 0===bn[t]?delete e[t]:e[t]=bn[t];var n=[];for(t in e)n.push(`${t}=${e[t]}`);vn=n}return vn},_n=t=>0==t%4&&(0!=t%100||0==t%400),An=[31,29,31,30,31,30,31,31,30,31,30,31],Cn=[31,28,31,30,31,30,31,31,30,31,30,31];function En(t,e,n,r){t||(t=this),this.parent=t,this.U=t.U,this.wa=null,this.id=Ct++,this.name=e,this.mode=n,this.l={},this.m={},this.za=r}Object.defineProperties(En.prototype,{read:{get:function(){return!(365&~this.mode)},set:function(t){t?this.mode|=365:this.mode&=-366}},write:{get:function(){return!(146&~this.mode)},set:function(t){t?this.mode|=146:this.mode&=-147}}}),Gt(),Et=Array(4096),Bt(bt,\"/\"),$t(\"/tmp\",16895,0),$t(\"/home\",16895,0),$t(\"/home/web_user\",16895,0),(()=>{$t(\"/dev\",16895,0),Ut(259,{read:()=>0,write:(t,e,n,r)=>r}),Wt(\"/dev/null\",259),lt(1280,ft),lt(1536,dt),Wt(\"/dev/tty\",1280),Wt(\"/dev/tty1\",1536);var t=new Uint8Array(1024),e=0,n=()=>(0===e&&(e=et(t).byteLength),t[--e]);Vt(\"random\",n),Vt(\"urandom\",n),$t(\"/dev/shm\",16895,0),$t(\"/dev/shm/tmp\",16895,0)})(),(()=>{$t(\"/proc\",16895,0);var t=$t(\"/proc/self\",16895,0);$t(\"/proc/self/fd\",16895,0),Bt({U:()=>{var e=Ot(t,\"fd\",16895,73);return e.l={ka:(t,e)=>{var n=kt(+e);return(t={parent:null,U:{mb:\"fake\"},l:{ma:()=>n.path}}).parent=t}},e}},\"/proc/self/fd\")})(),Object.assign(te.prototype,{get(t){return this.M[t]},has(t){return void 0!==this.M[t]},pa(t){var e=this.hb.pop()||this.M.length;return this.M[e]=t,e},Zb(t){this.M[t]=void 0,this.hb.push(t)}}),ne=i.BindingError=class extends Error{constructor(t){super(t),this.name=\"BindingError\"}},ee.M.push({value:void 0},{value:null},{value:!0},{value:!1}),ee.h=ee.M.length,i.count_emval_handles=function(){for(var t=0,e=ee.h;e<ee.M.length;++e)void 0!==ee.M[e]&&++t;return t},se=i.PureVirtualError=oe(\"PureVirtualError\");for(var Tn=Array(256),Pn=0;256>Pn;++Pn)Tn[Pn]=String.fromCharCode(Pn);ue=Tn,i.getInheritedInstanceCount=function(){return Object.keys(de).length},i.getLiveInheritedInstances=function(){var t,e=[];for(t in de)de.hasOwnProperty(t)&&e.push(de[t]);return e},i.flushPendingDeletes=he,i.setDelayFunction=function(t){fe=t,le.length&&fe&&fe(he)},Ce=i.InternalError=class extends Error{constructor(t){super(t),this.name=\"InternalError\"}},ke.prototype.isAliasOf=function(t){if(!(this instanceof ke&&t instanceof ke))return!1;var e=this.g.u.i,n=this.g.o,r=t.g.u.i;for(t=t.g.o;e.A;)n=e.na(n),e=e.A;for(;r.A;)t=r.na(t),r=r.A;return e===r&&n===t},ke.prototype.clone=function(){if(this.g.o||Fe(this),this.g.ia)return this.g.count.value+=1,this;var t=Pe,e=Object,n=e.create,r=Object.getPrototypeOf(this),i=this.g;return(t=t(n.call(e,r,{g:{value:{count:i.count,fa:i.fa,ia:i.ia,o:i.o,u:i.u,G:i.G,L:i.L}}}))).g.count.value+=1,t.g.fa=!1,t},ke.prototype.delete=function(){this.g.o||Fe(this),this.g.fa&&!this.g.ia&&re(\"Object already scheduled for deletion\"),ge(this),we(this.g),this.g.ia||(this.g.G=void 0,this.g.o=void 0)},ke.prototype.isDeleted=function(){return!this.g.o},ke.prototype.deleteLater=function(){return this.g.o||Fe(this),this.g.fa&&!this.g.ia&&re(\"Object already scheduled for deletion\"),le.push(this),1===le.length&&fe&&fe(he),this.g.fa=!0,this},Xe.prototype.Vb=function(t){return this.rb&&(t=this.rb(t)),t},Xe.prototype.ab=function(t){this.W&&this.W(t)},Xe.prototype.argPackAdvance=8,Xe.prototype.readValueFromPointer=Se,Xe.prototype.deleteObject=function(t){null!==t&&t.delete()},Xe.prototype.fromWireType=function(t){function e(){return this.ua?Te(this.i.N,{u:this.nc,o:n,L:this,G:t}):Te(this.i.N,{u:this,o:t})}var n=this.Vb(t);if(!n)return this.ab(t),null;var r=function(t,e){return e=pe(t,e),de[e]}(this.i,n);if(void 0!==r)return 0===r.g.count.value?(r.g.o=n,r.g.G=t,r.clone()):(r=r.clone(),this.ab(t),r);if(r=this.i.Ub(n),!(r=Ae[r]))return e.call(this);r=this.ta?r.Kb:r.pointerType;var i=_e(n,this.i,r.i);return null===i?e.call(this):this.ua?Te(r.i.N,{u:r,o:i,L:this,G:t}):Te(r.i.N,{u:r,o:i})},qe=i.UnboundTypeError=oe(\"UnboundTypeError\");var Rn={__syscall_fcntl64:function(t,e,n){Jt=n;try{var r=kt(t);switch(e){case 0:var i=Kt();return 0>i?-28:Dt(r,i).X;case 1:case 2:case 6:case 7:return 0;case 3:return r.flags;case 4:return i=Kt(),r.flags|=i,0;case 5:return i=Kt(),T[i+0>>1]=2,0;case 16:case 8:default:return-28;case 9:return R[In()>>2]=28,-1}}catch(t){if(void 0===qt||\"ErrnoError\"!==t.name)throw t;return-t.aa}},__syscall_ioctl:function(t,e,n){Jt=n;try{var r=kt(t);switch(e){case 21509:case 21510:case 21511:case 21512:case 21524:case 21515:return r.s?0:-59;case 21505:if(!r.s)return-59;if(r.s.V.bc){e=[3,28,127,21,4,0,1,0,17,19,26,0,18,15,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];var i=Kt();R[i>>2]=25856,R[i+4>>2]=5,R[i+8>>2]=191,R[i+12>>2]=35387;for(var a=0;32>a;a++)C[i+a+17|0]=e[a]||0}return 0;case 21506:case 21507:case 21508:if(!r.s)return-59;if(r.s.V.cc)for(i=Kt(),e=[],a=0;32>a;a++)e.push(C[i+a+17|0]);return 0;case 21519:return r.s?(i=Kt(),R[i>>2]=0):-59;case 21520:return r.s?-28:-59;case 21531:if(i=Kt(),!r.m.ac)throw new Pt(59);return r.m.ac(r,e,i);case 21523:return r.s?(r.s.V.dc&&(a=[24,80],i=Kt(),T[i>>1]=a[0],T[i+2>>1]=a[1]),0):-59;default:return-28}}catch(t){if(void 0===qt||\"ErrnoError\"!==t.name)throw t;return-t.aa}},__syscall_openat:function(t,e,n,r){Jt=r;try{var i=e=e?it(E,e):\"\";if(\"/\"===i.charAt(0))e=i;else{var a=-100===t?\"/\":kt(t).path;if(0==i.length)throw new Pt(44);e=Z(a+\"/\"+i)}var o=r?Kt():0;return zt(e,n,o).X}catch(t){if(void 0===qt||\"ErrnoError\"!==t.name)throw t;return-t.aa}},_embind_create_inheriting_constructor:function(t,e,n){t=ce(t),e=ye(e,\"wrapper\"),n=ie(n);var r=[].slice,i=e.i,a=i.N,o=i.A.N,s=i.A.constructor;for(var u in t=Qt(t,(function(){i.A.qb.forEach(function(t){if(this[t]===o[t])throw new se(`Pure virtual function ${t} must be implemented in JavaScript`)}.bind(this)),Object.defineProperty(this,\"__parent\",{value:a}),this.__construct.apply(this,r.call(arguments))})),a.__construct=function(){this===a&&re(\"Pass correct 'this' to __construct\");var t=s.implement.apply(void 0,[this].concat(r.call(arguments)));ge(t);var e=t.g;t.notifyOnDestruction(),e.ia=!0,Object.defineProperties(this,{g:{value:e}}),Pe(this),t=e.o,t=pe(i,t),de.hasOwnProperty(t)?re(`Tried to register registered instance: ${t}`):de[t]=this},a.__destruct=function(){this===a&&re(\"Pass correct 'this' to __destruct\"),ge(this);var t=this.g.o;t=pe(i,t),de.hasOwnProperty(t)?delete de[t]:re(`Tried to unregister unregistered instance: ${t}`)},t.prototype=Object.create(a),n)t.prototype[u]=n[u];return ae(t)},_embind_finalize_value_object:function(t){var e=Re[t];delete Re[t];var n=e.Pa,r=e.W,i=e.eb;Oe([t],i.map((t=>t.Yb)).concat(i.map((t=>t.rc))),(t=>{var a={};return i.forEach(((e,n)=>{var r=t[n],o=e.Wb,s=e.Xb,u=t[n+i.length],c=e.qc,l=e.sc;a[e.Sb]={read:t=>r.fromWireType(o(s,t)),write:(t,e)=>{var n=[];c(l,t,u.toWireType(n,e)),Le(n)}}})),[{name:e.name,fromWireType:function(t){var e,n={};for(e in a)n[e]=a[e].read(t);return r(t),n},toWireType:function(t,e){for(var i in a)if(!(i in e))throw new TypeError(`Missing field: \"${i}\"`);var o=n();for(i in a)a[i].write(o,e[i]);return null!==t&&t.push(r,o),o},argPackAdvance:8,readValueFromPointer:Se,K:r}]}))},_embind_register_bigint:function(){},_embind_register_bool:function(t,e,n,r,i){var a=xe(n);Ie(t,{name:e=ce(e),fromWireType:function(t){return!!t},toWireType:function(t,e){return e?r:i},argPackAdvance:8,readValueFromPointer:function(t){if(1===n)var r=C;else if(2===n)r=T;else{if(4!==n)throw new TypeError(\"Unknown boolean type size: \"+e);r=R}return this.fromWireType(r[t>>a])},K:null})},_embind_register_class:function(t,e,n,r,i,a,o,s,u,c,l,h,f){l=ce(l),a=Ve(i,a),s&&(s=Ve(o,s)),c&&(c=Ve(u,c)),f=Ve(h,f);var d=Zt(l);Ne(d,(function(){Je(`Cannot construct ${l} due to unbound types`,[r])})),Oe([t,e,n],r?[r]:[],(function(e){if(e=e[0],r)var n=e.i,i=n.N;else i=ke.prototype;e=Qt(d,(function(){if(Object.getPrototypeOf(this)!==o)throw new ne(\"Use 'new' to construct \"+l);if(void 0===u.$)throw new ne(l+\" has no accessible constructor\");var t=u.$[arguments.length];if(void 0===t)throw new ne(`Tried to invoke ctor of ${l} with invalid number of parameters (${arguments.length}) - expected (${Object.keys(u.$).toString()}) parameters instead!`);return t.apply(this,arguments)}));var o=Object.create(i,{constructor:{value:e}});e.prototype=o;var u=new Ue(l,e,o,f,n,a,s,c);u.A&&(void 0===u.A.oa&&(u.A.oa=[]),u.A.oa.push(u)),n=new Xe(l,u,!0,!1),i=new Xe(l+\"*\",u,!1,!1);var h=new Xe(l+\" const*\",u,!1,!0);return Ae[t]={pointerType:i,Kb:h},ze(d,e),[n,i,h]}))},_embind_register_class_class_function:function(t,e,n,r,i,a,o){var s=Ze(n,r);e=ce(e),a=Ve(i,a),Oe([],[t],(function(t){function r(){Je(`Cannot call ${i} due to unbound types`,s)}var i=`${(t=t[0]).name}.${e}`;e.startsWith(\"@@\")&&(e=Symbol[e.substring(2)]);var u=t.i.constructor;return void 0===u[e]?(r.ea=n-1,u[e]=r):(De(u,e,i),u[e].B[n-1]=r),Oe([],s,(function(r){if(r=Ke(i,[r[0],null].concat(r.slice(1)),null,a,o),void 0===u[e].B?(r.ea=n-1,u[e]=r):u[e].B[n-1]=r,t.i.oa)for(const n of t.i.oa)n.constructor.hasOwnProperty(e)||(n.constructor[e]=r);return[]})),[]}))},_embind_register_class_class_property:function(t,e,n,r,i,a,o,s){e=ce(e),a=Ve(i,a),Oe([],[t],(function(t){var i=`${(t=t[0]).name}.${e}`,u={get(){Je(`Cannot access ${i} due to unbound types`,[n])},enumerable:!0,configurable:!0};return u.set=s?()=>{Je(`Cannot access ${i} due to unbound types`,[n])}:()=>{re(`${i} is a read-only property`)},Object.defineProperty(t.i.constructor,e,u),Oe([],[n],(function(n){n=n[0];var i={get:()=>n.fromWireType(a(r)),enumerable:!0};return s&&(s=Ve(o,s),i.set=t=>{var e=[];s(r,n.toWireType(e,t)),Le(e)}),Object.defineProperty(t.i.constructor,e,i),[]})),[]}))},_embind_register_class_constructor:function(t,e,n,r,i,a){var o=Ze(e,n);i=Ve(r,i),Oe([],[t],(function(t){var n=`constructor ${(t=t[0]).name}`;if(void 0===t.i.$&&(t.i.$=[]),void 0!==t.i.$[e-1])throw new ne(`Cannot register multiple constructors with identical number of parameters (${e-1}) for class '${t.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`);return t.i.$[e-1]=()=>{Je(`Cannot construct ${t.name} due to unbound types`,o)},Oe([],o,(function(r){return r.splice(1,0,null),t.i.$[e-1]=Ke(n,r,null,i,a),[]})),[]}))},_embind_register_class_function:function(t,e,n,r,i,a,o,s){var u=Ze(n,r);e=ce(e),a=Ve(i,a),Oe([],[t],(function(t){function r(){Je(`Cannot call ${i} due to unbound types`,u)}var i=`${(t=t[0]).name}.${e}`;e.startsWith(\"@@\")&&(e=Symbol[e.substring(2)]),s&&t.i.qb.push(e);var c=t.i.N,l=c[e];return void 0===l||void 0===l.B&&l.className!==t.name&&l.ea===n-2?(r.ea=n-2,r.className=t.name,c[e]=r):(De(c,e,i),c[e].B[n-2]=r),Oe([],u,(function(r){return r=Ke(i,r,t,a,o),void 0===c[e].B?(r.ea=n-2,c[e]=r):c[e].B[n-2]=r,[]})),[]}))},_embind_register_class_property:function(t,e,n,r,i,a,o,s,u,c){e=ce(e),i=Ve(r,i),Oe([],[t],(function(t){var r=`${(t=t[0]).name}.${e}`,l={get(){Je(`Cannot access ${r} due to unbound types`,[n,o])},enumerable:!0,configurable:!0};return l.set=u?()=>{Je(`Cannot access ${r} due to unbound types`,[n,o])}:()=>{re(r+\" is a read-only property\")},Object.defineProperty(t.i.N,e,l),Oe([],u?[n,o]:[n],(function(n){var o=n[0],l={get(){var e=Qe(this,t,r+\" getter\");return o.fromWireType(i(a,e))},enumerable:!0};if(u){u=Ve(s,u);var h=n[1];l.set=function(e){var n=Qe(this,t,r+\" setter\"),i=[];u(c,n,h.toWireType(i,e)),Le(i)}}return Object.defineProperty(t.i.N,e,l),[]})),[]}))},_embind_register_emval:function(t,e){Ie(t,{name:e=ce(e),fromWireType:function(t){var e=ie(t);return tn(t),e},toWireType:function(t,e){return ae(e)},argPackAdvance:8,readValueFromPointer:Se,K:null})},_embind_register_enum:function(t,e,n,r){function i(){}n=xe(n),e=ce(e),i.values={},Ie(t,{name:e,constructor:i,fromWireType:function(t){return this.constructor.values[t]},toWireType:function(t,e){return e.value},argPackAdvance:8,readValueFromPointer:en(e,n,r),K:null}),Ne(e,i)},_embind_register_enum_value:function(t,e,n){var r=ye(t,\"enum\");e=ce(e),t=r.constructor,r=Object.create(r.constructor.prototype,{value:{value:n},constructor:{value:Qt(`${r.name}_${e}`,(function(){}))}}),t.values[n]=r,t[e]=r},_embind_register_float:function(t,e,n){n=xe(n),Ie(t,{name:e=ce(e),fromWireType:function(t){return t},toWireType:function(t,e){return e},argPackAdvance:8,readValueFromPointer:rn(e,n),K:null})},_embind_register_function:function(t,e,n,r,i,a){var o=Ze(e,n);t=ce(t),i=Ve(r,i),Ne(t,(function(){Je(`Cannot call ${t} due to unbound types`,o)}),e-1),Oe([],o,(function(n){return ze(t,Ke(t,[n[0],null].concat(n.slice(1)),null,i,a),e-1),[]}))},_embind_register_integer:function(t,e,n,r,i){e=ce(e),-1===i&&(i=4294967295),i=xe(n);var a=t=>t;if(0===r){var o=32-8*n;a=t=>t<<o>>>o}n=e.includes(\"unsigned\")?function(t,e){return e>>>0}:function(t,e){return e},Ie(t,{name:e,fromWireType:a,toWireType:n,argPackAdvance:8,readValueFromPointer:an(e,i,0!==r),K:null})},_embind_register_memory_view:function(t,e,n){function r(t){t>>=2;var e=L;return new i(e.buffer,e[t+1],e[t])}var i=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][e];Ie(t,{name:n=ce(n),fromWireType:r,argPackAdvance:8,readValueFromPointer:r},{$b:!0})},_embind_register_std_string:function(t,e){var n=\"std::string\"===(e=ce(e));Ie(t,{name:e,fromWireType:function(t){var e=L[t>>2],r=t+4;if(n)for(var i=r,a=0;a<=e;++a){var o=r+a;if(a==e||0==E[o]){if(i=i?it(E,i,o-i):\"\",void 0===s)var s=i;else s+=String.fromCharCode(0),s+=i;i=o+1}}else{for(s=Array(e),a=0;a<e;++a)s[a]=String.fromCharCode(E[r+a]);s=s.join(\"\")}return Ln(t),s},toWireType:function(t,e){e instanceof ArrayBuffer&&(e=new Uint8Array(e));var r=\"string\"==typeof e;r||e instanceof Uint8Array||e instanceof Uint8ClampedArray||e instanceof Int8Array||re(\"Cannot pass non-string to std::string\");var i=n&&r?ot(e):e.length,a=Sn(4+i+1),o=a+4;if(L[a>>2]=i,n&&r)st(e,E,o,i+1);else if(r)for(r=0;r<i;++r){var s=e.charCodeAt(r);255<s&&(Ln(o),re(\"String has UTF-16 code units that do not fit in 8 bits\")),E[o+r]=s}else for(r=0;r<i;++r)E[o+r]=e[r];return null!==t&&t.push(Ln,a),a},argPackAdvance:8,readValueFromPointer:Se,K:function(t){Ln(t)}})},_embind_register_std_wstring:function(t,e,n){if(n=ce(n),2===e)var r=sn,i=un,a=cn,o=()=>P,s=1;else 4===e&&(r=ln,i=hn,a=fn,o=()=>L,s=2);Ie(t,{name:n,fromWireType:function(t){for(var n,i=L[t>>2],a=o(),u=t+4,c=0;c<=i;++c){var l=t+4+c*e;c!=i&&0!=a[l>>s]||(u=r(u,l-u),void 0===n?n=u:(n+=String.fromCharCode(0),n+=u),u=l+e)}return Ln(t),n},toWireType:function(t,r){\"string\"!=typeof r&&re(`Cannot pass non-string to C++ string type ${n}`);var o=a(r),u=Sn(4+o+e);return L[u>>2]=o>>s,i(r,u+4,o+e),null!==t&&t.push(Ln,u),u},argPackAdvance:8,readValueFromPointer:Se,K:function(t){Ln(t)}})},_embind_register_value_object:function(t,e,n,r,i,a){Re[t]={name:ce(e),Pa:Ve(n,r),W:Ve(i,a),eb:[]}},_embind_register_value_object_field:function(t,e,n,r,i,a,o,s,u,c){Re[t].eb.push({Sb:ce(e),Yb:n,Wb:Ve(r,i),Xb:a,rc:o,qc:Ve(s,u),sc:c})},_embind_register_void:function(t,e){Ie(t,{fc:!0,name:e=ce(e),argPackAdvance:0,fromWireType:function(){},toWireType:function(){}})},_emval_as:function(t,e,n){t=ie(t),e=ye(e,\"emval::as\");var r=[],i=ae(r);return L[n>>2]=i,e.toWireType(r,t)},_emval_call_method:function(t,e,n,r,i){t=mn[t],e=ie(e),n=pn(n);var a=[];return L[r>>2]=ae(a),t(e,n,a,i)},_emval_call_void_method:function(t,e,n,r){(t=mn[t])(e=ie(e),n=pn(n),null,r)},_emval_decref:tn,_emval_get_method_caller:function(t,e){var n=function(t,e){for(var n=Array(t),r=0;r<t;++r)n[r]=ye(L[e+4*r>>2],\"parameter \"+r);return n}(t,e),r=n[0];e=r.name+\"_$\"+n.slice(1).map((function(t){return t.name})).join(\"_\")+\"$\";var i=yn[e];if(void 0!==i)return i;var a=Array(t-1);return i=function(t){var e=mn.length;return mn.push(t),e}(((e,i,o,s)=>{for(var u=0,c=0;c<t-1;++c)a[c]=n[c+1].readValueFromPointer(s+u),u+=n[c+1].argPackAdvance;for(e=e[i].apply(e,a),c=0;c<t-1;++c)n[c+1].Nb&&n[c+1].Nb(a[c]);if(!r.fc)return r.toWireType(o,e)})),yn[e]=i},_emval_get_module_property:function(t){return t=pn(t),ae(i[t])},_emval_get_property:function(t,e){return t=ie(t),e=ie(e),ae(t[e])},_emval_incref:function(t){4<t&&(ee.get(t).tb+=1)},_emval_new_cstring:function(t){return ae(pn(t))},_emval_new_object:function(){return ae({})},_emval_run_destructors:function(t){Le(ie(t)),tn(t)},_emval_set_property:function(t,e,n){t=ie(t),e=ie(e),n=ie(n),t[e]=n},_emval_take_value:function(t,e){return t=(t=ye(t,\"_emval_take_value\")).readValueFromPointer(e),ae(t)},abort:()=>{W(\"\")},emscripten_asm_const_int:(t,e,n)=>{var r;for(gn.length=0,n>>=2;r=E[e++];)n+=105!=r&n,gn.push(105==r?R[n]:M[n++>>1]),++n;return q[t].apply(null,gn)},emscripten_memcpy_big:(t,e,n)=>E.copyWithin(t,e,e+n),emscripten_resize_heap:t=>{var e=E.length;if(2147483648<(t>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=e*(1+.2/n);r=Math.min(r,t+100663296);var i=Math;r=Math.max(t,r);t:{i=i.min.call(i,2147483648,r+(65536-r%65536)%65536)-_.buffer.byteLength+65535>>>16;try{_.grow(i),O();var a=1;break t}catch(t){}a=void 0}if(a)return!0}return!1},environ_get:(t,e)=>{var n=0;return wn().forEach((function(r,i){var a=e+n;for(i=L[t+4*i>>2]=a,a=0;a<r.length;++a)C[0|i++]=r.charCodeAt(a);C[0|i]=0,n+=r.length+1})),0},environ_sizes_get:(t,e)=>{var n=wn();L[t>>2]=n.length;var r=0;return n.forEach((function(t){r+=t.length+1})),L[e>>2]=r,0},fd_close:function(t){try{var e=kt(t);if(null===e.X)throw new Pt(8);e.Ma&&(e.Ma=null);try{e.m.close&&e.m.close(e)}catch(t){throw t}finally{At[e.X]=null}return e.X=null,0}catch(t){if(void 0===qt||\"ErrnoError\"!==t.name)throw t;return t.aa}},fd_read:function(t,e,n,r){try{t:{var i=kt(t);t=e;for(var a,o=e=0;o<n;o++){var s=L[t>>2],u=L[t+4>>2];t+=8;var c=i,l=s,h=u,f=a,d=C;if(0>h||0>f)throw new Pt(28);if(null===c.X)throw new Pt(8);if(1==(2097155&c.flags))throw new Pt(8);if(16384==(61440&c.node.mode))throw new Pt(31);if(!c.m.read)throw new Pt(28);var p=void 0!==f;if(p){if(!c.seekable)throw new Pt(70)}else f=c.position;var v=c.m.read(c,d,l,h,f);p||(c.position+=v);var m=v;if(0>m){var y=-1;break t}if(e+=m,m<u)break;void 0!==a&&(a+=m)}y=e}return L[r>>2]=y,0}catch(t){if(void 0===qt||\"ErrnoError\"!==t.name)throw t;return t.aa}},fd_seek:function(t,e,n,r,i){e=n+2097152>>>0<4194305-!!e?(e>>>0)+4294967296*n:NaN;try{if(isNaN(e))return 61;var a=kt(t);return Ht(a,e,r),V=[a.position>>>0,(G=a.position,1<=+Math.abs(G)?0<G?+Math.floor(G/4294967296)>>>0:~~+Math.ceil((G-+(~~G>>>0))/4294967296)>>>0:0)],R[i>>2]=V[0],R[i+4>>2]=V[1],a.Ma&&0===e&&0===r&&(a.Ma=null),0}catch(t){if(void 0===qt||\"ErrnoError\"!==t.name)throw t;return t.aa}},fd_write:function(t,e,n,r){try{t:{var i=kt(t);t=e;for(var a,o=e=0;o<n;o++){var s=L[t>>2],u=L[t+4>>2];t+=8;var c=i,l=s,h=u,f=a,d=C;if(0>h||0>f)throw new Pt(28);if(null===c.X)throw new Pt(8);if(!(2097155&c.flags))throw new Pt(8);if(16384==(61440&c.node.mode))throw new Pt(31);if(!c.m.write)throw new Pt(28);c.seekable&&1024&c.flags&&Ht(c,0,2);var p=void 0!==f;if(p){if(!c.seekable)throw new Pt(70)}else f=c.position;var v=c.m.write(c,d,l,h,f,void 0);p||(c.position+=v);var m=v;if(0>m){var y=-1;break t}e+=m,void 0!==a&&(a+=m)}y=e}return L[r>>2]=y,0}catch(t){if(void 0===qt||\"ErrnoError\"!==t.name)throw t;return t.aa}},strftime_l:(t,e,n,r)=>((t,e,n,r)=>{function i(t,e,n){for(t=\"number\"==typeof t?t.toString():t||\"\";t.length<e;)t=n[0]+t;return t}function a(t,e){return i(t,e,\"0\")}function o(t,e){function n(t){return 0>t?-1:0<t?1:0}var r;return 0===(r=n(t.getFullYear()-e.getFullYear()))&&0===(r=n(t.getMonth()-e.getMonth()))&&(r=n(t.getDate()-e.getDate())),r}function s(t){switch(t.getDay()){case 0:return new Date(t.getFullYear()-1,11,29);case 1:return t;case 2:return new Date(t.getFullYear(),0,3);case 3:return new Date(t.getFullYear(),0,2);case 4:return new Date(t.getFullYear(),0,1);case 5:return new Date(t.getFullYear()-1,11,31);case 6:return new Date(t.getFullYear()-1,11,30)}}function u(t){var e=t.ca;for(t=new Date(new Date(t.da+1900,0,1).getTime());0<e;){var n=t.getMonth(),r=(_n(t.getFullYear())?An:Cn)[n];if(!(e>r-t.getDate())){t.setDate(t.getDate()+e);break}e-=r-t.getDate()+1,t.setDate(1),11>n?t.setMonth(n+1):(t.setMonth(0),t.setFullYear(t.getFullYear()+1))}return n=new Date(t.getFullYear()+1,0,4),e=s(new Date(t.getFullYear(),0,4)),n=s(n),0>=o(e,t)?0>=o(n,t)?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var c=R[r+40>>2];for(var l in r={wc:R[r>>2],vc:R[r+4>>2],Fa:R[r+8>>2],Sa:R[r+12>>2],Ga:R[r+16>>2],da:R[r+20>>2],R:R[r+24>>2],ca:R[r+28>>2],Rc:R[r+32>>2],uc:R[r+36>>2],xc:c&&c?it(E,c):\"\"},n=n?it(E,n):\"\",c={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})n=n.replace(new RegExp(l,\"g\"),c[l]);var h=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),f=\"January February March April May June July August September October November December\".split(\" \");for(l in c={\"%a\":t=>h[t.R].substring(0,3),\"%A\":t=>h[t.R],\"%b\":t=>f[t.Ga].substring(0,3),\"%B\":t=>f[t.Ga],\"%C\":t=>a((t.da+1900)/100|0,2),\"%d\":t=>a(t.Sa,2),\"%e\":t=>i(t.Sa,2,\" \"),\"%g\":t=>u(t).toString().substring(2),\"%G\":t=>u(t),\"%H\":t=>a(t.Fa,2),\"%I\":t=>(0==(t=t.Fa)?t=12:12<t&&(t-=12),a(t,2)),\"%j\":t=>{for(var e=0,n=0;n<=t.Ga-1;e+=(_n(t.da+1900)?An:Cn)[n++]);return a(t.Sa+e,3)},\"%m\":t=>a(t.Ga+1,2),\"%M\":t=>a(t.vc,2),\"%n\":()=>\"\\n\",\"%p\":t=>0<=t.Fa&&12>t.Fa?\"AM\":\"PM\",\"%S\":t=>a(t.wc,2),\"%t\":()=>\"\\t\",\"%u\":t=>t.R||7,\"%U\":t=>a(Math.floor((t.ca+7-t.R)/7),2),\"%V\":t=>{var e=Math.floor((t.ca+7-(t.R+6)%7)/7);if(2>=(t.R+371-t.ca-2)%7&&e++,e)53==e&&(4==(n=(t.R+371-t.ca)%7)||3==n&&_n(t.da)||(e=1));else{e=52;var n=(t.R+7-t.ca-1)%7;(4==n||5==n&&_n(t.da%400-1))&&e++}return a(e,2)},\"%w\":t=>t.R,\"%W\":t=>a(Math.floor((t.ca+7-(t.R+6)%7)/7),2),\"%y\":t=>(t.da+1900).toString().substring(2),\"%Y\":t=>t.da+1900,\"%z\":t=>{var e=0<=(t=t.uc);return t=Math.abs(t)/60,(e?\"+\":\"-\")+String(\"0000\"+(t/60*100+t%60)).slice(-4)},\"%Z\":t=>t.xc,\"%%\":()=>\"%\"},n=n.replace(/%%/g,\"\\0\\0\"),c)n.includes(l)&&(n=n.replace(new RegExp(l,\"g\"),c[l](r)));return(l=ut(n=n.replace(/\\0\\0/g,\"%\"),!1)).length>e?0:(C.set(l,t),l.length-1)})(t,e,n,r)};!function(){function t(t){if(A=t=t.exports,_=A.memory,O(),x=A.__indirect_function_table,F.unshift(A.__wasm_call_ctors),U--,i.monitorRunDependencies&&i.monitorRunDependencies(U),0==U&&(null!==B&&(clearInterval(B),B=null),$)){var e=$;$=null,e()}return t}var e={env:Rn,wasi_snapshot_preview1:Rn};if(U++,i.monitorRunDependencies&&i.monitorRunDependencies(U),i.instantiateWasm)try{return i.instantiateWasm(e,t)}catch(t){w(\"Module.instantiateWasm callback failed with error: \"+t),n(t)}(function(t,e){var n=N;return g||\"function\"!=typeof WebAssembly.instantiateStreaming||Y(n)||n.startsWith(\"file://\")||\"function\"!=typeof fetch?H(n,t,e):fetch(n,{credentials:\"same-origin\"}).then((r=>WebAssembly.instantiateStreaming(r,t).then(e,(function(r){return w(\"wasm streaming compile failed: \"+r),w(\"falling back to ArrayBuffer instantiation\"),H(n,t,e)}))))})(e,(function(e){t(e.instance)})).catch(n)}();var Ln=t=>(Ln=A.free)(t),Sn=t=>(Sn=A.malloc)(t),Mn=i._ma_device__on_notification_unlocked=t=>(Mn=i._ma_device__on_notification_unlocked=A.ma_device__on_notification_unlocked)(t);i._ma_malloc_emscripten=(t,e)=>(i._ma_malloc_emscripten=A.ma_malloc_emscripten)(t,e),i._ma_free_emscripten=(t,e)=>(i._ma_free_emscripten=A.ma_free_emscripten)(t,e);var jn,On=i._ma_device_process_pcm_frames_capture__webaudio=(t,e,n)=>(On=i._ma_device_process_pcm_frames_capture__webaudio=A.ma_device_process_pcm_frames_capture__webaudio)(t,e,n),xn=i._ma_device_process_pcm_frames_playback__webaudio=(t,e,n)=>(xn=i._ma_device_process_pcm_frames_playback__webaudio=A.ma_device_process_pcm_frames_playback__webaudio)(t,e,n),In=()=>(In=A.__errno_location)(),Fn=t=>(Fn=A.__getTypeName)(t);function kn(){function t(){if(!jn&&(jn=!0,i.calledRun=!0,!j)){if(i.noFSInit||vt||(vt=!0,Gt(),i.stdin=i.stdin,i.stdout=i.stdout,i.stderr=i.stderr,i.stdin?Vt(\"stdin\",i.stdin):Yt(\"/dev/tty\",\"/dev/stdin\"),i.stdout?Vt(\"stdout\",null,i.stdout):Yt(\"/dev/tty\",\"/dev/stdout\"),i.stderr?Vt(\"stderr\",null,i.stderr):Yt(\"/dev/tty1\",\"/dev/stderr\"),zt(\"/dev/stdin\",0),zt(\"/dev/stdout\",1),zt(\"/dev/stderr\",1)),Tt=!1,J(F),e(i),i.onRuntimeInitialized&&i.onRuntimeInitialized(),i.postRun)for(\"function\"==typeof i.postRun&&(i.postRun=[i.postRun]);i.postRun.length;){var t=i.postRun.shift();k.unshift(t)}J(k)}}if(!(0<U)){if(i.preRun)for(\"function\"==typeof i.preRun&&(i.preRun=[i.preRun]);i.preRun.length;)D();J(I),0<U||(i.setStatus?(i.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){i.setStatus(\"\")}),1),t()}),1)):t())}}if(i.__embind_initialize_bindings=()=>(i.__embind_initialize_bindings=A._embind_initialize_bindings)(),i.dynCall_iiji=(t,e,n,r,a)=>(i.dynCall_iiji=A.dynCall_iiji)(t,e,n,r,a),i.dynCall_jiji=(t,e,n,r,a)=>(i.dynCall_jiji=A.dynCall_jiji)(t,e,n,r,a),i.dynCall_iiiji=(t,e,n,r,a,o)=>(i.dynCall_iiiji=A.dynCall_iiiji)(t,e,n,r,a,o),i.dynCall_iij=(t,e,n,r)=>(i.dynCall_iij=A.dynCall_iij)(t,e,n,r),i.dynCall_jii=(t,e,n)=>(i.dynCall_jii=A.dynCall_jii)(t,e,n),i.dynCall_viijii=(t,e,n,r,a,o,s)=>(i.dynCall_viijii=A.dynCall_viijii)(t,e,n,r,a,o,s),i.dynCall_iiiiij=(t,e,n,r,a,o,s)=>(i.dynCall_iiiiij=A.dynCall_iiiiij)(t,e,n,r,a,o,s),i.dynCall_iiiiijj=(t,e,n,r,a,o,s,u,c)=>(i.dynCall_iiiiijj=A.dynCall_iiiiijj)(t,e,n,r,a,o,s,u,c),i.dynCall_iiiiiijj=(t,e,n,r,a,o,s,u,c,l)=>(i.dynCall_iiiiiijj=A.dynCall_iiiiiijj)(t,e,n,r,a,o,s,u,c,l),$=function t(){jn||kn(),jn||($=t)},i.preInit)for(\"function\"==typeof i.preInit&&(i.preInit=[i.preInit]);0<i.preInit.length;)i.preInit.pop()();return kn(),t.ready});const a=i},t=>{t.exports=JSON.parse('{\"name\":\"@rive-app/canvas\",\"version\":\"2.15.6\",\"description\":\"Rive\\'s canvas based web api.\",\"main\":\"rive.js\",\"homepage\":\"https://rive.app\",\"repository\":{\"type\":\"git\",\"url\":\"https://github.com/rive-app/rive-wasm/tree/master/js\"},\"keywords\":[\"rive\",\"animation\"],\"author\":\"Rive\",\"contributors\":[\"Luigi Rosso <luigi@rive.app> (https://rive.app)\",\"Maxwell Talbot <max@rive.app> (https://rive.app)\",\"Arthur Vivian <arthur@rive.app> (https://rive.app)\",\"Umberto Sonnino <umberto@rive.app> (https://rive.app)\",\"Matthew Sullivan <matt.j.sullivan@gmail.com> (mailto:matt.j.sullivan@gmail.com)\"],\"license\":\"MIT\",\"files\":[\"rive.js\",\"rive.js.map\",\"rive.wasm\",\"rive_fallback.wasm\",\"rive.d.ts\",\"rive_advanced.mjs.d.ts\"],\"typings\":\"rive.d.ts\",\"dependencies\":{},\"browser\":{\"fs\":false,\"path\":false}}')},(t,e,n)=>{n.r(e),n.d(e,{BLANK_URL:()=>i.BLANK_URL,registerTouchInteractions:()=>r.registerTouchInteractions,sanitizeUrl:()=>i.sanitizeUrl});var r=n(4),i=n(5)},(t,e,n)=>{n.r(e),n.d(e,{registerTouchInteractions:()=>r});var r=function(t){var e=t.canvas,n=t.artboard,r=t.stateMachines,i=void 0===r?[]:r,a=t.renderer,o=t.rive,s=t.fit,u=t.alignment,c=t.isTouchScrollEnabled,l=void 0!==c&&c;if(!(e&&i.length&&a&&o&&n&&\"undefined\"!=typeof window))return null;var h=function(t){var e=t.currentTarget.getBoundingClientRect(),r=function(t,e){var n,r;return[\"touchstart\",\"touchmove\"].indexOf(t.type)>-1&&(null===(n=t.touches)||void 0===n?void 0:n.length)?(e||t.preventDefault(),{clientX:t.touches[0].clientX,clientY:t.touches[0].clientY}):\"touchend\"===t.type&&(null===(r=t.changedTouches)||void 0===r?void 0:r.length)?{clientX:t.changedTouches[0].clientX,clientY:t.changedTouches[0].clientY}:{clientX:t.clientX,clientY:t.clientY}}(t,l),a=r.clientX,c=r.clientY;if(a||c){var h=a-e.left,f=c-e.top,d=o.computeAlignment(s,u,{minX:0,minY:0,maxX:e.width,maxY:e.height},n.bounds),p=new o.Mat2D;d.invert(p);var v=new o.Vec2D(h,f),m=o.mapXY(p,v),y=m.x(),g=m.y();switch(m.delete(),p.delete(),v.delete(),d.delete(),t.type){case\"mouseout\":for(var b=0,w=i;b<w.length;b++)w[b].pointerMove(y<0?y-1e4:y+1e4,g<0?g-1e4:g+1e4);break;case\"touchmove\":case\"mouseover\":case\"mousemove\":for(var _=0,A=i;_<A.length;_++)A[_].pointerMove(y,g);break;case\"touchstart\":case\"mousedown\":for(var C=0,E=i;C<E.length;C++)E[C].pointerDown(y,g);break;case\"touchend\":case\"mouseup\":for(var T=0,P=i;T<P.length;T++)P[T].pointerUp(y,g)}}}.bind(void 0);return e.addEventListener(\"mouseover\",h),e.addEventListener(\"mouseout\",h),e.addEventListener(\"mousemove\",h),e.addEventListener(\"mousedown\",h),e.addEventListener(\"mouseup\",h),e.addEventListener(\"touchmove\",h),e.addEventListener(\"touchstart\",h),e.addEventListener(\"touchend\",h),function(){e.removeEventListener(\"mouseover\",h),e.removeEventListener(\"mouseout\",h),e.removeEventListener(\"mousemove\",h),e.removeEventListener(\"mousedown\",h),e.removeEventListener(\"mouseup\",h),e.removeEventListener(\"touchmove\",h),e.removeEventListener(\"touchstart\",h),e.removeEventListener(\"touchend\",h)}}},(t,e,n)=>{n.r(e),n.d(e,{BLANK_URL:()=>c,sanitizeUrl:()=>l});var r=/^([^\\w]*)(javascript|data|vbscript)/im,i=/&#(\\w+)(^\\w|;)?/g,a=/&(newline|tab);/gi,o=/[\\u0000-\\u001F\\u007F-\\u009F\\u2000-\\u200D\\uFEFF]/gim,s=/^.+(:|&colon;)/gim,u=[\".\",\"/\"],c=\"about:blank\";function l(t){if(!t)return c;var e,n=(e=t,e.replace(o,\"\").replace(i,(function(t,e){return String.fromCharCode(e)}))).replace(a,\"\").replace(o,\"\").trim();if(!n)return c;if(function(t){return u.indexOf(t[0])>-1}(n))return n;var l=n.match(s);if(!l)return n;var h=l[0];return r.test(h)?c:n}}],e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={exports:{}};return t[r](a,a.exports,n),a.exports}n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),n.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})};var r={};return(()=>{n.r(r),n.d(r,{Alignment:()=>i,EventType:()=>y,Fit:()=>e,Layout:()=>f,LoopType:()=>g,Rive:()=>S,RiveEventType:()=>v,RuntimeLoader:()=>d,StateMachineInput:()=>m,StateMachineInputType:()=>h,Testing:()=>O,decodeAudio:()=>x,decodeFont:()=>F,decodeImage:()=>I});var t,e,i,a=n(1),o=n(2),s=n(3),u=(t=function(e,n){return t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])},t(e,n)},function(e,n){if(\"function\"!=typeof n&&null!==n)throw new TypeError(\"Class extends value \"+String(n)+\" is not a constructor or null\");function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}),c=function(t,e,n,r){return new(n||(n=Promise))((function(i,a){function o(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(o,s)}u((r=r.apply(t,e||[])).next())}))},l=function(t,e){var n,r,i,a,o={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(s){return function(u){return function(s){if(n)throw new TypeError(\"Generator is already executing.\");for(;a&&(a=0,s[0]&&(o=0)),o;)try{if(n=1,r&&(i=2&s[0]?r.return:s[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,s[1])).done)return i;switch(r=0,i&&(s=[2&s[0],i.value]),s[0]){case 0:case 1:i=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!((i=(i=o.trys).length>0&&i[i.length-1])||6!==s[0]&&2!==s[0])){o=0;continue}if(3===s[0]&&(!i||s[1]>i[0]&&s[1]<i[3])){o.label=s[1];break}if(6===s[0]&&o.label<i[1]){o.label=i[1],i=s;break}if(i&&o.label<i[2]){o.label=i[2],o.ops.push(s);break}i[2]&&o.ops.pop(),o.trys.pop();continue}s=e.call(t,o)}catch(t){s=[6,t],r=0}finally{n=i=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,u])}}};!function(t){t.Cover=\"cover\",t.Contain=\"contain\",t.Fill=\"fill\",t.FitWidth=\"fitWidth\",t.FitHeight=\"fitHeight\",t.None=\"none\",t.ScaleDown=\"scaleDown\"}(e||(e={})),function(t){t.Center=\"center\",t.TopLeft=\"topLeft\",t.TopCenter=\"topCenter\",t.TopRight=\"topRight\",t.CenterLeft=\"centerLeft\",t.CenterRight=\"centerRight\",t.BottomLeft=\"bottomLeft\",t.BottomCenter=\"bottomCenter\",t.BottomRight=\"bottomRight\"}(i||(i={}));var h,f=function(){function t(t){var n,r,a,o,s,u;this.fit=null!==(n=null==t?void 0:t.fit)&&void 0!==n?n:e.Contain,this.alignment=null!==(r=null==t?void 0:t.alignment)&&void 0!==r?r:i.Center,this.minX=null!==(a=null==t?void 0:t.minX)&&void 0!==a?a:0,this.minY=null!==(o=null==t?void 0:t.minY)&&void 0!==o?o:0,this.maxX=null!==(s=null==t?void 0:t.maxX)&&void 0!==s?s:0,this.maxY=null!==(u=null==t?void 0:t.maxY)&&void 0!==u?u:0}return t.new=function(e){var n=e.fit,r=e.alignment,i=e.minX,a=e.minY,o=e.maxX,s=e.maxY;return console.warn(\"This function is deprecated: please use `new Layout({})` instead\"),new t({fit:n,alignment:r,minX:i,minY:a,maxX:o,maxY:s})},t.prototype.copyWith=function(e){var n=e.fit,r=e.alignment,i=e.minX,a=e.minY,o=e.maxX,s=e.maxY;return new t({fit:null!=n?n:this.fit,alignment:null!=r?r:this.alignment,minX:null!=i?i:this.minX,minY:null!=a?a:this.minY,maxX:null!=o?o:this.maxX,maxY:null!=s?s:this.maxY})},t.prototype.runtimeFit=function(t){return this.cachedRuntimeFit?this.cachedRuntimeFit:(n=this.fit===e.Cover?t.Fit.cover:this.fit===e.Contain?t.Fit.contain:this.fit===e.Fill?t.Fit.fill:this.fit===e.FitWidth?t.Fit.fitWidth:this.fit===e.FitHeight?t.Fit.fitHeight:this.fit===e.ScaleDown?t.Fit.scaleDown:t.Fit.none,this.cachedRuntimeFit=n,n);var n},t.prototype.runtimeAlignment=function(t){return this.cachedRuntimeAlignment?this.cachedRuntimeAlignment:(e=this.alignment===i.TopLeft?t.Alignment.topLeft:this.alignment===i.TopCenter?t.Alignment.topCenter:this.alignment===i.TopRight?t.Alignment.topRight:this.alignment===i.CenterLeft?t.Alignment.centerLeft:this.alignment===i.CenterRight?t.Alignment.centerRight:this.alignment===i.BottomLeft?t.Alignment.bottomLeft:this.alignment===i.BottomCenter?t.Alignment.bottomCenter:this.alignment===i.BottomRight?t.Alignment.bottomRight:t.Alignment.center,this.cachedRuntimeAlignment=e,e);var e},t}(),d=function(){function t(){}return t.loadRuntime=function(){a.default({locateFile:function(){return t.wasmURL}}).then((function(e){var n;for(t.runtime=e;t.callBackQueue.length>0;)null===(n=t.callBackQueue.shift())||void 0===n||n(t.runtime)})).catch((function(){var e=\"https://cdn.jsdelivr.net/npm/\".concat(o.name,\"@\").concat(o.version,\"/rive_fallback.wasm\");t.wasmURL.toLowerCase()!==e?(console.warn(\"Failed to load WASM from \".concat(t.wasmURL,\", trying jsdelivr as a backup\")),t.setWasmUrl(e),t.loadRuntime()):console.error(\"Could not load Rive WASM file from unpkg or jsdelivr, network connection may be down, or         you may need to call set a new WASM source via RuntimeLoader.setWasmUrl() and call         RuntimeLoader.loadRuntime() again\")}))},t.getInstance=function(e){t.isLoading||(t.isLoading=!0,t.loadRuntime()),t.runtime?e(t.runtime):t.callBackQueue.push(e)},t.awaitInstance=function(){return new Promise((function(e){return t.getInstance((function(t){return e(t)}))}))},t.setWasmUrl=function(e){t.wasmURL=e},t.isLoading=!1,t.callBackQueue=[],t.wasmURL=\"https://unpkg.com/\".concat(o.name,\"@\").concat(o.version,\"/rive.wasm\"),t}(),p=function(){function t(t,e,n,r){this.animation=t,this.artboard=e,this.playing=r,this.loopCount=0,this.scrubTo=null,this.instance=new n.LinearAnimationInstance(t,e)}return Object.defineProperty(t.prototype,\"name\",{get:function(){return this.animation.name},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"time\",{get:function(){return this.instance.time},set:function(t){this.instance.time=t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"loopValue\",{get:function(){return this.animation.loopValue},enumerable:!1,configurable:!0}),t.prototype.advance=function(t){null===this.scrubTo?this.instance.advance(t):(this.instance.time=0,this.instance.advance(this.scrubTo),this.scrubTo=null)},t.prototype.apply=function(t){this.instance.apply(t)},Object.defineProperty(t.prototype,\"needsScrub\",{get:function(){return null!==this.scrubTo},enumerable:!1,configurable:!0}),t.prototype.cleanup=function(){this.instance.delete()},t}();!function(t){t[t.Number=56]=\"Number\",t[t.Trigger=58]=\"Trigger\",t[t.Boolean=59]=\"Boolean\"}(h||(h={}));var v,m=function(){function t(t,e){this.type=t,this.runtimeInput=e}return Object.defineProperty(t.prototype,\"name\",{get:function(){return this.runtimeInput.name},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"value\",{get:function(){return this.runtimeInput.value},set:function(t){this.runtimeInput.value=t},enumerable:!1,configurable:!0}),t.prototype.fire=function(){this.type===h.Trigger&&this.runtimeInput.fire()},t}();!function(t){t[t.General=128]=\"General\",t[t.OpenUrl=131]=\"OpenUrl\"}(v||(v={}));var y,g,b=function(){function t(t,e,n,r){this.stateMachine=t,this.playing=n,this.artboard=r,this.inputs=[],this.instance=new e.StateMachineInstance(t,r),this.initInputs(e)}return Object.defineProperty(t.prototype,\"name\",{get:function(){return this.stateMachine.name},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"statesChanged\",{get:function(){for(var t=[],e=0;e<this.instance.stateChangedCount();e++)t.push(this.instance.stateChangedNameByIndex(e));return t},enumerable:!1,configurable:!0}),t.prototype.advance=function(t){this.instance.advance(t)},t.prototype.reportedEventCount=function(){return this.instance.reportedEventCount()},t.prototype.reportedEventAt=function(t){return this.instance.reportedEventAt(t)},t.prototype.initInputs=function(t){for(var e=0;e<this.instance.inputCount();e++){var n=this.instance.input(e);this.inputs.push(this.mapRuntimeInput(n,t))}},t.prototype.mapRuntimeInput=function(t,e){return t.type===e.SMIInput.bool?new m(h.Boolean,t.asBool()):t.type===e.SMIInput.number?new m(h.Number,t.asNumber()):t.type===e.SMIInput.trigger?new m(h.Trigger,t.asTrigger()):void 0},t.prototype.cleanup=function(){this.instance.delete()},t}(),w=function(){function t(t,e,n,r,i){void 0===r&&(r=[]),void 0===i&&(i=[]),this.runtime=t,this.artboard=e,this.eventManager=n,this.animations=r,this.stateMachines=i}return t.prototype.add=function(t,e,n){if(void 0===n&&(n=!0),0===(t=j(t)).length)this.animations.forEach((function(t){return t.playing=e})),this.stateMachines.forEach((function(t){return t.playing=e}));else for(var r=this.animations.map((function(t){return t.name})),i=this.stateMachines.map((function(t){return t.name})),a=0;a<t.length;a++){var o=r.indexOf(t[a]),s=i.indexOf(t[a]);if(o>=0||s>=0)o>=0?this.animations[o].playing=e:this.stateMachines[s].playing=e;else{var u=this.artboard.animationByName(t[a]);if(u){var c=new p(u,this.artboard,this.runtime,e);c.advance(0),c.apply(1),this.animations.push(c)}else{var l=this.artboard.stateMachineByName(t[a]);if(l){var h=new b(l,this.runtime,e,this.artboard);this.stateMachines.push(h)}}}}return n&&(e?this.eventManager.fire({type:y.Play,data:this.playing}):this.eventManager.fire({type:y.Pause,data:this.paused})),e?this.playing:this.paused},t.prototype.initLinearAnimations=function(t,e){for(var n=this.animations.map((function(t){return t.name})),r=0;r<t.length;r++){var i=n.indexOf(t[r]);if(i>=0)this.animations[i].playing=e;else{var a=this.artboard.animationByName(t[r]);if(a){var o=new p(a,this.artboard,this.runtime,e);o.advance(0),o.apply(1),this.animations.push(o)}}}},t.prototype.initStateMachines=function(t,e){for(var n=this.stateMachines.map((function(t){return t.name})),r=0;r<t.length;r++){var i=n.indexOf(t[r]);if(i>=0)this.stateMachines[i].playing=e;else{var a=this.artboard.stateMachineByName(t[r]);if(a){var o=new b(a,this.runtime,e,this.artboard);this.stateMachines.push(o)}else this.initLinearAnimations([t[r]],e)}}},t.prototype.play=function(t){return this.add(t,!0)},t.prototype.pause=function(t){return this.add(t,!1)},t.prototype.scrub=function(t,e){var n=this.animations.filter((function(e){return t.includes(e.name)}));return n.forEach((function(t){return t.scrubTo=e})),n.map((function(t){return t.name}))},Object.defineProperty(t.prototype,\"playing\",{get:function(){return this.animations.filter((function(t){return t.playing})).map((function(t){return t.name})).concat(this.stateMachines.filter((function(t){return t.playing})).map((function(t){return t.name})))},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"paused\",{get:function(){return this.animations.filter((function(t){return!t.playing})).map((function(t){return t.name})).concat(this.stateMachines.filter((function(t){return!t.playing})).map((function(t){return t.name})))},enumerable:!1,configurable:!0}),t.prototype.stop=function(t){var e=this,n=[];if(0===(t=j(t)).length)n=this.animations.map((function(t){return t.name})).concat(this.stateMachines.map((function(t){return t.name}))),this.animations.forEach((function(t){return t.cleanup()})),this.stateMachines.forEach((function(t){return t.cleanup()})),this.animations.splice(0,this.animations.length),this.stateMachines.splice(0,this.stateMachines.length);else{var r=this.animations.filter((function(e){return t.includes(e.name)}));r.forEach((function(t){t.cleanup(),e.animations.splice(e.animations.indexOf(t),1)}));var i=this.stateMachines.filter((function(e){return t.includes(e.name)}));i.forEach((function(t){t.cleanup(),e.stateMachines.splice(e.stateMachines.indexOf(t),1)})),n=r.map((function(t){return t.name})).concat(i.map((function(t){return t.name})))}return this.eventManager.fire({type:y.Stop,data:n}),n},Object.defineProperty(t.prototype,\"isPlaying\",{get:function(){return this.animations.reduce((function(t,e){return t||e.playing}),!1)||this.stateMachines.reduce((function(t,e){return t||e.playing}),!1)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isPaused\",{get:function(){return!this.isPlaying&&(this.animations.length>0||this.stateMachines.length>0)},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isStopped\",{get:function(){return 0===this.animations.length&&0===this.stateMachines.length},enumerable:!1,configurable:!0}),t.prototype.atLeastOne=function(t,e){var n;return void 0===e&&(e=!0),0===this.animations.length&&0===this.stateMachines.length&&(this.artboard.animationCount()>0?this.add([n=this.artboard.animationByIndex(0).name],t,e):this.artboard.stateMachineCount()>0&&this.add([n=this.artboard.stateMachineByIndex(0).name],t,e)),n},t.prototype.handleLooping=function(){for(var t=0,e=this.animations.filter((function(t){return t.playing}));t<e.length;t++){var n=e[t];0===n.loopValue&&n.loopCount?(n.loopCount=0,this.stop(n.name)):1===n.loopValue&&n.loopCount?(this.eventManager.fire({type:y.Loop,data:{animation:n.name,type:g.Loop}}),n.loopCount=0):2===n.loopValue&&n.loopCount>1&&(this.eventManager.fire({type:y.Loop,data:{animation:n.name,type:g.PingPong}}),n.loopCount=0)}},t.prototype.handleStateChanges=function(){for(var t=[],e=0,n=this.stateMachines.filter((function(t){return t.playing}));e<n.length;e++){var r=n[e];t.push.apply(t,r.statesChanged)}t.length>0&&this.eventManager.fire({type:y.StateChange,data:t})},t.prototype.handleAdvancing=function(t){this.eventManager.fire({type:y.Advance,data:t})},t}();!function(t){t.Load=\"load\",t.LoadError=\"loaderror\",t.Play=\"play\",t.Pause=\"pause\",t.Stop=\"stop\",t.Loop=\"loop\",t.Draw=\"draw\",t.Advance=\"advance\",t.StateChange=\"statechange\",t.RiveEvent=\"riveevent\",t.AudioStatusChange=\"audiostatuschange\"}(y||(y={})),function(t){t.OneShot=\"oneshot\",t.Loop=\"loop\",t.PingPong=\"pingpong\"}(g||(g={}));var _,A=function(){function t(t){void 0===t&&(t=[]),this.listeners=t}return t.prototype.getListeners=function(t){return this.listeners.filter((function(e){return e.type===t}))},t.prototype.add=function(t){this.listeners.includes(t)||this.listeners.push(t)},t.prototype.remove=function(t){for(var e=0;e<this.listeners.length;e++){var n=this.listeners[e];if(n.type===t.type&&n.callback===t.callback){this.listeners.splice(e,1);break}}},t.prototype.removeAll=function(t){var e=this;t?this.listeners.filter((function(e){return e.type===t})).forEach((function(t){return e.remove(t)})):this.listeners.splice(0,this.listeners.length)},t.prototype.fire=function(t){this.getListeners(t.type).forEach((function(e){return e.callback(t)}))},t}(),C=function(){function t(t){this.eventManager=t,this.queue=[]}return t.prototype.add=function(t){this.queue.push(t)},t.prototype.process=function(){for(;this.queue.length>0;){var t=this.queue.shift();(null==t?void 0:t.action)&&t.action(),(null==t?void 0:t.event)&&this.eventManager.fire(t.event)}},t}();!function(t){t[t.AVAILABLE=0]=\"AVAILABLE\",t[t.UNAVAILABLE=1]=\"UNAVAILABLE\"}(_||(_={}));var E=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e._started=!1,e._enabled=!1,e._status=_.UNAVAILABLE,e}return u(e,t),e.prototype.delay=function(t){return c(this,void 0,void 0,(function(){return l(this,(function(e){return[2,new Promise((function(e){return setTimeout(e,t)}))]}))}))},e.prototype.timeout=function(){return c(this,void 0,void 0,(function(){return l(this,(function(t){return[2,new Promise((function(t,e){return setTimeout(e,50)}))]}))}))},e.prototype.reportToListeners=function(){this.fire({type:y.AudioStatusChange}),this.removeAll()},e.prototype.enableAudio=function(){return c(this,void 0,void 0,(function(){return l(this,(function(t){return this._enabled||(this._enabled=!0,this._status=_.AVAILABLE,this.reportToListeners()),[2]}))}))},e.prototype.testAudio=function(){return c(this,void 0,void 0,(function(){return l(this,(function(t){switch(t.label){case 0:if(this._status!==_.UNAVAILABLE||null===this._audioContext)return[3,4];t.label=1;case 1:return t.trys.push([1,3,,4]),[4,Promise.race([this._audioContext.resume(),this.timeout()])];case 2:return t.sent(),this.enableAudio(),[3,4];case 3:return t.sent(),[3,4];case 4:return[2]}}))}))},e.prototype._establishAudio=function(){return c(this,void 0,void 0,(function(){return l(this,(function(t){switch(t.label){case 0:return this._started?[3,5]:(this._started=!0,\"undefined\"!=typeof window?[3,1]:(this.enableAudio(),[3,5]));case 1:this._audioContext=new AudioContext,this.listenForUserAction(),t.label=2;case 2:return this._status!==_.UNAVAILABLE?[3,5]:[4,this.testAudio()];case 3:return t.sent(),[4,this.delay(1e3)];case 4:return t.sent(),[3,2];case 5:return[2]}}))}))},e.prototype.listenForUserAction=function(){var t=this;document.addEventListener(\"pointerdown\",(function(){return c(t,void 0,void 0,(function(){return l(this,(function(t){return this.enableAudio(),[2]}))}))}),{once:!0})},e.prototype.establishAudio=function(){return c(this,void 0,void 0,(function(){return l(this,(function(t){return this._establishAudio(),[2]}))}))},Object.defineProperty(e.prototype,\"systemVolume\",{get:function(){return this._status===_.UNAVAILABLE?(this.testAudio(),0):1},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,\"status\",{get:function(){return this._status},enumerable:!1,configurable:!0}),e}(A),T=new E,P=function(){function t(){}return t.prototype.observe=function(){},t.prototype.unobserve=function(){},t.prototype.disconnect=function(){},t}(),R=globalThis.ResizeObserver||P,L=new(function(){function t(){var t=this;this._elementsMap=new Map,this._onObservedEntry=function(e){var n=t._elementsMap.get(e.target);null!==n?n.onResize(0==e.target.clientWidth||0==e.target.clientHeight):t._resizeObserver.unobserve(e.target)},this._onObserved=function(e){e.forEach(t._onObservedEntry)},this._resizeObserver=new R(this._onObserved)}return t.prototype.add=function(t,e){var n={onResize:e,element:t};return this._elementsMap.set(t,n),this._resizeObserver.observe(t),n},t.prototype.remove=function(t){this._resizeObserver.unobserve(t.element),this._elementsMap.delete(t.element)},t}()),S=function(){function t(t){var e,n=this;this.loaded=!1,this.readyForPlaying=!1,this.artboard=null,this.eventCleanup=null,this.shouldDisableRiveListeners=!1,this.automaticallyHandleEvents=!1,this.enableRiveAssetCDN=!0,this._volume=1,this._hasZeroSize=!1,this.durations=[],this.frameTimes=[],this.frameCount=0,this.isTouchScrollEnabled=!1,this.onCanvasResize=function(t){n._hasZeroSize=t,n._layout.maxX&&n._layout.maxY||n.resizeToCanvas()},this.renderSecondTimer=0,this.canvas=t.canvas,t.canvas.constructor===HTMLCanvasElement&&(this._observed=L.add(this.canvas,this.onCanvasResize)),this.src=t.src,this.buffer=t.buffer,this.layout=null!==(e=t.layout)&&void 0!==e?e:new f,this.shouldDisableRiveListeners=!!t.shouldDisableRiveListeners,this.isTouchScrollEnabled=!!t.isTouchScrollEnabled,this.automaticallyHandleEvents=!!t.automaticallyHandleEvents,this.enableRiveAssetCDN=void 0===t.enableRiveAssetCDN||t.enableRiveAssetCDN,this.eventManager=new A,t.onLoad&&this.on(y.Load,t.onLoad),t.onLoadError&&this.on(y.LoadError,t.onLoadError),t.onPlay&&this.on(y.Play,t.onPlay),t.onPause&&this.on(y.Pause,t.onPause),t.onStop&&this.on(y.Stop,t.onStop),t.onLoop&&this.on(y.Loop,t.onLoop),t.onStateChange&&this.on(y.StateChange,t.onStateChange),t.onAdvance&&this.on(y.Advance,t.onAdvance),t.onload&&!t.onLoad&&this.on(y.Load,t.onload),t.onloaderror&&!t.onLoadError&&this.on(y.LoadError,t.onloaderror),t.onplay&&!t.onPlay&&this.on(y.Play,t.onplay),t.onpause&&!t.onPause&&this.on(y.Pause,t.onpause),t.onstop&&!t.onStop&&this.on(y.Stop,t.onstop),t.onloop&&!t.onLoop&&this.on(y.Loop,t.onloop),t.onstatechange&&!t.onStateChange&&this.on(y.StateChange,t.onstatechange),t.assetLoader&&(this.assetLoader=t.assetLoader),this.taskQueue=new C(this.eventManager),this.init({src:this.src,buffer:this.buffer,autoplay:t.autoplay,animations:t.animations,stateMachines:t.stateMachines,artboard:t.artboard,useOffscreenRenderer:t.useOffscreenRenderer})}return t.new=function(e){return console.warn(\"This function is deprecated: please use `new Rive({})` instead\"),new t(e)},t.prototype.onSystemAudioChanged=function(){this.volume=this._volume},t.prototype.init=function(e){var n=this,r=e.src,i=e.buffer,a=e.animations,o=e.stateMachines,s=e.artboard,u=e.autoplay,c=void 0!==u&&u,l=e.useOffscreenRenderer,h=void 0!==l&&l;if(this.src=r,this.buffer=i,!this.src&&!this.buffer)throw new Error(t.missingErrorMessage);var f=j(a),p=j(o);this.loaded=!1,this.readyForPlaying=!1,d.awaitInstance().then((function(t){n.runtime=t,n.renderer=n.runtime.makeRenderer(n.canvas,h),n.canvas.width||n.canvas.height||n.resizeDrawingSurfaceToCanvas(),n.initData(s,f,p,c).then((function(){return n.setupRiveListeners()})).catch((function(t){console.error(t)}))})).catch((function(t){console.error(t)}))},t.prototype.setupRiveListeners=function(t){var e=this;if(!this.shouldDisableRiveListeners){var n=(this.animator.stateMachines||[]).filter((function(t){return t.playing&&e.runtime.hasListeners(t.instance)})).map((function(t){return t.instance})),r=this.isTouchScrollEnabled;t&&\"isTouchScrollEnabled\"in t&&(r=t.isTouchScrollEnabled),this.eventCleanup=(0,s.registerTouchInteractions)({canvas:this.canvas,artboard:this.artboard,stateMachines:n,renderer:this.renderer,rive:this.runtime,fit:this._layout.runtimeFit(this.runtime),alignment:this._layout.runtimeAlignment(this.runtime),isTouchScrollEnabled:r})}},t.prototype.removeRiveListeners=function(){this.eventCleanup&&this.eventCleanup()},t.prototype.initializeAudio=function(){var t,e=this;T.status==_.UNAVAILABLE&&(null===(t=this.artboard)||void 0===t?void 0:t.hasAudio)&&(T.add({type:y.AudioStatusChange,callback:function(){return e.onSystemAudioChanged()}}),T.establishAudio())},t.prototype.initData=function(t,e,n,r){var i;return c(this,void 0,void 0,(function(){var a,o,s,u;return l(this,(function(c){switch(c.label){case 0:return this.src?(a=this,[4,M(this.src)]):[3,2];case 1:a.buffer=c.sent(),c.label=2;case 2:return this.assetLoader&&(o=new this.runtime.CustomFileAssetLoader({loadContents:this.assetLoader})),s=this,[4,this.runtime.load(new Uint8Array(this.buffer),o,this.enableRiveAssetCDN)];case 3:return s.file=c.sent(),this.file?(this.initArtboard(t,e,n,r),this.initializeAudio(),this.loaded=!0,this.eventManager.fire({type:y.Load,data:null!==(i=this.src)&&void 0!==i?i:\"buffer\"}),this.readyForPlaying=!0,this.taskQueue.process(),this.drawFrame(),[2,Promise.resolve()]):(u=\"Problem loading file; may be corrupt!\",console.warn(u),this.eventManager.fire({type:y.LoadError,data:u}),[2,Promise.reject(u)])}}))}))},t.prototype.initArtboard=function(t,e,n,r){var i,a=t?this.file.artboardByName(t):this.file.defaultArtboard();if(!a){var o=\"Invalid artboard name or no default artboard\";return console.warn(o),void this.eventManager.fire({type:y.LoadError,data:o})}if(this.artboard=a,a.volume=this._volume*T.systemVolume,this.artboard.animationCount()<1)throw o=\"Artboard has no animations\",this.eventManager.fire({type:y.LoadError,data:o}),o;this.animator=new w(this.runtime,this.artboard,this.eventManager),e.length>0||n.length>0?(i=e.concat(n),this.animator.initLinearAnimations(e,r),this.animator.initStateMachines(n,r)):i=[this.animator.atLeastOne(r,!1)],this.taskQueue.add({event:{type:r?y.Play:y.Pause,data:i}})},t.prototype.drawFrame=function(){this.startRendering()},t.prototype.draw=function(t,e){this.frameRequestId=null;var n=performance.now();this.lastRenderTime||(this.lastRenderTime=t),this.renderSecondTimer+=t-this.lastRenderTime,this.renderSecondTimer>5e3&&(this.renderSecondTimer=0,null==e||e());var r=(t-this.lastRenderTime)/1e3;this.lastRenderTime=t;for(var i=0,a=this.animator.animations.filter((function(t){return t.playing||t.needsScrub})).sort((function(t){return t.needsScrub?-1:1}));i<a.length;i++){var o=a[i];o.advance(r),o.instance.didLoop&&(o.loopCount+=1),o.apply(1)}for(var u=0,c=this.animator.stateMachines.filter((function(t){return t.playing}));u<c.length;u++){var l=c[u],h=l.reportedEventCount();if(h)for(var f=0;f<h;f++){var d=l.reportedEventAt(f);if(d)if(d.type===v.OpenUrl){if(this.eventManager.fire({type:y.RiveEvent,data:d}),this.automaticallyHandleEvents){var p=document.createElement(\"a\"),m=d,g=m.url,b=m.target,w=(0,s.sanitizeUrl)(g);g&&p.setAttribute(\"href\",w),b&&p.setAttribute(\"target\",b),w&&w!==s.BLANK_URL&&p.click()}}else this.eventManager.fire({type:y.RiveEvent,data:d})}l.advance(r)}this.artboard.advance(r);var _=this.renderer;_.clear(),_.save(),this.alignRenderer(),this._hasZeroSize||this.artboard.draw(_),_.restore(),_.flush(),this.animator.handleLooping(),this.animator.handleStateChanges(),this.animator.handleAdvancing(r),this.frameCount++;var A=performance.now();for(this.frameTimes.push(A),this.durations.push(A-n);this.frameTimes[0]<=A-1e3;)this.frameTimes.shift(),this.durations.shift();this.animator.isPlaying?this.startRendering():(this.animator.isPaused||this.animator.isStopped)&&(this.lastRenderTime=0)},t.prototype.alignRenderer=function(){var t=this,e=t.renderer,n=t.runtime,r=t._layout,i=t.artboard;e.align(r.runtimeFit(n),r.runtimeAlignment(n),{minX:r.minX,minY:r.minY,maxX:r.maxX,maxY:r.maxY},i.bounds)},Object.defineProperty(t.prototype,\"fps\",{get:function(){return this.durations.length},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"frameTime\",{get:function(){return 0===this.durations.length?0:(this.durations.reduce((function(t,e){return t+e}),0)/this.durations.length).toFixed(4)},enumerable:!1,configurable:!0}),t.prototype.cleanup=function(){var t;this.stopRendering(),this.cleanupInstances(),null!==this._observed&&L.remove(this._observed),null===(t=this.file)||void 0===t||t.delete(),this.file=null},t.prototype.deleteRiveRenderer=function(){var t;null===(t=this.renderer)||void 0===t||t.delete(),this.renderer=null},t.prototype.cleanupInstances=function(){null!==this.eventCleanup&&this.eventCleanup(),this.stop(),this.artboard&&(this.artboard.delete(),this.artboard=null)},t.prototype.retrieveTextRun=function(t){var e;if(t)if(this.artboard){var n=this.artboard.textRun(t);if(n)return n;console.warn(\"Could not access a text run with name '\".concat(t,\"' in the '\").concat(null===(e=this.artboard)||void 0===e?void 0:e.name,\"' Artboard. Note that you must rename a text run node in the Rive editor to make it queryable at runtime.\"))}else console.warn(\"Tried to access text run, but the Artboard is null\");else console.warn(\"No text run name provided\")},t.prototype.getTextRunValue=function(t){var e=this.retrieveTextRun(t);return e?e.text:void 0},t.prototype.setTextRunValue=function(t,e){var n=this.retrieveTextRun(t);n&&(n.text=e)},t.prototype.play=function(t,e){var n=this;t=j(t),this.readyForPlaying?(this.animator.play(t),this.eventCleanup&&this.eventCleanup(),this.setupRiveListeners(),this.startRendering()):this.taskQueue.add({action:function(){return n.play(t,e)}})},t.prototype.pause=function(t){var e=this;t=j(t),this.readyForPlaying?(this.eventCleanup&&this.eventCleanup(),this.animator.pause(t)):this.taskQueue.add({action:function(){return e.pause(t)}})},t.prototype.scrub=function(t,e){var n=this;t=j(t),this.readyForPlaying?(this.animator.scrub(t,e||0),this.drawFrame()):this.taskQueue.add({action:function(){return n.scrub(t,e)}})},t.prototype.stop=function(t){var e=this;t=j(t),this.readyForPlaying?(this.animator.stop(t),this.eventCleanup&&this.eventCleanup()):this.taskQueue.add({action:function(){return e.stop(t)}})},t.prototype.reset=function(t){var e,n=null==t?void 0:t.artboard,r=j(null==t?void 0:t.animations),i=j(null==t?void 0:t.stateMachines),a=null!==(e=null==t?void 0:t.autoplay)&&void 0!==e&&e;this.cleanupInstances(),this.initArtboard(n,r,i,a),this.taskQueue.process()},t.prototype.load=function(t){this.stop(),this.init(t)},Object.defineProperty(t.prototype,\"layout\",{get:function(){return this._layout},set:function(t){this._layout=t,t.maxX&&t.maxY||this.resizeToCanvas(),this.loaded&&!this.animator.isPlaying&&this.drawFrame()},enumerable:!1,configurable:!0}),t.prototype.resizeToCanvas=function(){this._layout=this.layout.copyWith({minX:0,minY:0,maxX:this.canvas.width,maxY:this.canvas.height})},t.prototype.resizeDrawingSurfaceToCanvas=function(t){if(this.canvas instanceof HTMLCanvasElement&&window){var e=this.canvas.getBoundingClientRect(),n=e.width,r=e.height,i=t||window.devicePixelRatio||1;this.canvas.width=i*n,this.canvas.height=i*r,this.startRendering(),this.resizeToCanvas()}},Object.defineProperty(t.prototype,\"source\",{get:function(){return this.src},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"activeArtboard\",{get:function(){return this.artboard?this.artboard.name:\"\"},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"animationNames\",{get:function(){if(!this.loaded)return[];for(var t=[],e=0;e<this.artboard.animationCount();e++)t.push(this.artboard.animationByIndex(e).name);return t},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"stateMachineNames\",{get:function(){if(!this.loaded)return[];for(var t=[],e=0;e<this.artboard.stateMachineCount();e++)t.push(this.artboard.stateMachineByIndex(e).name);return t},enumerable:!1,configurable:!0}),t.prototype.stateMachineInputs=function(t){if(this.loaded){var e=this.animator.stateMachines.find((function(e){return e.name===t}));return null==e?void 0:e.inputs}},Object.defineProperty(t.prototype,\"playingStateMachineNames\",{get:function(){return this.loaded?this.animator.stateMachines.filter((function(t){return t.playing})).map((function(t){return t.name})):[]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"playingAnimationNames\",{get:function(){return this.loaded?this.animator.animations.filter((function(t){return t.playing})).map((function(t){return t.name})):[]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"pausedAnimationNames\",{get:function(){return this.loaded?this.animator.animations.filter((function(t){return!t.playing})).map((function(t){return t.name})):[]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"pausedStateMachineNames\",{get:function(){return this.loaded?this.animator.stateMachines.filter((function(t){return!t.playing})).map((function(t){return t.name})):[]},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isPlaying\",{get:function(){return this.animator.isPlaying},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isPaused\",{get:function(){return this.animator.isPaused},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"isStopped\",{get:function(){return this.animator.isStopped},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"bounds\",{get:function(){return this.artboard?this.artboard.bounds:void 0},enumerable:!1,configurable:!0}),t.prototype.on=function(t,e){this.eventManager.add({type:t,callback:e})},t.prototype.off=function(t,e){this.eventManager.remove({type:t,callback:e})},t.prototype.unsubscribe=function(t,e){console.warn(\"This function is deprecated: please use `off()` instead.\"),this.off(t,e)},t.prototype.removeAllRiveEventListeners=function(t){this.eventManager.removeAll(t)},t.prototype.unsubscribeAll=function(t){console.warn(\"This function is deprecated: please use `removeAllRiveEventListeners()` instead.\"),this.removeAllRiveEventListeners(t)},t.prototype.stopRendering=function(){this.loaded&&this.frameRequestId&&(this.runtime.cancelAnimationFrame?this.runtime.cancelAnimationFrame(this.frameRequestId):cancelAnimationFrame(this.frameRequestId),this.frameRequestId=null)},t.prototype.startRendering=function(){this.loaded&&this.artboard&&!this.frameRequestId&&(this.runtime.requestAnimationFrame?this.frameRequestId=this.runtime.requestAnimationFrame(this.draw.bind(this)):this.frameRequestId=requestAnimationFrame(this.draw.bind(this)))},t.prototype.enableFPSCounter=function(t){this.runtime.enableFPSCounter(t)},t.prototype.disableFPSCounter=function(){this.runtime.disableFPSCounter()},Object.defineProperty(t.prototype,\"contents\",{get:function(){if(this.loaded){for(var t={artboards:[]},e=0;e<this.file.artboardCount();e++){for(var n=this.file.artboardByIndex(e),r={name:n.name,animations:[],stateMachines:[]},i=0;i<n.animationCount();i++){var a=n.animationByIndex(i);r.animations.push(a.name)}for(var o=0;o<n.stateMachineCount();o++){for(var s=n.stateMachineByIndex(o),u=s.name,c=new this.runtime.StateMachineInstance(s,n),l=[],h=0;h<c.inputCount();h++){var f=c.input(h);l.push({name:f.name,type:f.type})}r.stateMachines.push({name:u,inputs:l})}t.artboards.push(r)}return t}},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,\"volume\",{get:function(){return this.artboard&&this.artboard.volume!==this._volume&&(this._volume=this.artboard.volume),this._volume},set:function(t){this._volume=t,this.artboard&&(this.artboard.volume=t*T.systemVolume)},enumerable:!1,configurable:!0}),t.missingErrorMessage=\"Rive source file or data buffer required\",t}(),M=function(t){return c(void 0,void 0,void 0,(function(){var e;return l(this,(function(n){switch(n.label){case 0:return e=new Request(t),[4,fetch(e)];case 1:return[4,n.sent().arrayBuffer()];case 2:return[2,n.sent()]}}))}))},j=function(t){return\"string\"==typeof t?[t]:t instanceof Array?t:[]},O={EventManager:A,TaskQueueManager:C},x=function(t){return new Promise((function(e){return d.getInstance((function(n){n.decodeAudio(t,e)}))}))},I=function(t){return new Promise((function(e){return d.getInstance((function(n){n.decodeImage(t,e)}))}))},F=function(t){return new Promise((function(e){return d.getInstance((function(n){n.decodeFont(t,e)}))}))}})(),r})(),t.exports=e()}},e={};function n(r){var i=e[r];if(void 0!==i)return i.exports;var a=e[r]={exports:{}};return t[r].call(a.exports,a,a.exports,n),a.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{\"use strict\";var t=n(52);function e(t){return e=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},e(t)}function r(t){return function(t){if(Array.isArray(t))return i(t)}(t)||function(t){if(\"undefined\"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||function(t,e){if(t){if(\"string\"==typeof t)return i(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?i(t,e):void 0}}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function i(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function a(){a=function(){return n};var t,n={},r=Object.prototype,i=r.hasOwnProperty,o=Object.defineProperty||function(t,e,n){t[e]=n.value},s=\"function\"==typeof Symbol?Symbol:{},u=s.iterator||\"@@iterator\",c=s.asyncIterator||\"@@asyncIterator\",l=s.toStringTag||\"@@toStringTag\";function h(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{h({},\"\")}catch(t){h=function(t,e,n){return t[e]=n}}function f(t,e,n,r){var i=e&&e.prototype instanceof b?e:b,a=Object.create(i.prototype),s=new O(r||[]);return o(a,\"_invoke\",{value:L(t,n,s)}),a}function d(t,e,n){try{return{type:\"normal\",arg:t.call(e,n)}}catch(t){return{type:\"throw\",arg:t}}}n.wrap=f;var p=\"suspendedStart\",v=\"suspendedYield\",m=\"executing\",y=\"completed\",g={};function b(){}function w(){}function _(){}var A={};h(A,u,(function(){return this}));var C=Object.getPrototypeOf,E=C&&C(C(x([])));E&&E!==r&&i.call(E,u)&&(A=E);var T=_.prototype=b.prototype=Object.create(A);function P(t){[\"next\",\"throw\",\"return\"].forEach((function(e){h(t,e,(function(t){return this._invoke(e,t)}))}))}function R(t,n){function r(a,o,s,u){var c=d(t[a],t,o);if(\"throw\"!==c.type){var l=c.arg,h=l.value;return h&&\"object\"==e(h)&&i.call(h,\"__await\")?n.resolve(h.__await).then((function(t){r(\"next\",t,s,u)}),(function(t){r(\"throw\",t,s,u)})):n.resolve(h).then((function(t){l.value=t,s(l)}),(function(t){return r(\"throw\",t,s,u)}))}u(c.arg)}var a;o(this,\"_invoke\",{value:function(t,e){function i(){return new n((function(n,i){r(t,e,n,i)}))}return a=a?a.then(i,i):i()}})}function L(e,n,r){var i=p;return function(a,o){if(i===m)throw Error(\"Generator is already running\");if(i===y){if(\"throw\"===a)throw o;return{value:t,done:!0}}for(r.method=a,r.arg=o;;){var s=r.delegate;if(s){var u=S(s,r);if(u){if(u===g)continue;return u}}if(\"next\"===r.method)r.sent=r._sent=r.arg;else if(\"throw\"===r.method){if(i===p)throw i=y,r.arg;r.dispatchException(r.arg)}else\"return\"===r.method&&r.abrupt(\"return\",r.arg);i=m;var c=d(e,n,r);if(\"normal\"===c.type){if(i=r.done?y:v,c.arg===g)continue;return{value:c.arg,done:r.done}}\"throw\"===c.type&&(i=y,r.method=\"throw\",r.arg=c.arg)}}}function S(e,n){var r=n.method,i=e.iterator[r];if(i===t)return n.delegate=null,\"throw\"===r&&e.iterator.return&&(n.method=\"return\",n.arg=t,S(e,n),\"throw\"===n.method)||\"return\"!==r&&(n.method=\"throw\",n.arg=new TypeError(\"The iterator does not provide a '\"+r+\"' method\")),g;var a=d(i,e.iterator,n.arg);if(\"throw\"===a.type)return n.method=\"throw\",n.arg=a.arg,n.delegate=null,g;var o=a.arg;return o?o.done?(n[e.resultName]=o.value,n.next=e.nextLoc,\"return\"!==n.method&&(n.method=\"next\",n.arg=t),n.delegate=null,g):o:(n.method=\"throw\",n.arg=new TypeError(\"iterator result is not an object\"),n.delegate=null,g)}function M(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function j(t){var e=t.completion||{};e.type=\"normal\",delete e.arg,t.completion=e}function O(t){this.tryEntries=[{tryLoc:\"root\"}],t.forEach(M,this),this.reset(!0)}function x(n){if(n||\"\"===n){var r=n[u];if(r)return r.call(n);if(\"function\"==typeof n.next)return n;if(!isNaN(n.length)){var a=-1,o=function e(){for(;++a<n.length;)if(i.call(n,a))return e.value=n[a],e.done=!1,e;return e.value=t,e.done=!0,e};return o.next=o}}throw new TypeError(e(n)+\" is not iterable\")}return w.prototype=_,o(T,\"constructor\",{value:_,configurable:!0}),o(_,\"constructor\",{value:w,configurable:!0}),w.displayName=h(_,l,\"GeneratorFunction\"),n.isGeneratorFunction=function(t){var e=\"function\"==typeof t&&t.constructor;return!!e&&(e===w||\"GeneratorFunction\"===(e.displayName||e.name))},n.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,_):(t.__proto__=_,h(t,l,\"GeneratorFunction\")),t.prototype=Object.create(T),t},n.awrap=function(t){return{__await:t}},P(R.prototype),h(R.prototype,c,(function(){return this})),n.AsyncIterator=R,n.async=function(t,e,r,i,a){void 0===a&&(a=Promise);var o=new R(f(t,e,r,i),a);return n.isGeneratorFunction(e)?o:o.next().then((function(t){return t.done?t.value:o.next()}))},P(T),h(T,l,\"Generator\"),h(T,u,(function(){return this})),h(T,\"toString\",(function(){return\"[object Generator]\"})),n.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},n.values=x,O.prototype={constructor:O,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method=\"next\",this.arg=t,this.tryEntries.forEach(j),!e)for(var n in this)\"t\"===n.charAt(0)&&i.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if(\"throw\"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function r(r,i){return s.type=\"throw\",s.arg=e,n.next=r,i&&(n.method=\"next\",n.arg=t),!!i}for(var a=this.tryEntries.length-1;a>=0;--a){var o=this.tryEntries[a],s=o.completion;if(\"root\"===o.tryLoc)return r(\"end\");if(o.tryLoc<=this.prev){var u=i.call(o,\"catchLoc\"),c=i.call(o,\"finallyLoc\");if(u&&c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(u){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!c)throw Error(\"try statement without catch or finally\");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var r=this.tryEntries[n];if(r.tryLoc<=this.prev&&i.call(r,\"finallyLoc\")&&this.prev<r.finallyLoc){var a=r;break}}a&&(\"break\"===t||\"continue\"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var o=a?a.completion:{};return o.type=t,o.arg=e,a?(this.method=\"next\",this.next=a.finallyLoc,g):this.complete(o)},complete:function(t,e){if(\"throw\"===t.type)throw t.arg;return\"break\"===t.type||\"continue\"===t.type?this.next=t.arg:\"return\"===t.type?(this.rval=this.arg=t.arg,this.method=\"return\",this.next=\"end\"):\"normal\"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),j(n),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if(\"throw\"===r.type){var i=r.arg;j(n)}return i}}throw Error(\"illegal catch attempt\")},delegateYield:function(e,n,r){return this.delegate={iterator:x(e),resultName:n,nextLoc:r},\"next\"===this.method&&(this.arg=t),g}},n}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function s(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){g(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e,n,r,i,a,o){try{var s=t[a](o),u=s.value}catch(t){return void n(t)}s.done?e(u):Promise.resolve(u).then(r,i)}function c(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function l(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,b(r.key),r)}}function h(t,e,n){return e&&l(t.prototype,e),n&&l(t,n),Object.defineProperty(t,\"prototype\",{writable:!1}),t}function f(t,n,r){return n=y(n),function(t,n){if(n&&(\"object\"===e(n)||\"function\"==typeof n))return n;if(void 0!==n)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t)}(t,v()?Reflect.construct(n,r||[],y(t).constructor):n.apply(t,r))}function d(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,\"prototype\",{writable:!1}),e&&m(t,e)}function p(t){var e=\"function\"==typeof Map?new Map:void 0;return p=function(t){if(null===t||!function(t){try{return-1!==Function.toString.call(t).indexOf(\"[native code]\")}catch(e){return\"function\"==typeof t}}(t))return t;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,n)}function n(){return function(t,e,n){if(v())return Reflect.construct.apply(null,arguments);var r=[null];r.push.apply(r,e);var i=new(t.bind.apply(t,r));return n&&m(i,n.prototype),i}(t,arguments,y(this).constructor)}return n.prototype=Object.create(t.prototype,{constructor:{value:n,enumerable:!1,writable:!0,configurable:!0}}),m(n,t)},p(t)}function v(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(t){}return(v=function(){return!!t})()}function m(t,e){return m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},m(t,e)}function y(t){return y=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},y(t)}function g(t,e,n){return(e=b(e))in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function b(t){var n=function(t,n){if(\"object\"!=e(t)||!t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var i=r.call(t,\"string\");if(\"object\"!=e(i))return i;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(t)}(t);return\"symbol\"==e(n)?n:n+\"\"}var w=function(e){function n(){var t;return c(this,n),(t=f(this,n)).attachShadow({mode:\"open\"}),t.rive=null,t.autoplay=\"false\"!==t.getAttribute(\"autoplay\"),t.ignoreHiddenInputs=t.hasAttribute(\"ignoreHiddenInputs\")&&\"false\"!==t.getAttribute(\"ignoreHiddenInputs\"),t.surfaceAllInputs=t.hasAttribute(\"surfaceAllInputs\")&&\"false\"!==t.getAttribute(\"surfaceAllInputs\"),t}return d(n,e),h(n,[{key:\"attributeChangedCallback\",value:function(t,e,n){if(this.suppressNextAttributeChangeCallback)this.suppressNextAttributeChangeCallback=!1;else switch(t){case\"play-state\":return this.setPlayState(n);case\"desc\":return this.setDescription(n);case\"volume\":return this.volume=n}}},{key:\"connectedCallback\",value:function(){var t=this;this.shadowRoot.innerHTML='\\n      <style>\\n        :host {\\n          position: relative;\\n        }\\n        canvas {\\n          width: 100%;\\n          height: var(--rive-h, 100%);\\n          display: block;\\n          position: relative;\\n        }\\n        #riveToolbar {\\n          position: absolute;\\n          left: var(--connect-spacer-sm, .5rem);\\n          top: calc(100% - var(--connect-spacer-sm, .5rem));\\n          transform: translateY(-100%);\\n        }\\n        #riveDescriptor {\\n          position: absolute;\\n          top: 0;\\n          left: -9999px;\\n        }\\n      )\\n      </style>\\n      <canvas role=\"img\" aria-describedby=\"riveDescriptor\" aria-labelledby=\"riveDescriptor\"></canvas>\\n      <p id=\"riveDescriptor\" role=\"status\" aria-live=\"polite\" aria-atomic=\"true\"></p>\\n    ',this.canvas=this.shadowRoot.querySelector(\"canvas\"),this.riveDescriptor=this.shadowRoot.querySelector(\"#riveDescriptor\"),window.requestAnimationFrame((function(){t.initRive(t.getAttribute(\"src\"))})),window.addEventListener(\"resize\",this.handleResize.bind(this)),this.setDescription(this.getAttribute(\"desc\"));var e=window.matchMedia(\"(prefers-reduced-motion: reduce)\");this.handleReduceMotionChange.bind(this),e.addEventListener(\"change\",(function(e){t.handleReduceMotionChange(e.matches)}))}},{key:\"disconnectedCallback\",value:function(){this.rive&&(this.rive.stop(),this.rive.cleanup(),window.removeEventListener(\"resize\",this.handleResize.bind(this)))}},{key:\"initRive\",value:(i=a().mark((function e(n){var r,i,o,u=this;return a().wrap((function(e){for(;;)switch(e.prev=e.next){case 0:if(n){e.next=2;break}return e.abrupt(\"return\",console.error(\"Rive source file is required.\"));case 2:if(this.canvas){e.next=4;break}return e.abrupt(\"return\",console.error(\"Canvas element not found.\"));case 4:r=this.getAttribute(\"stateMachine\")||\"State Machine 1\",i=this.getAttribute(\"artboard\")||void 0,o=!this.hasAttribute(\"disableTouchScroll\")||\"false\"===this.getAttribute(\"disableTouchScroll\"),this.rive=new t.Rive(s(s({src:n,canvas:this.canvas,autoplay:this.autoplay,stateMachines:r},i&&{artboard:i}),{},{isTouchScrollEnabled:o,layout:new t.Layout({fit:t.Fit.Contain}),onLoad:function(){u.rive.resizeDrawingSurfaceToCanvas();var e=u.rive.artboard;if(u.hasAttribute(\"contain\")||u.hasAttribute(\"height\")){if(!u.hasAttribute(\"contain\")){var n=u.canvas.height*(e.bounds.maxX/e.bounds.maxY);u.canvas.width=n,u.rive.layout=new t.Layout({fit:t.Fit.Contain})}}else{var r=u.canvas.width*(e.bounds.maxY/e.bounds.maxX);u.canvas.height=r,console.log(\"height calculated \"+r),u.rive.layout=new t.Layout({fit:t.Fit.Contain})}u.volume=u.getAttribute(\"volume\");var i=window.matchMedia(\"(prefers-reduced-motion: reduce)\");u.handleReduceMotionChange(i.matches),u.getInputs(void 0,u.ignoreHiddenInputs,u.surfaceAllInputs),u.dispatchEvent(new CustomEvent(\"rive-loaded\",{bubbles:!0,composed:!0}))},onPlay:function(){return u.dispatchEvent(new CustomEvent(\"rive-play\",{bubbles:!0,composed:!0}))},onPause:function(){return u.dispatchEvent(new CustomEvent(\"rive-pause\",{bubbles:!0,composed:!0}))},onStop:function(){return u.dispatchEvent(new CustomEvent(\"rive-stop\",{bubbles:!0,composed:!0}))},onLoop:function(){return u.dispatchEvent(new CustomEvent(\"rive-loop\",{bubbles:!0,composed:!0}))},onAdvance:function(t){u.handleDraw(t.data),u.dispatchEvent(new CustomEvent(\"rive-advance\",{bubbles:!0,composed:!0}))}}));case 8:case\"end\":return e.stop()}}),e,this)})),o=function(){var t=this,e=arguments;return new Promise((function(n,r){var a=i.apply(t,e);function o(t){u(a,n,r,o,s,\"next\",t)}function s(t){u(a,n,r,o,s,\"throw\",t)}o(void 0)}))},function(t){return o.apply(this,arguments)})},{key:\"isPlaying\",get:function(){return this.rive.isPlaying}},{key:\"isPaused\",get:function(){return this.rive.isPaused}},{key:\"isStopped\",get:function(){return this.rive.isStopped}},{key:\"volume\",get:function(){return this.rive.volume},set:function(t){this.rive&&(isNaN(t)||(this.rive.volume=t))}},{key:\"play\",value:function(){this.autoplay&&(this.rive.play(),\"playing\"!==this.getAttribute(\"play-state\")&&(this.suppressNextAttributeChangeCallback=!0,this.setAttribute(\"play-state\",\"playing\")))}},{key:\"pause\",value:function(){this.rive.pause(),this.pausedSinceLastDraw=!0,\"paused\"!==this.getAttribute(\"play-state\")&&(this.suppressNextAttributeChangeCallback=!0,this.setAttribute(\"play-state\",\"paused\"))}},{key:\"stop\",value:function(){this.rive.stop(),\"stopped\"!==this.getAttribute(\"play-state\")&&(this.suppressNextAttributeChangeCallback=!0,this.setAttribute(\"play-state\",\"stopped\"))}},{key:\"setPlayState\",value:function(t){if(this.rive){var e=\"paused\"!==t&&\"stopped\"!==t;e&&!this.isPlaying?this.play():!e&&this.isPlaying&&this.pause()}}},{key:\"togglePlayState\",value:function(){this.rive&&(this.isPlaying?this.pause():this.play())}},{key:\"getInputs\",value:function(t,e,r){var i=this;if(null==t&&(t=!1),null==e&&(e=!1),null==r&&(r=!0),this.inputs={},this.rive){var a=this.getActiveStateMachine();if(a){var o=this.rive.stateMachineInputs(a);o&&0!=o.length&&(o.forEach((function(t){var e=t.name.toLowerCase().startsWith(n.INPUT_HIDING_PREFIX.toLowerCase()),a=t.name.toLowerCase().startsWith(n.INPUT_SURFACING_PREFIX.toLowerCase());if((r||!e)&&(r||a)){var o=a?t.name.slice(n.INPUT_SURFACING_PREFIX.length):t.name,s=new _(i,t.name);i.inputs[o]=s}})),console.log(this.inputs))}}}},{key:\"getActiveArtboard\",value:function(){return this.rive.activeArtboard}},{key:\"getActiveStateMachine\",value:function(){if(this.rive){var t=[].concat(r(this.rive.playingStateMachineNames),r(this.rive.pausedStateMachineNames));switch(t.length){case 0:return null;case 1:return t[0];default:return console.error(\"Multiple State Machines are somehow active on this Artboard!\",t)}}}},{key:\"handleResize\",value:function(){if(this.shadowRoot.querySelector(\"canvas\")&&this.rive){this.rive.resizeDrawingSurfaceToCanvas();var e=this.rive.artboard;if(console.log(\"resize\"),this.hasAttribute(\"contain\")||this.hasAttribute(\"height\")){if(!this.hasAttribute(\"contain\")){console.log(\"only contain\");var n=this.canvas.height*(e.bounds.maxX/e.bounds.maxY);this.canvas.width=n,this.rive.layout=new t.Layout({fit:t.Fit.Contain})}}else{console.log(\"no contain or height\");var r=this.canvas.width*(e.bounds.maxY/e.bounds.maxX);this.canvas.height=r,console.log(\"height calculated \"+r),this.rive.layout=new t.Layout({fit:t.Fit.Contain})}}}},{key:\"handleDraw\",value:function(t){this.pausedSinceLastDraw&&(this.pausedSinceLastDraw=!1)}},{key:\"handleReduceMotionChange\",value:function(t){this.rive&&(t?this.pause():this.play())}},{key:\"setDescription\",value:function(t){this.riveDescriptor&&(this.riveDescriptor.textContent=t)}}],[{key:\"observedAttributes\",get:function(){return[\"desc\",\"play-state\",\"animstate\",\"volume\"]}}]);var i,o}(p(HTMLElement));g(w,\"INPUT_SURFACING_PREFIX\",\"EXPORT_\"),g(w,\"INPUT_HIDING_PREFIX\",\"_\");var _=function(){return h((function e(n,r,i){var a=this;if(c(this,e),!n)return console.error(\"hmhRive instance must be supplied as an argument when creating a RiveInput!\");if(!r)return console.error(\"Input name must be supplied as an argument when creating a RiveInput!\");if(this.name=r,null!=i)this.isNested=!0,this.nestedPath=i,this.input=n.rive.retrieveInputAtPath(this.name,this.nestedPath);else{this.isNested=!1,this.nestedPath=null;var o=n.getActiveStateMachine(),s=n.rive.stateMachineInputs(o);this.input=s.find((function(t){return t.name===a.name}))}if(this.type=this.input.type,!(this instanceof A||this instanceof C||this instanceof E))switch(this.type){case t.StateMachineInputType.Number:return new A(n,r);case t.StateMachineInputType.Boolean:return new C(n,r);case t.StateMachineInputType.Trigger:return new E(n,r)}}),[{key:\"getValue\",value:function(){return this.type==t.StateMachineInputType.Trigger?null:0==this.isNested?this.input.value:this.type==t.StateMachineInputType.Number?this.input.asNumber().value:this.type==t.StateMachineInputType.Boolean?this.input.asBool().value:void 0}},{key:\"setValue\",value:function(e){return this.type==t.StateMachineInputType.Trigger?e?this.fire():void 0:0==this.isNested?this.input.value=e:this.type==t.StateMachineInputType.Number?this.input.asNumber().value=e:this.type==t.StateMachineInputType.Boolean?this.input.asBool().value=e:void 0}},{key:\"fire\",value:function(){if(this.type==t.StateMachineInputType.Trigger)return 0==this.isNested?this.input.fire():this.input.asTrigger().fire()}},{key:\"value\",get:function(){return this.getValue()},set:function(t){this.setValue(t)}}],[{key:\"getTypeStringFromTypeID\",value:function(e){switch(e){case t.StateMachineInputType.Number:return\"Number\";case t.StateMachineInputType.Boolean:return\"Boolean\";case t.StateMachineInputType.Trigger:return\"Trigger\";default:return}}}])}(),A=function(t){function e(){return c(this,e),f(this,e,arguments)}return d(e,t),h(e)}(_),C=function(t){function e(){return c(this,e),f(this,e,arguments)}return d(e,t),h(e)}(_),E=function(t){function e(){return c(this,e),f(this,e,arguments)}return d(e,t),h(e)}(_);customElements.get(\"hmh-rive\")||customElements.define(\"hmh-rive\",w)})()})();","import React, { useState, useRef, useEffect } from 'react';\nimport { Button, ButtonProps } from '../Button/Button';\nimport { Typography } from '../Typography/Typography';\nimport { GradeBand } from 'src/enum/gradeband';\nimport '@connect/hmh-rive';\n\nexport type ButtonRiveProps = ButtonProps & {\n  textTransform?: React.CSSProperties['textTransform'];\n  opacity?: any | undefined;\n  animSrc: string;\n  stateMachine?: string;\n  buttonText: string;\n  gradeBand?: GradeBand;\n  height?: boolean;\n  playState?: string | null; // Control both play-state and opacity via this prop\n};\n\nexport const ButtonRive: React.FC<ButtonRiveProps> = ({\n  textTransform,\n  animSrc,\n  stateMachine = 'State Machine 1',\n  buttonText,\n  playState = 'paused', // Default play-state is not playing\n  ...ButtonProps\n}) => {\n  const riveRef = useRef<HTMLElement | null>(null); // Properly type the ref to HTMLElement\n  const [prefersReducedMotion, setPrefersReducedMotion] = useState(false); // State to track reduced motion preference\n\n  useEffect(() => {\n    const mediaQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\n    setPrefersReducedMotion(mediaQuery.matches);\n\n    const handleChange = () => setPrefersReducedMotion(mediaQuery.matches);\n    mediaQuery.addEventListener('change', handleChange);\n\n    return () => {\n      mediaQuery.removeEventListener('change', handleChange);\n    };\n  }, []);\n\n  // This effect updates the play-state on the hmh-rive component when playState changes\n  useEffect(() => {\n    if (riveRef.current) {\n      riveRef.current.setAttribute('play-state', playState || 'paused');\n    }\n  }, [playState]);\n\n  // Calculate opacity based on playState\n  const isTypographyHidden = playState === 'playing' && !prefersReducedMotion;\n\n  return (\n    <Button {...ButtonProps} iconOpacity={isTypographyHidden ? 0 : 1}>\n      <Typography\n        element=\"p\"\n        ariaLive=\"polite\"\n        textTransform={textTransform}\n        opacity={isTypographyHidden ? 0 : 1}\n      >\n        {buttonText}\n      </Typography>\n      <hmh-rive\n        ref={riveRef}\n        src={animSrc}\n        autoplay={false}\n        hidePlayPause\n        stateMachine={stateMachine}\n        aria-hidden=\"true\"\n        style={{ opacity: isTypographyHidden ? 1 : 0 }}\n        height\n      ></hmh-rive>\n    </Button>\n  );\n};\n","import React, { useEffect, useRef, useState, KeyboardEvent } from 'react';\nimport { Icon } from '../Icon/Icon';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type ButtonSplitProps = {\n  children: React.ReactNode;\n  data: { label: string; value: React.ReactNode }[];\n  disabled?: boolean;\n  iconId?: string;\n  iconSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  fill?: string;\n  ariaLabel?: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport function ButtonSplit({ children, disabled, data, dataTestId }: ButtonSplitProps) {\n  const [open, setOpen] = useState(false);\n  const drop = useRef<HTMLDivElement>(null);\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (drop.current && !drop.current.contains(event.target as Node) && open) {\n      setOpen(false);\n    }\n  };\n\n  const handleToggle = () => setOpen(!open);\n\n  const handleKeyDown = (event: KeyboardEvent<HTMLButtonElement>) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      handleToggle();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [open]);\n\n  return (\n    <div\n      className={`connect__button-split connect__button connect__button-primary`}\n      ref={drop}\n      data-testid={dataTestId}\n    >\n      <button type=\"button\" className={`connect__button-split-button`} disabled={disabled}>\n        {children}\n      </button>\n      <button\n        type=\"button\"\n        className={`connect__button-split-button connect__button-split-button-actions`}\n        disabled={disabled}\n        aria-haspopup=\"true\"\n        aria-expanded={open}\n        onClick={handleToggle}\n        onKeyDown={handleKeyDown}\n        aria-label=\"Toggle extra options\"\n      >\n        <Icon id={open ? 'arrowUp' : 'arrowDown'} size=\"sm\" fill=\"white\" />\n      </button>\n      {open && <ButtonSplitMenu data={data} />}\n    </div>\n  );\n}\n\nfunction ButtonSplitMenu<T extends React.ReactNode>({\n  data,\n}: {\n  data: { label: string; value: T }[];\n}) {\n  return (\n    <>\n      <ul role=\"menu\" className=\"connect__list\">\n        {data.map((option, i) => (\n          <li key={`${option.label}-${i}`} role=\"menuitem\" className=\"connect__list-item\">\n            {option.value}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n","import React from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type FigCaptionProps = {\n  caption?: string;\n  cite?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const FigCaption: React.FC<FigCaptionProps> = ({ caption, cite }) => {\n  return (\n    <figcaption className=\"connect__figcaption\">\n      {caption}\n      {cite && <cite> {cite}</cite>}\n    </figcaption>\n  );\n};\n","import React from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\nimport { FigCaption } from '../FigCaption/FigCaption';\n\nexport type FigureProps = {\n  children?: React.ReactNode;\n  caption?: string;\n  cite?: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const Figure: React.FC<FigureProps> = ({ children, caption, cite, dataTestId }) => {\n  return (\n    <figure className=\"connect__figure\" data-testid={dataTestId}>\n      {children}\n      {(caption || cite) && <FigCaption caption={caption} cite={cite} />}\n    </figure>\n  );\n};\n","import React from 'react';\nimport { Typography } from '../Typography/Typography';\n\ntype ValidElementTag = keyof JSX.IntrinsicElements;\n\nexport type CardHeaderProps = {\n  headerElement?: ValidElementTag;\n  children: React.ReactNode;\n};\n\nexport function CardHeader({ headerElement, children }: CardHeaderProps) {\n  return (\n    <header className=\"connect__card-header\">\n      <Typography element={headerElement}>{children}</Typography>\n    </header>\n  );\n}\n","import React from 'react';\n\nexport type CardMainProp = {\n  children: React.ReactNode;\n};\n\nexport function CardMain({ children }: CardMainProp) {\n  return <div className=\"connect__card-content\">{children}</div>;\n}\n","import React from 'react';\n\nexport type FooterProps = {\n  children: React.ReactNode;\n};\n\nexport function CardFooter({ children }: FooterProps) {\n  return <footer className=\"connect__card-footer\">{children}</footer>;\n}\n","import React from 'react';\nimport { Figure, FigureProps } from '../Figure/Figure';\nimport { CardHeader } from './CardHeader';\nimport { CardMain } from './CardMain';\nimport { CardFooter } from './CardFooter';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type CardProps = FigureProps & {\n  image: boolean;\n  headerElement?: keyof React.ReactHTML;\n  headerContent?: React.ReactNode;\n  mainContent: React.ReactNode;\n  footerContent?: React.ReactNode;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n  children?: React.ReactNode;\n};\n\nexport function Card({\n  image,\n  headerElement,\n  headerContent,\n  mainContent,\n  footerContent,\n  dataTestId,\n  children,\n}: CardProps) {\n  return (\n    <article className=\"connect__card\" data-testid={dataTestId}>\n      {image && <Figure>{children}</Figure>}\n      <CardHeader headerElement={headerElement}>{headerContent}</CardHeader>\n      <CardMain>{mainContent}</CardMain>\n      <CardFooter>{footerContent}</CardFooter>\n    </article>\n  );\n}\n","import React from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type ChipProps = {\n  children: React.ReactNode;\n  num: string | number;\n  totalNum?: string | number;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport function Chip({ children, num, totalNum, dataTestId }: ChipProps) {\n  return (\n    <div className=\"connect__chip\" data-testid={dataTestId}>\n      {num} {totalNum ? `/ ${totalNum}` : ''} {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { GradeBand } from '../../enum/gradeband';\n\nexport type DividerProps = {\n  orientation?: 'horizontal' | 'vertical';\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const Divider: React.FC<DividerProps> = ({ orientation, dataTestId }) => {\n  return (\n    <hr\n      className={`connect__divider`}\n      aria-orientation={orientation}\n      aria-hidden=\"true\"\n      data-testid={dataTestId}\n    />\n  );\n};\n","import React from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\nimport { Color } from 'src/utils/colors';\n\nexport interface FooterProps {\n  children: React.ReactNode;\n  footerBreakoutColor?: Color;\n  footerPosition?: 'absolute' | 'fixed' | 'relative' | 'static' | 'sticky';\n  footerPositionTop?: string;\n  footerHeight?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  footerWidth?: string | number;\n  footerBreakoutLeft?: string | number;\n  footerBreakoutWidth?: string | number;\n  footerPaddingTop?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  footerPaddingRight?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  footerPaddingLeft?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  footerPaddingBottom?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  footerMarginTop?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  className?: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n}\n\nexport const Footer: React.FC<FooterProps> = ({\n  children,\n  footerBreakoutColor,\n  footerPosition = 'relative',\n  footerPositionTop,\n  footerHeight,\n  footerWidth,\n  footerBreakoutLeft,\n  footerBreakoutWidth,\n  footerPaddingTop,\n  footerPaddingRight,\n  footerPaddingLeft,\n  footerPaddingBottom,\n  footerMarginTop = 'xxl',\n  className = 'connect__grid',\n  dataTestId,\n}) => {\n  const footerProps: React.CSSProperties = {};\n\n  const footerStyleMappings: { [key: string]: any } = {\n    '--theme__footer-breakout-bg': footerBreakoutColor && `var(--connect__${footerBreakoutColor})`,\n    '--theme__footer-position': footerPosition,\n    '--theme__footer-position-t': footerPositionTop,\n    '--theme__footer-h': footerHeight && `var(--connect__spacer-${footerHeight})`,\n    '--theme__footer-w': footerWidth,\n    '--theme__footer-breakout-l': footerBreakoutLeft,\n    '--theme__footer-breakout-w': footerBreakoutWidth,\n    '--theme__footer-padding-t': footerPaddingTop && `var(--connect__spacer-${footerPaddingTop})`,\n    '--theme__footer-padding-r':\n      footerPaddingRight && `var(--connect__spacer-${footerPaddingRight})`,\n    '--theme__footer-padding-l': footerPaddingLeft && `var(--connect__spacer-${footerPaddingLeft})`,\n    '--theme__footer-padding-b':\n      footerPaddingBottom && `var(--connect__spacer-${footerPaddingBottom})`,\n    '--theme__footer-margin-t': footerMarginTop && `var(--connect__spacer-${footerMarginTop})`,\n  };\n\n  Object.entries(footerStyleMappings).forEach(([key, value]) => {\n    if (value) {\n      footerProps[key] = value;\n    }\n  });\n\n  return (\n    <footer className={`connect__footer ${className}`} data-testid={dataTestId} style={footerProps}>\n      {children}\n    </footer>\n  );\n};\n","import React from 'react';\nimport { Color } from 'src/utils/colors';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type HeaderProps = {\n  children: React.ReactNode;\n  borderWidth?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  borderColor?: Color;\n  borderRadius?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  headerBackgroundColor?: Color;\n  headerBreakoutColor?: Color;\n  headerBackgroundImage?: string;\n  paddingTop?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  paddingBottom?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  paddingLeft?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  paddingRight?: 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl';\n  className?: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const Header: React.FC<HeaderProps> = ({\n  children,\n  borderColor,\n  borderWidth = 'none',\n  borderRadius = 'none',\n  headerBackgroundColor,\n  headerBreakoutColor,\n  headerBackgroundImage,\n  paddingBottom = 'sm',\n  paddingTop = 'sm',\n  paddingLeft = 'sm',\n  paddingRight = 'sm',\n  className = 'connect__grid',\n  dataTestId,\n}) => {\n  const headerProps: React.CSSProperties = {};\n\n  const headerStyleMappings: { [key: string]: any } = {\n    '--theme__connect-header-border-c': borderColor && `var(--connect__${borderColor})`,\n    '--theme__connect-header-border-w': borderWidth && `var(--connect__spacer-${borderWidth})`,\n    '--theme__connect-header-border-r': borderRadius && `var(--connect__spacer-${borderRadius})`,\n    '--theme__connect-header-bg-color':\n      headerBackgroundColor && `var(--connect__${headerBackgroundColor})`,\n    '--theme__connect-header-breakout-bg':\n      headerBreakoutColor && `var(--connect__${headerBreakoutColor})`,\n    '--theme__connect-header-bg-image': headerBackgroundImage && `url(${headerBackgroundImage})`,\n    '--theme__connect-header-padding-b': paddingBottom && `var(--connect__spacer-${paddingBottom})`,\n    '--theme__connect-header-padding-t': paddingTop && `var(--connect__spacer-${paddingTop})`,\n    '--theme__connect-header-padding-l': paddingLeft && `var(--connect__spacer-${paddingLeft})`,\n    '--theme__connect-header-padding-r': paddingRight && `var(--connect__spacer-${paddingRight})`,\n  };\n\n  Object.entries(headerStyleMappings).forEach(([key, value]) => {\n    if (value) {\n      headerProps[key] = value;\n    }\n  });\n\n  return (\n    <header className={`connect__header ${className}`} data-testid={dataTestId} style={headerProps}>\n      {children}\n    </header>\n  );\n};\n","import React from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type ImageProps = {\n  imageSrc: string;\n  altText: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\n// const defaultImageSrc = '../../images/zelda.jpg';\n\nconst defaultImageSrc =\n  import.meta.env.PROD === true && import.meta.env.VITE_ENV !== 'chromatic'\n    ? '/node_modules/@connect/connect-design-system/dist/images/zelda.jpg'\n    : '/images/zelda.jpg';\n\nexport const Image: React.FC<ImageProps> = ({ imageSrc, altText, dataTestId }) => {\n  return <img src={imageSrc || defaultImageSrc} alt={altText} data-testid={dataTestId} />;\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type InputBoxProps = {\n  type: 'checkbox' | 'radio';\n  id: string;\n  name: string;\n  children: React.ReactNode;\n  checked?: boolean;\n  disabled?: boolean;\n  correct?: boolean;\n  incorrect?: boolean;\n  answerShown?: boolean;\n  noShadow?: boolean;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport function InputBox({\n  type,\n  id,\n  name,\n  children,\n  checked,\n  disabled,\n  correct,\n  incorrect,\n  answerShown,\n  noShadow = false,\n  dataTestId,\n}: InputBoxProps) {\n  const inputStates = `${correct ? 'connect__input-correct' : ''} ${incorrect ? 'connect__input-incorrect' : ''} ${answerShown ? 'connect__mcq-label-shown' : ''} ${noShadow ? 'connect__input-no-shadow' : ''}`;\n\n  const checkRef = useRef<HTMLInputElement>(null);\n  const [isChecked, setIsChecked] = useState(checked || false);\n  const handleChange = () => {\n    setIsChecked(checkRef.current?.checked ?? false);\n  };\n\n  useEffect(() => {\n    setIsChecked(checked || false);\n  }, [checked]);\n\n  return (\n    <div className=\"connect__input-label-wrapper\">\n      <input\n        ref={checkRef}\n        type={type}\n        id={id}\n        className={`connect__input ${inputStates}`}\n        name={name}\n        checked={isChecked}\n        onChange={handleChange}\n        disabled={disabled}\n        data-testid={dataTestId}\n      />\n      <label htmlFor={id} className={`connect__checkbox-label ${inputStates}`}>\n        {children}\n      </label>\n    </div>\n  );\n}\n","// @ts-ignore: React is used implicitly in JSX\nimport React, { useState } from 'react'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type InputTextProps = {\n  correct: boolean;\n  incorrect?: boolean;\n  answerShown?: boolean;\n  number?: boolean;\n  disabled?: boolean;\n  defaultText?: string | number;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport function InputText({\n  correct,\n  incorrect,\n  answerShown,\n  number,\n  disabled,\n  defaultText,\n  dataTestId,\n}: InputTextProps) {\n  const inputStates = `${correct ? 'connect__input-correct' : ''} ${incorrect ? 'connect__input-incorrect' : ''} ${answerShown ? 'connect__input-shown' : ''}`;\n\n  const isNumber = number ? 'number' : 'text';\n\n  const [text, setText] = useState(defaultText);\n\n  let inputAriaLabel = 'Input field';\n  if (correct) {\n    inputAriaLabel += ', marked as correct';\n  } else if (incorrect) {\n    inputAriaLabel += ', marked as incorrect';\n  } else if (answerShown) {\n    inputAriaLabel += ', answer shown';\n  }\n\n  const shouldBeDisabled = correct || incorrect || answerShown || disabled;\n\n  return (\n    <label className={`connect__icon-wrapper ${inputStates}`}>\n      <input\n        type={isNumber}\n        className={`connect__input ${inputStates}`}\n        disabled={shouldBeDisabled}\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n        aria-label={inputAriaLabel}\n        data-testid={dataTestId}\n      />\n    </label>\n  );\n}\n","import React from 'react';\nimport { GradeBand } from '../../enum/gradeband';\n\nexport type ListProps = {\n  data: { content: React.ReactNode }[];\n  listType?: 'ordered' | 'unordered';\n  variants?: 'none' | 'circle' | 'disc' | 'square' | 'alpha' | 'decimal' | 'roman';\n  className?: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const List: React.FC<ListProps> = ({\n  data,\n  listType = 'unordered',\n  variants = '',\n  className = '',\n  dataTestId,\n}) => {\n  const variantClass = variants !== 'none' ? `connect__list-${variants}` : '';\n  data = data || [];\n\n  return listType === 'ordered' ? (\n    <ol className={`connect__list ${variantClass} ${className}`} data-testid={dataTestId}>\n      {data.map((item, index) => (\n        <li key={index} className=\"connect__list-item\">\n          {item.content}\n        </li>\n      ))}\n    </ol>\n  ) : (\n    <ul className={`connect__list  ${variantClass} ${className}`} data-testid={dataTestId}>\n      {data.map((item, index) => (\n        <li key={index} className=\"connect__list-item\">\n          {item.content}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useRef, useState, useEffect } from 'react';\nimport { GradeBand } from '../../enum/gradeband';\n\nexport type MultipleChoiceQuestionProp = {\n  type: 'checkbox' | 'radio';\n  id: string;\n  name: string;\n  children: React.ReactNode;\n  checked?: boolean;\n  disabled?: boolean;\n  answerShown?: boolean;\n  correct?: boolean;\n  incorrect?: boolean;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport function MultipleChoiceQuestion({\n  type,\n  id,\n  name,\n  children,\n  checked,\n  disabled,\n  correct,\n  incorrect,\n  answerShown,\n  dataTestId,\n}: MultipleChoiceQuestionProp) {\n  const inputStates = `${correct ? 'connect__input-correct' : ''} ${incorrect ? 'connect__input-incorrect' : ''} ${answerShown ? 'connect__mcq-label-shown' : ''}`;\n\n  const checkRef = useRef<HTMLInputElement>(null);\n  const [isChecked, setIsChecked] = useState(checked || false);\n  const handleChange = () => {\n    setIsChecked(checkRef.current?.checked ?? false);\n  };\n\n  useEffect(() => {\n    setIsChecked(checked || false);\n  }, [checked]);\n\n  let inputAriaLabel = 'Multiple Choice Question';\n  if (correct) {\n    inputAriaLabel += ', marked as correct';\n  } else if (incorrect) {\n    inputAriaLabel += ', marked as incorrect';\n  } else if (answerShown) {\n    inputAriaLabel += ', answer shown';\n  }\n\n  return (\n    <div className=\"connect__mcq-label-wrapper\">\n      <input\n        ref={checkRef}\n        type={type}\n        id={id}\n        className={`connect__input ${inputStates}`}\n        name={name}\n        checked={isChecked}\n        onChange={handleChange}\n        disabled={disabled}\n        aria-label={inputAriaLabel}\n        data-testid={dataTestId}\n      />\n      <label className={`connect__mcq-label ${inputStates}`} htmlFor={id}>\n        {children}\n      </label>\n    </div>\n  );\n}\n","import React from 'react';\nimport { GradeBand } from '../../enum/gradeband';\n\nexport type PaperProps = {\n  children: React.ReactNode;\n  element?: 'section' | 'article' | 'main' | 'aside' | 'div';\n  elevation?: 0 | 1 | 2;\n  roundedCorner?: boolean;\n  className?: string;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const Paper: React.FC<PaperProps> = ({\n  children,\n  element: Component = 'div',\n  elevation,\n  roundedCorner = false,\n  className,\n  dataTestId,\n}) => {\n  const paperClassName = [\n    'connect__paper',\n    elevation !== undefined ? `connect__elevation-${elevation}` : '',\n    roundedCorner ? 'connect__rounded-corners' : '',\n    className ? className : '',\n  ]\n    .filter(Boolean)\n    .join(' ');\n\n  return (\n    <Component className={paperClassName} data-testid={dataTestId}>\n      {children}\n    </Component>\n  );\n};\n","import React from 'react';\nimport { Color } from '../../utils/colors';\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type ProgressBarProps = {\n  value: number;\n  max?: number;\n  backgroundColor?: Color;\n  barColor?: Color;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const ProgressBar: React.FC<ProgressBarProps> = ({\n  value,\n  max = 100,\n  barColor,\n  backgroundColor,\n  dataTestId,\n}) => {\n  const customStyles: React.CSSProperties & {\n    '--theme__progress-bg'?: string;\n    '--theme__progress-color'?: string;\n  } = {\n    '--theme__progress-bg': `var(--connect__${backgroundColor})`,\n    '--theme__progress-color': `var(--connect__${barColor})`,\n  };\n\n  return (\n    <div className=\"connect__progress-wrapper\">\n      <progress\n        className=\"connect__progress\"\n        value={value}\n        max={max}\n        style={customStyles}\n        data-testid={dataTestId}\n      >\n        {value + '%'}\n      </progress>\n    </div>\n  );\n};\n","import { createContext } from 'react';\nimport { GradeBand } from '../enum/gradeband';\n\nexport const GradeBandContext = createContext<GradeBand | undefined>(undefined);\n","export enum GradeBand {\n  //K_2 = 'k-2',\n  G2_3 = 'g2-3',\n  //G3_5 = 'g3-5',\n  G4_5 = 'g4-5',\n  G6_8 = 'g6-8',\n  G9_12 = 'g9-12',\n  Teach = 'teach',\n}\n","import React, { useEffect, useRef } from 'react';\nimport { GradeBandContext } from '../../context/GradeBandContext';\nimport { GradeBand } from '../../enum/gradeband';\nimport '@connect/hmh-rive';\n\nexport type RiveSimpleProps = {\n  gradeBand?: GradeBand;\n  srcDefault?: string;\n  src23?: string;\n  src45?: string;\n  src68?: string;\n  src912?: string;\n  descDefault?: string;\n  desc23?: string;\n  desc45?: string;\n  desc68?: string;\n  desc912?: string;\n  stateMachine?: string;\n  artboard?: string;\n  autoplay?: boolean;\n  hidePlayPause?: boolean;\n  playState?: string;\n  contain?: boolean;\n  height?: boolean;\n  inputs?: any;\n};\n\n// Define the type for the custom <hmh-rive> element\ninterface HmhRiveElement extends HTMLElement {\n  inputs?: { [key: string]: { value: any } };\n  setAttribute(key: string, value: any): void;\n}\n\nexport const RiveSimple: React.FC<RiveSimpleProps> = ({\n  gradeBand,\n  srcDefault,\n  src23,\n  src45,\n  src68,\n  src912,\n  descDefault,\n  desc23,\n  desc45,\n  desc68,\n  desc912,\n  stateMachine = 'State Machine 1',\n  artboard,\n  autoplay = true,\n  hidePlayPause,\n  playState = 'playing',\n  contain = false,\n  height,\n  inputs = {},\n}) => {\n  // Use the custom type for the ref\n  const hmhRiveRef = useRef<HmhRiveElement>(null);\n\n  const getValuesForGradeBand = () => {\n    switch (gradeBand) {\n      case GradeBand.G2_3:\n        return {\n          riveSrc: src23 || srcDefault || '',\n          altText: desc23 || descDefault || '',\n        };\n      case GradeBand.G4_5:\n        return {\n          riveSrc: src45 || srcDefault || '',\n          altText: desc45 || descDefault || '',\n        };\n      case GradeBand.G6_8:\n        return {\n          riveSrc: src68 || srcDefault || '',\n          altText: desc68 || descDefault || '',\n        };\n      case GradeBand.G9_12:\n        return {\n          riveSrc: src912 || srcDefault || '',\n          altText: desc912 || descDefault || '',\n        };\n      default:\n        return {\n          riveSrc: srcDefault || '',\n          altText: descDefault || '',\n        };\n    }\n  };\n\n  const { riveSrc: finalRiveSrc, altText: finalAltText } = getValuesForGradeBand();\n\n  // Update inputs on the <hmh-rive> element whenever they change\n  useEffect(() => {\n    if (hmhRiveRef.current) {\n      console.log('Updating inputs on hmhRiveRef:', inputs);\n      Object.entries(inputs).forEach(([key, value]) => {\n        hmhRiveRef.current?.setAttribute(key, value);\n        if (hmhRiveRef.current?.inputs?.[key]) {\n          hmhRiveRef.current.inputs[key].value = value;\n        }\n      });\n    }\n  }, [inputs]);\n  \n  return (\n    <GradeBandContext.Provider value={gradeBand}>\n      <hmh-rive\n        ref={hmhRiveRef}\n        src={finalRiveSrc}\n        desc={finalAltText}\n        autoplay={autoplay}\n        play-state={playState}\n        hidePlayPause={hidePlayPause}\n        stateMachine={stateMachine}\n        artboard={artboard}\n        {...(contain && { contain })}\n        {...(height && { height })}\n        inputs\n      ></hmh-rive>\n    </GradeBandContext.Provider>\n  );\n};\n","// @ts-ignore: React is used implicitly in JSX\nimport React, { useState, useRef, ChangeEvent } from 'react'; // eslint-disable-line @typescript-eslint/no-unused-vars\nimport { GradeBand } from 'src/enum/gradeband';\n\nexport type SelectBoxProps = {\n  data: { value: string; label: string | number }[];\n  defaultValue?: string;\n  correct?: boolean;\n  incorrect?: boolean;\n  answerShown?: boolean;\n  disabled?: boolean;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport function SelectBox({\n  data,\n  defaultValue,\n  correct,\n  incorrect,\n  answerShown,\n  disabled,\n  dataTestId,\n}: SelectBoxProps) {\n  const [select, setSelect] = useState(defaultValue || '');\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setSelect(event.target.value);\n  };\n\n  let inputAriaLabel = 'Select Item';\n  if (correct) {\n    inputAriaLabel += ', marked as correct';\n  } else if (incorrect) {\n    inputAriaLabel += ', marked as incorrect';\n  } else if (answerShown) {\n    inputAriaLabel += ', answer shown';\n  }\n\n  const wrapperClasses = `connect__icon-wrapper ${correct ? 'connect__icon-correct' : ''} ${incorrect ? 'connect__icon-incorrect' : ''} ${answerShown ? 'connect__icon-shown' : ''}`;\n  const selectClasses = `connect__select ${correct ? 'connect__select-correct' : ''} ${incorrect ? 'connect__select-incorrect' : ''}${answerShown ? 'connect__select-shown' : ''}`;\n  const shouldBeDisabled = correct || incorrect || answerShown || disabled;\n\n  return (\n    <label className={wrapperClasses}>\n      <select\n        ref={selectRef}\n        className={selectClasses}\n        value={select}\n        aria-label={inputAriaLabel}\n        onChange={handleChange}\n        disabled={shouldBeDisabled}\n        data-testid={dataTestId}\n      >\n        <SelectBoxOptions data={data} />\n      </select>\n    </label>\n  );\n}\n\nfunction SelectBoxOptions<T extends string | number>({\n  data,\n}: {\n  data: { value: string; label: T }[];\n}) {\n  return (\n    <>\n      {data.map((option, index) => (\n        <option key={index} value={option.value}>\n          {option.label}\n        </option>\n      ))}\n    </>\n  );\n}\n","import React from 'react';\nimport { GradeBand } from 'src/enum/gradeband';\nimport { Paper } from '../Paper/Paper';\nimport { ButtonMenuProvider } from '../../context/ButtonMenuContext';\n\nexport type SidebarProps = {\n  children: React.ReactNode;\n  dataTestId?: string;\n  gradeBand?: GradeBand;\n};\n\nexport const Sidebar: React.FC<SidebarProps> = ({ children }) => {\n  return (\n    <ButtonMenuProvider>\n      <Paper element=\"aside\" elevation={2} className=\"connect__aside\">\n        {children}\n      </Paper>\n    </ButtonMenuProvider>\n  );\n};\n","import React from 'react';\nimport { Figure, FigureProps } from '../Figure/Figure';\nimport { Blockquote, BlockquoteProps } from '../Blockquote/Blockquote';\n\nexport type SingleBlockquoteProps = BlockquoteProps & FigureProps;\n\nexport const SingleBlockquote: React.FC<SingleBlockquoteProps> = ({\n    children,\n    caption,\n    cite\n}) => {\n    return (\n        <Figure caption={caption} cite={cite}>\n            <Blockquote>{children}</Blockquote>\n        </Figure>\n    )\n}","import React from 'react';\nimport { Figure, FigureProps } from '../Figure/Figure';\nimport { Image, ImageProps } from '../Image/Image';\n\nexport type SingleImageProps = ImageProps & FigureProps;\n\nexport const SingleImage: React.FC<SingleImageProps> = ({\n    imageSrc,\n    altText,\n    caption,\n    cite\n}) => {\n    return (\n        <Figure caption={caption} cite={cite}>\n            <Image imageSrc={imageSrc} altText={altText} />\n        </Figure>\n    )\n}","import React, { ReactElement, useEffect } from 'react';\nimport { GradeBand } from '../enum/gradeband';\n\nconst themeClassName = {\n  // [GradeBand.K_2]: 'connect__k2',\n  [GradeBand.G2_3]: 'connect__g23',\n  // [GradeBand.G3_5]: 'connect__g35',\n  [GradeBand.G4_5]: 'connect__g45',\n  [GradeBand.G6_8]: 'connect__g68',\n  [GradeBand.G9_12]: 'connect__g912',\n  [GradeBand.Teach]: 'connect__teach',\n};\nconst allClassNames = Object.values(themeClassName);\n\nexport function ConnectTheme({\n  children,\n  gradeBand,\n  themeWrapperRef,\n}: {\n  children: ReactElement;\n  gradeBand: GradeBand;\n  themeWrapperRef: React.RefObject<HTMLElement>;\n}) {\n  useEffect(() => {\n    themeWrapperRef?.current?.classList.remove(...allClassNames);\n    themeWrapperRef?.current?.classList.add(themeClassName[gradeBand]);\n  }, [gradeBand, themeWrapperRef]);\n\n  return <>{children}</>;\n}\n","import React from 'react';\n\ntype GapSizes = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n\ninterface GridProps {\n  children: React.ReactNode;\n  gap?: GapSizes;\n  gutter?: boolean | GapSizes;\n  className?: string;\n  style?: string;\n  dataTestId?: string;\n}\n\nconst Grid: React.FC<GridProps> = ({ children, gap, gutter, className, dataTestId }) => {\n  // Supported gaps are our spacer sizes\n  const gapSizes: { [key in GapSizes]: string } = {\n    xs: 'var(--connect__spacer-xs)',\n    sm: 'var(--connect__spacer-sm)',\n    md: 'var(--connect__spacer-md)',\n    lg: 'var(--connect__spacer-lg)',\n    xl: 'var(--connect__spacer-xl)',\n  };\n\n  // If gap is not provided or the value is not defined in gapSizes, default to 'var(--grid-gap)'\n  const gridGap = gap ? gapSizes[gap] : 'var(--grid-gap)';\n\n  const styles = {\n    gap: gridGap,\n    width: 'var(--theme__connect-grid-width, 100%)',\n  };\n\n  const additionalClassName = gutter === true ? 'connect__grid-gutter' : '';\n\n  return (\n    <section\n      className={`${className || ''} connect__grid ${additionalClassName}`}\n      style={styles}\n      data-testid={dataTestId}\n    >\n      {children}\n    </section>\n  );\n};\n\nexport default Grid;\n","import React from 'react';\n\ninterface BreakpointValues {\n  startCol?: number;\n  spanCol?: number;\n  rowSpan?: number;\n}\n\ninterface GridItemProps {\n  children: React.ReactNode;\n  xs?: BreakpointValues;\n  sm?: BreakpointValues;\n  md?: BreakpointValues;\n  lg?: BreakpointValues;\n  xl?: BreakpointValues;\n  className?: string;\n  dataTestId?: string;\n}\n\nconst GridItem: React.FC<GridItemProps> = ({\n  children,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  className,\n  dataTestId,\n}) => {\n  // Helper function to inherit values\n  const getInheritedValue = (\n    currentSize: BreakpointValues | undefined,\n    previousSize: BreakpointValues,\n    property: keyof BreakpointValues,\n    defaultValue: any,\n  ) => {\n    return currentSize?.[property] ?? previousSize[property] ?? defaultValue;\n  };\n\n  const style: { [key: string]: any } = {};\n\n  // Apply styles based on props for each breakpoint\n  const breakpoints = { xs, sm, md, lg, xl };\n  let previousBreakpoint: BreakpointValues = {};\n\n  Object.entries(breakpoints).forEach(([breakpoint, values]) => {\n    if (values) {\n      const startCol = getInheritedValue(values, previousBreakpoint, 'startCol', 1);\n      const spanCol = getInheritedValue(values, previousBreakpoint, 'spanCol', 12);\n      const rowSpan = getInheritedValue(values, previousBreakpoint, 'rowSpan', null); // Default to null if not specified\n\n      // Set CSS variables for start column, span, and row span\n      style[`--${breakpoint}-start-col`] = startCol;\n      style[`--${breakpoint}-span-col`] = spanCol;\n      if (rowSpan) {\n        style[`--${breakpoint}-row-span`] = rowSpan; // Apply row span if provided\n      }\n\n      previousBreakpoint = { startCol, spanCol, rowSpan }; // Update previousBreakpoint for inheritance\n    }\n  });\n\n  // Construct the class string based on the breakpoints provided\n  const classes = `connect__grid-item ${className || ''} ${Object.keys(breakpoints)\n    .filter((bp) => breakpoints[bp])\n    .map((bp) => `connect__${bp}`)\n    .join(' ')}`;\n\n  // Wrap children in a div and apply the styles and class\n  return (\n    <div className={classes} style={style} data-testid={dataTestId}>\n      {children}\n    </div>\n  );\n};\n\nexport default GridItem;\n","import React from 'react';\n\ninterface BreakpointValues {\n  direction?: 'row' | 'column';\n  spacing?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  alignItems?: 'start' | 'center' | 'end' | 'baseline' | 'stretch';\n  justifyContent?: 'start' | 'center' | 'end' | 'space-between' | 'space-around' | 'space-evenly';\n  flexWrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  paddingX?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  paddingY?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n}\n\ninterface StackProps {\n  children: React.ReactNode;\n  xs?: BreakpointValues;\n  sm?: BreakpointValues;\n  md?: BreakpointValues;\n  lg?: BreakpointValues;\n  xl?: BreakpointValues;\n  className?: string;\n  dataTestId?: string;\n}\n\nexport const Stack: React.FC<StackProps> = ({\n  children,\n  xs,\n  sm,\n  md,\n  lg,\n  xl,\n  className,\n  dataTestId,\n}) => {\n  const style: React.CSSProperties = {};\n  const breakpoints = { xs, sm, md, lg, xl };\n  let previousBreakpoint: BreakpointValues = {};\n\n  // Construct a list of classes based on the breakpoints provided\n  const breakpointClasses = Object.keys(breakpoints)\n    .filter((bp) => breakpoints[bp as keyof typeof breakpoints])\n    .map((bp) => `connect__stack-${bp}`)\n    .join(' ');\n\n  Object.entries(breakpoints).forEach(([breakpoint, values]) => {\n    if (values) {\n      // Only apply a property if it is explicitly set or inherited from a previous breakpoint\n      const direction = values.direction ?? previousBreakpoint.direction ?? 'column';\n      const spacingKey = values.spacing ?? previousBreakpoint.spacing ?? 'xs';\n      const alignItems = values.alignItems ?? previousBreakpoint.alignItems ?? 'stretch';\n      const justifyContent = values.justifyContent ?? previousBreakpoint.justifyContent ?? 'start';\n      const flexWrap = values.flexWrap ?? previousBreakpoint.flexWrap ?? 'wrap';\n      const paddingX = values.paddingX ?? previousBreakpoint.paddingX ?? '';\n      const paddingY = values.paddingY ?? previousBreakpoint.paddingY ?? '';\n      // Now, only update the style object if the current breakpoint explicitly sets the property\n      if (values.direction) style[`--${breakpoint}-direction`] = direction;\n      if (values.spacing) style[`--${breakpoint}-spacing`] = `var(--connect__spacer-${spacingKey})`;\n      if (values.alignItems) style[`--${breakpoint}-alignItems`] = alignItems;\n      if (values.justifyContent) style[`--${breakpoint}-justifyContent`] = justifyContent;\n      if (values.flexWrap) style[`--${breakpoint}-flexWrap`] = flexWrap;\n      if (values.paddingX) style[`--${breakpoint}-paddingX`] = `var(--connect__spacer-${paddingX})`;\n      if (values.paddingY) style[`--${breakpoint}-paddingY`] = `var(--connect__spacer-${paddingY})`;\n      // Update previousBreakpoint for inheritance\n      previousBreakpoint = { ...previousBreakpoint, ...values };\n    }\n  });\n\n  const classes = `connect__stack ${className || ''} ${breakpointClasses}`;\n\n  return (\n    <div className={classes} style={style} data-testid={dataTestId}>\n      {children}\n    </div>\n  );\n};\n"],"names":["Blockquote","children","React","Icon","id","size","fill","stroke","opacity","focusable","className","dataTestId","fillColorVariable","strokeColorVariable","spriteUrl","Button","primary","title","disabled","correct","incorrect","submit","clickHandler","iconId","iconSize","iconPosition","iconOpacity","ariaLabel","additionalClass","classNames","iconElement","ButtonMenuContext","createContext","ButtonMenuProvider","clickedButtonId","setClickedButtonId","useState","useButtonMenuContext","context","useContext","ButtonMenu","clickedClass","handleClick","Typography","Component","color","family","style","weight","letterSpacing","textAlign","textTransform","ariaLive","typoProps","colorVariable","weightVariable","t","e","n","a","r","i","o","s","u","c","l","h","f","d","p","v","m","y","g","b","E","C","T","P","A","w","_","R","L","S","M","W","j","O","x","I","F","k","D","N","U","$","Y","X","z","H","G","V","q","Mn","On","xn","K","Z","Q","tt","et","nt","rt","it","at","ot","st","ut","ct","lt","Ut","ht","Pt","ft","dt","pt","vt","mt","yt","gt","bt","Nt","Ot","Rt","jt","wt","_t","At","Ct","Et","Tt","Lt","Xt","St","Mt","It","En","xt","Ft","kt","Dt","Bt","$t","Wt","Yt","zt","Ht","Gt","Vt","qt","Jt","Kt","Zt","Qt","te","ee","ne","re","ie","ae","oe","se","ue","ce","le","he","fe","de","pe","ve","me","Fn","Ln","ye","ge","be","we","_e","Ae","Ce","Ee","Te","Pe","Re","Le","Se","Me","je","Oe","Ie","xe","Fe","ke","De","Ne","Ue","Be","$e","nn","We","Ye","Xe","ze","He","Ge","qe","Je","Ke","Ze","Qe","tn","en","rn","an","on","sn","un","cn","ln","hn","fn","dn","pn","vn","mn","yn","gn","bn","wn","_n","An","Cn","Tn","Pn","Rn","In","Sn","jn","kn","ButtonRive","animSrc","stateMachine","buttonText","playState","ButtonProps2","riveRef","useRef","prefersReducedMotion","setPrefersReducedMotion","useEffect","mediaQuery","handleChange","isTypographyHidden","ButtonSplit","data","open","setOpen","drop","handleClickOutside","event","handleToggle","handleKeyDown","ButtonSplitMenu","option","FigCaption","caption","cite","Figure","CardHeader","headerElement","CardMain","CardFooter","Card","image","headerContent","mainContent","footerContent","Chip","num","totalNum","Divider","orientation","Footer","footerBreakoutColor","footerPosition","footerPositionTop","footerHeight","footerWidth","footerBreakoutLeft","footerBreakoutWidth","footerPaddingTop","footerPaddingRight","footerPaddingLeft","footerPaddingBottom","footerMarginTop","footerProps","footerStyleMappings","key","value","Header","borderColor","borderWidth","borderRadius","headerBackgroundColor","headerBreakoutColor","headerBackgroundImage","paddingBottom","paddingTop","paddingLeft","paddingRight","headerProps","headerStyleMappings","defaultImageSrc","Image$1","imageSrc","altText","InputBox","type","name","checked","answerShown","noShadow","inputStates","checkRef","isChecked","setIsChecked","_a","InputText","number","defaultText","isNumber","text","setText","inputAriaLabel","shouldBeDisabled","List","listType","variants","variantClass","item","index","MultipleChoiceQuestion","Paper","elevation","roundedCorner","paperClassName","ProgressBar","max","barColor","backgroundColor","customStyles","GradeBandContext","GradeBand","GradeBand2","RiveSimple","gradeBand","srcDefault","src23","src45","src68","src912","descDefault","desc23","desc45","desc68","desc912","artboard","autoplay","hidePlayPause","contain","height","inputs","hmhRiveRef","getValuesForGradeBand","finalRiveSrc","finalAltText","_c","_b","SelectBox","defaultValue","select","setSelect","selectRef","wrapperClasses","selectClasses","SelectBoxOptions","Sidebar","SingleBlockquote","SingleImage","themeClassName","allClassNames","ConnectTheme","themeWrapperRef","Grid","gap","gutter","styles","additionalClassName","GridItem","xs","sm","md","lg","xl","getInheritedValue","currentSize","previousSize","property","breakpoints","previousBreakpoint","breakpoint","values","startCol","spanCol","rowSpan","classes","bp","Stack","breakpointClasses","direction","spacingKey","alignItems","justifyContent","flexWrap","paddingX","paddingY"],"mappings":"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","x_google_ignoreList":[7]}